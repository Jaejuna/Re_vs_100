{"version":3,"sources":["firebase.js","assets/fonts/labdigital.ttf","styles/fonts.js","assets/images/backgroundMobile.jpg","styles/media.js","assets/images/background.jpg","materials/Box.jsx","MainWrapper.js","styles/theme.js","materials/Button.js","materials/Input.js","assets/images/challenger.png","routes/SignIn.jsx","assets/images/quizLogo.png","routes/Auth.jsx","Quizs.js","components/Board.jsx","hooks/useDidMountEffect.js","materials/Choice.jsx","components/Submit.jsx","components/Quiz.jsx","components/Chance.jsx","components/Timer.jsx","routes/Question.jsx","routes/Survivor.jsx","assets/images/frame.png","routes/Descript.jsx","components/Router.js","components/App.jsx","index.jsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storage","createGlobalStyle","LabDigital","sizes","giant","huge","bigDesktop","desktop","tablet","thone","phablet","phone","tiny","media","Object","keys","reduce","accumulator","label","emSize","first","css","Box","styled","div","left","Wrapper","bg_mobile","MainBox","MainWrapper","children","calcRem","size","deviceSizes","mobileS","mobileM","mobileL","tabletL","theme","fontSizes","small","base","lg","xl","xxl","xxxl","titleSize","colors","main","text","border","selected","answer","answerBorder","answerText","primary","accent","disabled","secondary","device","Button","button","fullWidth","bold","fontSize","color","colorset","Input","input","InputWrapper","Img","img","SignIn","userObj","currentInfo","useState","name","setName","alias","setAlias","number","setNumber","toQuiz","onChange","event","target","value","onSubmit","a","preventDefault","collection","doc","uid","set","isAdmin","available","quiz_1","quiz_2","quiz_3","quiz_4","quiz_5","quiz_6","quiz_7","quiz_8","alert","window","location","reload","src","challenger","type","placeholder","required","pattern","MyButton","Auth","isLoggedIn","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","quizLogo","onClick","Quizs","no","question","candidates","show","Bar","survived","Board","showAnswer","part","participants","corrects","setCorrects","currentQuiz","useEffect","onSnapshot","snapshot","people","docs","map","data","filter","user","length","useDidMountEffect","func","deps","didMount","useRef","current","ChoiceButton","isAnswer","isSelected","Choice","props","Choices","Submit","quiz","doc_user_id","isBlocked","myAnswer","setMyAnswer","onChoiceClicked","ans","submitMyAnswer","update","setTimeout","QuestionWrapper","Quiz","Modal","Container","BarChart","perc","Chance","visible","toggle","b","c","sum","Guage","GuageBody","GuageFill","offset","rgbHex","GuageCover","Timer","seconds","setOffset","parseInt","TopWrapper","QuizWrapper","ButtonsWrapper","Question","showHint","startedTimestamp","setParticipants","setSurv","setSeconds","display","setDisplay","toggleHint","prev","survCount","p","onPrevClicked","Date","getTime","onNextClicked","isDone","onClickHint","block","countdown","setInterval","now","passed","clearInterval","usersRef","where","get","then","querySnapshot","batch","console","log","forEach","docRef","commit","catch","error","Crown","Surv","Survivor","lastSurv","setLastSurv","surv","x","i","arr","icon","faCrown","Description","Explanation","Descript","setPart","onClickToQuiz","qrcode","AppRouter","hasAccount","exact","path","App","init","setInit","setUserObj","setHasAccount","docUserId","setDocUserId","setCurrentInfo","onAuthStateChanged","users","Boolean","id","e","snap","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a50005ff.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\"\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCNEEZVWLepSVn_ennOWsbwjL8E2wqnbpQ\",\n    authDomain: \"re-vs-100-8ec8b.firebaseapp.com\",\n    projectId: \"re-vs-100-8ec8b\",\n    storageBucket: \"re-vs-100-8ec8b.appspot.com\",\n    messagingSenderId: \"400681423336\",\n    appId: \"1:400681423336:web:13667d56d28179863d545d\"\n}\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","export default __webpack_public_path__ + \"static/media/labdigital.a204f34c.ttf\";","import { createGlobalStyle } from \"styled-components\";\nimport LabDigital from \"../assets/fonts/labdigital.ttf\";\n\nexport default createGlobalStyle`\n    @font-face {\n        font-family: \"Lab Digital\";\n        src: local(\"Lab Digital\"),\n        url(${LabDigital}) format('woff');\n        font-weight: 300;\n        font-style: normal;\n    }\n`;","export default __webpack_public_path__ + \"static/media/backgroundMobile.619b31bf.jpg\";","import { css } from \"styled-components\"\n\nconst sizes = {\n  giant: 1920,\n  huge: 1440,\n  bigDesktop: 1200,\n  desktop: 1000,\n  tablet: 768,\n  thone: 600,\n  phablet: 480,\n  phone: 376,\n  tiny: 330,\n}\n\n// Iterate through the sizes and create a media template\n// Usage:\n// const StyledWrapper = styled.div`\n//   ${media.huge`margin-left: 20px;`}\n// `\nconst media = Object.keys(sizes).reduce(\n  (accumulator, label) => {\n    const emSize = sizes[label] / 16\n    accumulator[label] = (first) => css`\n      @media (max-width: ${emSize}em) {\n        ${css(first)}\n      }\n    `\n    return accumulator\n  },{})\n\nexport default media;","export default __webpack_public_path__ + \"static/media/background.5a24be7a.jpg\";","import styled from 'styled-components';\n\nconst Box = styled.div`\n    display: flex;\n    justify-content: ${({left}) => left ? 'left' : 'center'};\n    align-items: center;\n`\nexport default Box;","import React from \"react\";\nimport styled from \"styled-components\";\nimport GlobalFont from \"./styles/fonts\";\nimport bg_mobile from \"./assets/images/backgroundMobile.jpg\";\nimport bg from \"./assets/images/background.jpg\";\nimport media from \"./styles/media\";\nimport Box from \"./materials/Box\";\n\nconst Wrapper = styled.div`\n    width: 100%;\n    min-height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    /* background: radial-gradient(circle, rgba(238,174,202,1) 0%, rgba(148,187,233,1) 100%); */\n    background-image: url(${bg_mobile});\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    margin: 0;\n`\nconst MainBox = styled(Box)`\n    width:min(1470px, calc(100% - 30px));\n    padding: 20px 0 40px 0;\n    margin: 0;\n`\n// 데스크탑 이상 사이즈의 화면에서 양측 여백을 관리하는 Wrapper\nconst MainWrapper = ({children}) => (\n\n    <Wrapper>\n        <GlobalFont />\n        <MainBox>\n            {children}\n        </MainBox>\n    </Wrapper>\n);\nexport default MainWrapper;","// 여기는 전체 테마에 대한 내용!\n\nconst colors = {\n    main: '#f6e9ff',\n    text: '#333',\n    border: '#666',\n    selected: `#d9afff`,\n    answer: '#b8cbff',\n    answerBorder: '#eac2efc',\n    answerText: '#2a50b8',\n    primary: {\n      main: '#303f9f',\n      text: `#fff`,\n      border: `rgba(0, 0, 0, 0.5)`,\n      accent: '#666ad1',\n      disabled: `#777aef`\n    },\n    secondary:{\n      main: `#464646`,\n      text: `rgba(255,255,255,0.85)`,\n      border: `rgba(255,255,255,0.15)`,\n      accent: `#5f5f5f`,\n      disabled: '#4A4A4A',\n    },\n};\n\n//여기 밑에는 걍 복붙한거ㅎㅎㅎ\n\nconst calcRem = (size) => `${size / 16}rem`;\n\nconst fontSizes = {\n  small: calcRem(14),\n  base: calcRem(16),\n  lg: calcRem(18),\n  xl: calcRem(20),\n  xxl: calcRem(22),\n  xxxl: calcRem(24),\n  titleSize: calcRem(50),\n};\n\nconst deviceSizes = {\n  mobileS: 320,\n  mobileM: 375,\n  mobileL: 450,\n  tablet: 768,\n  tabletL: 1024,\n};\n\nconst device = {\n  mobileS: `only screen and (max-width: ${deviceSizes.mobileS}px)`,\n  mobileM: `only screen and (max-width: ${deviceSizes.mobileM}px)`,\n  mobileL: `only screen and (max-width: ${deviceSizes.mobileL}px)`,\n  tablet: `only screen and (max-width: ${deviceSizes.tablet}px)`,\n  tabletL: `only screen and (max-width: ${deviceSizes.tabletL}px)`,\n};\n\nconst theme = {\n  fontSizes,\n  colors,\n  deviceSizes,\n  device,\n};\n\nexport default theme;","import styled from \"styled-components\";\n\n// params\n// color : secondary | primary\n\nconst Button = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 3px;\n    padding: 0.5rem 0;\n    margin: 0.5rem 1rem;\n    width: ${({fullWidth}) => fullWidth ? \"100%\" : '8rem'};\n    font-weight: ${({bold}) => bold ? 'bold' : 'normal'};\n    font-size: ${({fontSize}) => fontSize ? fontSize+'px' : '1rem'};\n    outline: none;\n    ${({color, theme:{colors}, disabled})=> {\n        const colorset = color===\"secondary\" ? colors.secondary : colors.primary;\n        return `\n            background: ${ disabled? colorset.disabled : colorset.main};\n            color: ${colorset.text};\n            border: ${colorset.border} solid thin;\n            ${!disabled &&`\n                &:hover {\n                    background: ${color===\"text\" ? 'transparent' : colorset.accent };\n                    outline: none;\n                }\n            `}\n        `\n    }}\n`\n\nexport default Button;\n\n","import styled from \"styled-components\";\n\nconst Input = styled.input`\n    font-size: 18px;\n    padding: 10px;\n    margin: 10px;\n    background: papayawhip;\n    border: none;\n    border-radius: 3px;\n    ::placeholder {\n        color: palevioletred;\n    }\n`;\n\nexport default Input;","export default __webpack_public_path__ + \"static/media/challenger.03e4f276.png\";","import React, { useState } from 'react';\nimport { dbService } from '../firebase';\nimport Input from \"../materials/Input\";\nimport styled from \"styled-components\";\nimport media from '../styles/media';\nimport challenger from '../assets/images/challenger.png';\n\nconst Wrapper = styled.div`\n  display: grid;\n  align-items: center;\n  text-align: center;\n  justify-items: center;\n  grid-template-columns: 100%;\n  grid-template-rows: repeat(1, 2fr);\n  ${media.tablet`\n  grid-template-columns: 100%;\n`}\n`\n\nconst InputWrapper = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  max-width: 100%;\n  align-items: center;\n  ${media.tablet`\n    display: grid;\n    grid-template-rows: auto auto auto 180px;\n  `}\n`\n\nconst Img = styled.img`\n  width: 45%;\n  height: 100%;\n  ${media.tablet`\n  width: 100%;\n  height: 45%;\n`}\n`\n\nconst SignIn = ({userObj, currentInfo}) => {\n    const [name, setName] = useState(\"\");\n    const [alias, setAlias] = useState(\"\");\n    const [number, setNumber] = useState(\"\");\n    const {toQuiz} = currentInfo\n    \n    const onChange = (event) => {\n      const {target: {name, value}} = event;\n      if (name === \"name\"){\n        setName(value);\n      } else if (name === \"alias\"){\n        setAlias(value);\n      } else if (name === \"number\"){\n        setNumber(value);\n      }\n    };\n\n    const onSubmit = async (event) => {\n      event.preventDefault();\n      await dbService.collection(\"users\").doc(userObj.uid).set({\n          uid: userObj.uid,\n          name,\n          alias,\n          number,\n          isAdmin: false,\n          available: !toQuiz,\n          quiz_1: 0,\n          quiz_2: 0,\n          quiz_3: 0,\n          quiz_4: 0,\n          quiz_5: 0,\n          quiz_6: 0,\n          quiz_7: 0,\n          quiz_8: 0\n      });\n      alert(toQuiz ? '참관만 가능합니다.' : '가입이 완료되었습니다.');\n      window.location.reload(false);\n    }\n\n    return (\n      <Wrapper>\n        <Img src = {challenger} />\n          <form onSubmit={onSubmit}>\n            <InputWrapper>\n            <Input\n            name = \"name\"\n            type = \"text\"\n            placeholder = \"이름\"\n            required\n            value = {name}\n            onChange = {onChange}\n            />\n            <Input \n            name = \"alias\"\n            type = \"text\"\n            placeholder = \"닉네임\"\n            required\n            value = {alias}\n            onChange = {onChange}\n            />\n            <Input \n            name = \"number\"\n            type = \"tel\"\n            placeholder = \"ex) 01012345678\"\n            pattern =\"[0-9]{11}\"\n            required\n            value = {number}\n            onChange = {onChange}\n            />\n            <Input  \n            type = \"submit\"\n            onSubmit = {onSubmit}\n            />\n            </InputWrapper>\n          </form>\n        </Wrapper>\n    );\n  }\n\nexport default SignIn;","export default __webpack_public_path__ + \"static/media/quizLogo.740cf7c9.png\";","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport {authService, firebaseInstance} from \"../firebase\";\nimport Button from '../materials/Button';\nimport SignIn from \"./SignIn\"\nimport quizLogo from '../assets/images/quizLogo.png';\nimport media from '../styles/media';\n\nconst Wrapper = styled.div`\n  display: grid;\n  align-items: center;\n  grid-template-rows: repeat(2, 1fr);\n  text-align: center;\n  justify-items: center;\n  ${media.tablet`\n    grid-template-columns: 100%;\n    grid-template-rows: auto auto;\n  `}\n`\n\nconst MyButton = styled(Button)`\n  width: 300px;\n`\n\nconst Img = styled.img`\n  width: 45%;\n  height: 100%;\n  ${media.tablet`\n    width: 100%;\n    height: 45%;\n  `}\n`\n\nconst Auth = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const onSocialClick = async () => {\n    const provider = new firebaseInstance.auth.GoogleAuthProvider();\n    await authService.signInWithPopup(provider);\n  }\n\n  const refresh = () => {\n    window.location.reload(false);\n  }\n\n  return (\n    <>\n    { isLoggedIn ?\n    <>\n      <SignIn/>\n      {refresh}\n    </>\n      :\n      <Wrapper>\n        <Img src={quizLogo}/>\n        <MyButton onClick={onSocialClick} name =\"google\">\n          구글 아이디로 로그인하기\n        </MyButton>\n      </Wrapper>\n    }\n    </>\n  );\n}\n\nexport default Auth;\n","const Quizs = (no, question, answer, candidates) => ({\n  no,\n  question,\n  answer,\n  candidates\n})\n\nexport default [\n  Quizs(1,\n    `예수님은 골고다 언덕에서 십자가에 못 박혀 돌아가셨습니다. 여기서 ‘골고다’의 의미는 무엇일까요?`,\n      2,\n      [\"죽음\", \"해골산\", \"지옥\"]\n    ),\n  Quizs(2,\n    `다음 중 부활절의 “부”로 옳은 것은 무엇일까요?`,\n    1,\n    [\"다시 부(復)\", \"뜰 부(浮)\", \"미쁠 부(孚)\"]\n  ),\n  Quizs(3,\n    `예수님은 3일 만에 부활하신 후 여러 사람들에게 자신의 모습을 보이셨습니다.  이때 예수님의 부활을 가장 처음 목격한 인물은 누구일까요?`,\n      2,\n      [\"배드로\", \"막달라 마리아\", \"요한\"]\n    ),\n    Quizs(4,\n      ` 도마는 부활하신 예수님의 못 찔린 자국을 보고자 했습니다. 도마가 보고자한 예수님의 못 자국이 아닌 곳은 어디일까요?`,\n      1,\n      [\"발\", \"손\", \"옆구리\"]\n    ),\n  Quizs(5,\n    `부활절은 영어로 ‘Easter’ 입니다. Easter의 어원은 무엇일까요?`,\n    3,\n    [\"Eous(새벽의)\", \"Eurus(바람)\", \"Eostre(봄의 여신)\"]\n  ),\n  Quizs(6,\n    `부활 후에 예수님은 길을 가는 두 제자와 동행하십니다. 이때 두 제자 중 한명의 이름은 무엇일까요?`,\n    3,\n    [\"맛디아\", \"다대오\", \"글로바\"]\n  ),\n  Quizs(7,\n    `지난주 종려주일에 드린 대학부 테네브레 예배에 대한 설명으로 옳은 것은 무엇일까요?`,\n    2,\n    [\"테네브레는 영어로 tenebre이다.\", \"탁현수 목사님의 설교 제목은 '베드로를 보시니' 이었다. \", \"남산 산책에서 받은 말씀카드는 누가복음 10장 45절이다.\"]\n  ),\n  Quizs(8,\n    `부활절은 과거 325년 니케아 공의회에서 서방교회들의 기준을 따라 정해졌습니다. 이때 정해진 부활절의 기준은 무엇일까요? `,\n    1,\n    [\"춘분 다음 보름달 이후의 첫 주일\", \"양력 4월의 첫 번째 주일\", \"음력 3월의 첫 번째 주일\"]\n  ),\n  Quizs(9,\n    `폴란드에서는 부활절 다음 월요일에 함께 ‘이것’을 하며 서로의 건강과 안전을 기원합니다. ‘이것’은 무엇일까요?`,\n    3,\n    [\"나뭇가지 씹기\", \"땅에 달걀 껍질 묻기\", \"물 뿌리기\"]\n  ),\n  Quizs(10,\n    `Re VS 100의 진행자인 안태호 벗님은 1997년생(빠른)입니다. 그렇다면 1997년도의 부활절은 언제였을까요?`,\n    1,\n    [\"1997년 3월 30일\", \"1997년 4월 7일\", \"1997년 4월 15일 \"]\n  )\n];","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { dbService } from '../firebase';\nimport Box from '../materials/Box';\nimport Quizs from '../Quizs';\n\nconst Wrapper = styled(Box)`\n    padding-top: 20px;\n    opacity: ${({show}) => show ? 1 : 0};\n    transition: opacity 0.6s linear;\n`\n\nconst Bar = styled.div`\n    width: 96%;\n    height: 50px;\n    display: grid;\n    grid-template-columns: ${({survived}) => `${10 + 0.8 * survived}% ${90 - 0.8 * survived}%`};\n\n    // 공통\n    & > div{\n        box-shadow: 1px 0 4px black;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n    // Survived\n    & > div:first-child{\n        border-top-left-radius: 15px;\n        border-bottom-left-radius: 15px;\n        background-color: #ce93d8;\n        font-weight: bolder;\n    }\n    // Failed\n    & > div:nth-child(2){\n        border-top-right-radius: 15px;\n        border-bottom-right-radius: 15px;\n        background-color: #f3e5f5;\n    }\n`\n\n\n// part: 전체 참여자\n// participants: [1번 정답자, 2번 정답자, 3번 정답자]\n// 어렵다...\nconst Board = ({showAnswer, part, participants, currentInfo}) => {\n    const [corrects, setCorrects] = useState(0);\n    const {currentQuiz} = currentInfo;\n    const quiz = Quizs[currentQuiz];\n    \n    useEffect(() => {\n        dbService.collection(\"users\").onSnapshot( snapshot => {\n            const people = snapshot.docs.map( doc => doc.data()).filter( user => user.available ).length\n            setCorrects(people);\n        })\n    }, [currentQuiz]);\n\n    return(\n        <Wrapper show={showAnswer}>\n            <Bar survived={100 * corrects / part}>\n                <div> {corrects}명 생존</div>\n                <div> {part - corrects}명 탈락</div>\n            </Bar>\n        </Wrapper>\n    )\n}\n\nexport default Board;","import { useEffect, useRef } from 'react';\n\nconst useDidMountEffect = (func, deps) => {\n    const didMount = useRef(false);\n\n    useEffect(() => {\n        if (didMount.current) func();\n        else didMount.current = true;\n    }, deps);\n}\n\nexport default useDidMountEffect;","import React from 'react';\nimport styled from 'styled-components';\n\nconst ChoiceButton = styled.button`\n    /* font-family: \"\"; */\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 0;\n    font-size: 1.6rem;\n    font-weight: bolder;\n    border-radius: 5px;\n    border: ${({theme, isAnswer}) => isAnswer ? `5px solid ${theme.colors.answerBorder}` : 'none'};;\n\n    position: relative;\n    background-color: ${({theme:{colors}, isSelected, isAnswer}) => \n        isSelected ? colors.selected : isAnswer ? colors.answer : colors.main };\n    color: ${({theme, isAnswer}) => isAnswer ? theme.colors.answerText : theme.colors.text};\n    ${({isAnswer}) => isAnswer && `opacity: 0.7`} \n    text-decoration: none;\n    text-transform: uppercase;\n    transition: 0.5s all ease;\n\n    \n`\n\nconst Choice = (props) => {\n    return (\n        <ChoiceButton {...props}>\n            {props.text}\n        </ChoiceButton>\n    )\n}\n\nexport default Choice;","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { dbService } from '../firebase';\nimport useDidMountEffect from '../hooks/useDidMountEffect';\nimport Choice from '../materials/Choice';\nimport media from '../styles/media';\n\nconst Choices = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-template-rows: 100px;\n    ${media.tablet`\n        grid-template-columns: 100%;\n        grid-template-rows: repeat(3, 60px);\n    `}\n    grid-gap: 5px;\n    background-color: ${({theme}) => theme.colors.border};\n    border: 5px solid ${({theme}) => theme.colors.border};\n    border-radius: 5px;\n`\n\nconst Submit = ({quiz, userObj, doc_user_id, showAnswer, isBlocked}) => {\n    const {isAdmin, available} = userObj;\n    const {no, answer, candidates} = quiz;\n    const [myAnswer, setMyAnswer] = useState(null);\n\n    const onChoiceClicked = async ans => {\n        if(!isAdmin && showAnswer)\n            return;\n        setMyAnswer(ans);\n        submitMyAnswer(ans);\n    }\n    const submitMyAnswer = async (ans) => {\n        await dbService.collection('users').doc(doc_user_id).update({\n            ['quiz_'+no]: ans\n        })\n    }\n\n    // 문제가 바뀌면 선택지 초기화\n    useEffect(() => {\n        setMyAnswer(null);\n    }, [quiz.no])\n\n    // not execute on initial Rendering\n    useDidMountEffect(() => {\n        (async () => {\n            if(!showAnswer)\n                return;\n            if(myAnswer === answer){\n                // 정답 색깔 바뀌고 1초 후에 alert\n                setTimeout(()=>alert('정답입니다!!'), 1000);\n                return;\n            }\n            setTimeout(()=>alert('정답을 맞추지 못하셨습니다ㅠㅠ 다음 문제부터는 관전만 가능합니다.'), 1000);\n        })();\n    }, [showAnswer])\n\n    return(\n        <Choices>\n            <Choice \n                onClick = {() => onChoiceClicked(1)}\n                no={1}\n                text={candidates[0]}\n                isSelected={myAnswer===1}\n                isAnswer={answer===1 && showAnswer}\n                disabled={!available || showAnswer || (!isAdmin && isBlocked)}\n            />\n            <Choice \n                onClick = {() => onChoiceClicked(2)}\n                text={candidates[1]}\n                isSelected={myAnswer===2}\n                isAnswer={answer===2 && showAnswer}\n                disabled={!available || showAnswer || (!isAdmin && isBlocked)}\n            />\n            <Choice \n                onClick = {() => onChoiceClicked(3)}\n                no={3}\n                text={candidates[2]}\n                isSelected={myAnswer===3}\n                isAnswer={answer===3 && showAnswer}\n                disabled={!available || showAnswer || (!isAdmin && isBlocked)}\n            />\n        </Choices>        \n    )\n}\n\nexport default Submit; ","import React from \"react\";\nimport styled from \"styled-components\";\nimport media from \"../styles/media\";\n\nconst QuestionWrapper = styled.div`\n    max-width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: ${({theme}) => theme.colors.main};\n    color: ${({theme}) => theme.colors.text};\n    border: 5px solid ${({theme}) => theme.colors.border};\n    border-bottom: none;\n    border-radius: 5px;\n    font-size: 2rem;\n    font-weight: bolder;\n    letter-spacing: 1.5px;\n    line-height: 50px;\n    padding: 20px;\n    ${media.tablet`\n    font-size: 1.5rem;\n    line-height: 40px;\n  `}\n`\n\nconst Quiz = ({question}) => {\n  \n  return (\n    <QuestionWrapper>\n      {question}\n    </QuestionWrapper>\n  )\n}\n\nexport default Quiz;","import React from 'react'\nimport styled from 'styled-components'\nimport Box from '../materials/Box';\n\nconst Modal = styled.div`\n\tz-index: 10;\n\tdisplay: ${({show}) => (show ? 'flex' : 'none')};\n    justify-content: center;\n    align-items: center;\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\theight: 100vh;\n\twidth:100vw;\n\tbackground: rgba(0,0,0,0.5);\n`;\n\nconst Container = styled(Box)`\n    background-color: #eee;\n    box-shadow: 0px 2px 6px grey;\n    border-radius: 10px;\n    padding: 10px;\n    width: 450px;\n    height: 300px;\n`\n\nconst BarChart = styled.div`\n    display: grid;\n    grid-template-columns: 60px 270px 80px;\n    grid-template-rows: repeat(3, 50px);\n`\n\nconst Bar = styled.div`\n    height: 15px;\n    width: ${({perc}) => 1+perc+'%'};\n    background-color: ${({color}) => color};\n`\n\nconst Chance = ({visible, toggle, participants}) => {\n    const [a, b, c] = participants;\n    const sum =(a+b+c)/100;\n    return (\n        <Modal show={visible} onClick={toggle}>\n            <Container>\n                <BarChart>\n                    <Box>1번</Box>\n                    <Box left>\n                        <Bar perc={a/sum} color=\"#cf0c0c\" />\n                    </Box>\n                    <Box>{a}명</Box>\n\n                    <Box>2번</Box>\n                    <Box left>\n                        <Bar perc={b/sum} color=\"#20d6a0\"/>\n                    </Box>\n                    <Box>{b}명</Box>\n                    <Box>3번</Box>\n                    <Box left>\n                        <Bar perc={c/sum} color=\"#245cbb\"/>\n                    </Box>\n                    <Box>{c}명</Box>\n                </BarChart>\n            </Container>\n        </Modal>\n    )\n}\n\nexport default Chance;","import React, { useEffect, useRef, useState } from 'react';\nimport rgbHex from 'rgb-hex';\nimport styled from 'styled-components';\n\nconst Guage = styled.div`\n    width: 100%;\n    font-size: 20px;\n    color: #004033;\n    @media(max-width:480px){\n        height: 40px;\n        max-width: 80px;\n        font-size: 20px;\n    }\n    @media(min-width:480px){\n        height: 60px;\n        max-width: 120px;\n        font-size: 26px;\n    }\n    @media(min-width:1080px){\n        height: 90px;\n        max-width: 180px;\n        font-size: 32px;\n    }\n`\n\n\nconst GuageBody = styled.div`\n    width: 100%;\n    height: 0;\n    padding-bottom: 50%;\n    background: #e3fce9;\n    position: relative;\n    border-top-left-radius: 100% 200%;\n    border-top-right-radius: 100% 200%;\n    overflow: hidden;\n`\n\nconst GuageFill = styled.div`\n    position: absolute;\n    top: 100%;\n    left: 0;\n    width: inherit;\n    height: 100%;\n    transform-origin: center top;\n    transform: rotate(0.25turn);\n    transition: transform 0.2s ease-out;\n    background-color: ${({offset}) => rgbHex(255,offset,offset)};\n    transform: rotate( ${({value}) => value /2 } turn);\n`\n\nconst GuageCover = styled.div`\n    width: 75%;\n    height: 150%;\n    background-color:#fff7f0;\n    border-radius: 50%;\n    position: absolute;\n    top: 25%;\n    left: 50%;\n    transform: translateX(-50%);\n  \n    /* Text */\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding-bottom: 25%;\n    box-sizing: border-box;\n`\n\nconst Timer = ({seconds}) => {\n    const perc = seconds / 60;\n    const [offset, setOffset] = useState(1);\n    \n    useEffect(() => {\n        setOffset(parseInt( perc > 1 ? 1 : perc < 0 ? 0 :55+192*(1-perc)))\n    },[seconds])\n\n    return (\n        <Guage>\n            <GuageBody>\n                <GuageFill offset={offset} />\n                <GuageCover>{seconds}</GuageCover>\n            </GuageBody>\n        </Guage>\n    )\n}\n\n\nexport default Timer;\n\n","import React, { useEffect, useState } from 'react';\nimport { dbService } from '../firebase';\nimport Board from '../components/Board';\nimport Submit from '../components/Submit';\nimport Quizs from '../Quizs';\nimport Button from '../materials/Button';\nimport styled from 'styled-components';\nimport Quiz from '../components/Quiz';\nimport Chance from '../components/Chance';\nimport Timer from '../components/Timer';\nimport media from '../styles/media';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-rows: auto auto auto auto;\n`\n\nconst TopWrapper = styled.div`\n  display: grid;\n  grid-template-columns: auto auto;\n  margin-bottom: 20px;\n  & > div:nth-child(2){\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n  }\n`\n\nconst QuizWrapper = styled.div`\n    display: grid;\n    grid-template-rows: 360px auto auto;\n    background-color: ${({theme}) => theme.colors.border};\n    border-radius: 15px;\n    ${media.tablet`\n    grid-template-columns: 100%;\n    grid-template-rows: 300px;\n  `}\n`\n\nconst ButtonsWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n  & > button {\n    margin: 8px 4px;\n  }\n`\n\nconst TimerWrapper = styled.div`\n  width: 100%;\n  display: grid;\n  justify-content: flex-start;\n  font-size: 2em;\n  font-weight: bolder;\n  padding: 5% 0;\n`\n\nconst Question = ({userObj, doc_user_id, currentInfo}) => {\n  const {currentQuiz, showAnswer, showHint, isBlocked, part, startedTimestamp} = currentInfo;\n  const {isAdmin} = userObj;\n  const quiz = Quizs[currentQuiz];\n  const [participants, setParticipants] = useState([0, 0, 0]);\n  const [surv,setSurv] = useState(0);\n  //Timer useState\n  const [seconds, setSeconds] = useState(0);\n\n  // modal 바깥 부분 클릭 시 숨기기\n  const [display, setDisplay] = useState(false);\n  const toggleHint = () => setDisplay(prev => !prev);\n\n  useEffect(() => {\n    dbService.collection(\"users\").onSnapshot( snapshot => {\n      const survCount = snapshot.docs.map( doc => doc.data()).map( p => p.available);;\n      setSurv(survCount.filter(a => a).length)\n    })\n  }, [currentQuiz]);\n\n  const onPrevClicked = async() => {    \n    if( currentQuiz <= 0 ) return;\n    await dbService.collection('current').doc('current').update({\n        currentQuiz: currentQuiz-1,\n        showAnswer: false,\n        isBlocked: false,\n        startedTimestamp: new Date().getTime()\n    })\n  }\n  \n  //next click 할때 타이머 초기화\n  const onNextClicked = async() => {\n    // 마지막 문제 or 생존자가 5명이거나 이하일때 isDone:true\n    // if( currentQuiz === Quizs.length-1 || surv <= 2){\n    // 이거 넘어가는거 잠깐 꺼둘게ㅠㅠ\n    if( currentQuiz === Quizs.length-1){\n      await dbService.collection('current').doc('current').update({\n        isDone: true\n      })\n    }else{\n      await dbService.collection('current').doc('current').update({\n        currentQuiz: currentQuiz+1,\n        showAnswer: false,\n        isBlocked: false,\n        startedTimestamp: new Date().getTime()\n      })\n    }\n  }\n\n  const onClickHint = async() => {\n      toggleHint();\n      await dbService.collection('current').doc('current').update({\n        showHint: true\n      });\n  }\n\n  const block = async() => {\n      await dbService.collection('current').doc('current').update({\n        isBlocked: true\n    });\n  }\n\n  const revealAnswer = () => {\n      dbService.collection('current').doc('current').update({\n          showAnswer: true\n      });\n      const usersRef = dbService.collection('users');\n      usersRef.where(\n            `quiz_${quiz.no}`, \n            '!=', \n            quiz.answer\n        ).get()\n        .then((querySnapshot) => {\n          let batch = dbService.batch();\n          console.log(querySnapshot.docs.length)\n          querySnapshot.docs.forEach((doc) => {\n              const docRef = usersRef.doc(doc.data().uid);\n              batch.update(docRef, {available: false});\n          })\n          batch.commit();\n      }).catch( error => {\n          console.log(\"Error getting document:\", error);\n      });\n  }\n\n\n\n  //Timer\n    useEffect(() => {\n      const countdown = setInterval(() => {\n        const now = new Date().getTime();\n        const passed = parseInt((now - startedTimestamp) / 1000);\n        setSeconds(passed > 60 ? 0 : 60-passed);\n        if(passed >=60)\n          clearInterval(countdown);\n      }, 1000);\n      return () => clearInterval(countdown);\n    }, [startedTimestamp]);\n\n  useEffect(() => {\n    dbService.collection(\"users\").onSnapshot( snapshot => {\n      const people = snapshot.docs.map( doc => doc.data()).map( p => p['quiz_' + quiz.no]);\n      setParticipants([\n        people.filter(a => a===1).length,\n        people.filter(a => a===2).length,\n        people.filter(a => a===3).length\n      ])\n    })\n  }, [currentQuiz]);\n\n    return (\n      <Wrapper>\n        <TopWrapper>\n        <Timer seconds={seconds} />\n          {isAdmin ?\n            <div>\n              <Button onClick={onClickHint} disabled={showHint}> \n                찬스 \n              </Button> \n            </div>\n              : <div />\n          }\n        </TopWrapper>\n        <QuizWrapper>\n            <Quiz question={quiz.question}/>\n            <Submit\n                quiz={quiz} \n                userObj={userObj} \n                doc_user_id={doc_user_id}\n                showAnswer={showAnswer}\n                isBlocked={isBlocked}\n            />\n        </QuizWrapper>\n          {isAdmin &&\n          <ButtonsWrapper>\n              <Button color=\"secondary\" onClick = {onPrevClicked}> 이전 </Button>\n              {\n                !isBlocked ?\n                <Button color=\"secondary\" onClick = {block}> 시간 종료 </Button>\n                :showAnswer ?\n                <Button onClick = {onNextClicked}> 다음 </Button>\n                :\n                <Button onClick = {revealAnswer}> 정답 공개 </Button>\n              }\n          </ButtonsWrapper>\n          }\n            <Board {...{showAnswer, part, participants, currentInfo, userObj}}/>\n            <Chance visible={display} toggle={toggleHint} participants={participants} currentQuiz={currentQuiz}/>\n      </Wrapper>\n  );\n}\n\nexport default Question;","import React, {useState, useEffect} from 'react';\nimport { dbService } from '../firebase';\nimport styled from 'styled-components';\nimport media from '../styles/media';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport { faCrown } from '@fortawesome/free-solid-svg-icons'\n\nconst Wrapper = styled.div`\n    display: grid;\n    justify-content: center;\n    grid-template-rows: 250px auto;\n    font-size: 2em;\n    font-weight: bolder;\n    text-align: center;\n    letter-spacing: 1.5px;\n    line-height: 1.8em;\n    ${media.tablet`\n    grid-template-rows: 300px auto;\n    font-size: 1em;\n  `}\n`\nconst Crown = styled.div`\n    color: black;\n`\n\nconst Surv = styled.div`\n    font-style: italic;\n`\nconst Survivor = () => {\n    const [lastSurv, setLastSurv] = useState([]);\n\n    useEffect(() => {\n        dbService.collection(\"users\").onSnapshot( snapshot => {\n            const surv = snapshot.docs.map( doc => doc.data())\n            .filter(a => a.available ===true)\n            .map( b => b.alias).map((x,i,arr)=>(i<arr.length-1)?x+', ':x);\n            setLastSurv(surv);\n        })\n    }, []);\n\n    return (\n        <>\n        <Wrapper>\n            <div>\n                마지막까지 생존하신걸 축하드립니다!!!<br/>\n                문자가 발송될 예정이니 꼭 확인해주세요 :) \n            </div>\n            <Crown>\n                <FontAwesomeIcon icon={faCrown} />&nbsp; 생존자 명단 &nbsp;<FontAwesomeIcon icon={faCrown} />\n            </Crown>\n            <Surv>\n                {[lastSurv]}\n            </Surv>\n        </Wrapper>\n        </>\n    )\n}\n\nexport default Survivor; ","export default __webpack_public_path__ + \"static/media/frame.4a975f16.png\";","import React, { useState } from 'react';\nimport { dbService } from '../firebase';\nimport Button from '../materials/Button';\nimport qrcode from '../assets/images/frame.png';\nimport styled from 'styled-components';\nimport media from '../styles/media';\nimport Box from '../materials/Box';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  text-align: left;\n  ${media.tablet`\n    grid-template-columns: 100%;\n    grid-template-rows: auto auto;\n  `}\n`\nconst Description = styled.div`\n  margin: 30px;\n`\n\nconst Explanation =styled.div`\n  font-weight: 600;\n  letter-spacing: 0.5px;\n  line-height: 2em;\n  font-size: large;  \n  ${media.tablet`\n  font-size: medium;\n`}\n`\n\nconst Img = styled.img`\n  width: 100%;\n  height: 100%;\n`\n\nconst Descript = ({isAdmin}) => {\n  const [part, setPart] = useState(0);\n\n  const onClickToQuiz = async () => {    \n    // toQuiz 누르는 순간까지 참여한 벗님 수 기록\n    await dbService.collection('current').doc('current').update({\n      toQuiz: true,\n      part,\n      showAnswer: false,\n      block: false,\n      showHint: false,\n      currentQuiz: 0,\n      startedTimestamp: new Date().getTime()\n    })\n  }\n\n    dbService.collection(\"users\").onSnapshot( snapshot => {\n      const people = snapshot.docs.map( doc => doc.data()).length\n      setPart(people)\n    })\n\n  \n  return (\n      <Wrapper>\n        <div>\n          <Description>\n          <h1>Rules</h1>\n            <Explanation>\n              1. 3개의 보기 중 정답을 고른다. <br/>\n              2. 100인이 먼저 문제를 다 푼 후, 게스트 2인이 푼다. <br/>\n              3. 문제를 푸는 데는 1분의 시간제한이 있다. <br/>\n              4. 문제를 틀리면 탈락이며, 정답자만 다음 문제로 넘어간다. <br/>\n              5. 정답자가 8명(?) 이하로 남으면 프로그램이 종료된다. <br/>\n              6. 중간 참여는 불가능하다.<br/>\n              7. 게스트 2명은 함께 2번의 찬스를 쓸 수 있다. <br/><br/>\n              한벗님 찬스 : 원하는 한 명의 답을 알 수 있다, 없을 시 호스트가 지정. <br/>\n              벗님들 찬스 : 모든 벗님이 선택한 답을 알 수 있다.<br/><br/>\n              지금까지 {part}명 참여하셨습니다.\n            </Explanation>\n          </Description>\n            \n            {isAdmin && \n            <Box>\n              <Button onClick = {onClickToQuiz}> 퀴즈 시작하기</Button> \n            </Box>\n            }\n          </div>\n          {isAdmin && \n            <Img src={qrcode}/>\n          }\n      </Wrapper> \n  );\n}\n\nexport default Descript;","  \nimport React from 'react';\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Auth from '../routes/Auth';\nimport SignIn from '../routes/SignIn';\nimport Question from '../routes/Question';\nimport Survivor from '../routes/Survivor';\nimport Descript from '../routes/Descript';\n\nconst AppRouter = ({isLoggedIn, userObj, hasAccount, doc_user_id, currentInfo}) => {\n    return (\n      <Router>\n        <Switch>\n          {\n            isLoggedIn ? \n              hasAccount ?\n                <>\n                {\n                  !currentInfo.toQuiz ? \n                    <Route exact path=\"/\">\n                      <Descript\n                        isAdmin={userObj.isAdmin} \n                      />\n                    </Route>\n                    :\n                    <>\n                    {\n                      currentInfo.isDone ?\n                      <Route exact path=\"/\">\n                        <Survivor\n                          userObj = {userObj} \n                        />\n                      </Route>\n                      :\n                    <Route exact path=\"/\">\n                      <Question\n                        userObj = {userObj} \n                        doc_user_id = {doc_user_id} \n                        currentInfo = {currentInfo}\n                      />\n                    </Route>\n                    }\n                  </>\n                }\n                </>   \n                :\n                <Route exact path=\"/\">\n                  <SignIn \n                  userObj={userObj}\n                  currentInfo = {currentInfo}\n                  />\n                </Route>\n            :\n            <Route exact path=\"/\">\n              <Auth\n              currentInfo = {currentInfo}\n              />\n            </Route>\n          }\n        </Switch>\n      </Router>\n    );\n}\n\nexport default AppRouter;","import React, { useEffect, useState } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { authService, dbService } from '../firebase';\nimport MainWrapper from '../MainWrapper';\nimport theme from '../styles/theme';\nimport AppRouter from './Router';\nimport styled from 'styled-components';\nimport media from '../styles/media';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  const [hasAccount, setHasAccount] = useState(false);\n  const [docUserId, setDocUserId] = useState('');\n  const [currentInfo, setCurrentInfo] = useState({currentQuiz:0, showAnswer:false, showHint:false, toQuiz:false, isDone:false});\n\n  useEffect(() => {\n    authService.onAuthStateChanged(async (user) => {\n      if (user) {\n        const users = await dbService.collection('users').where('uid','==',user.uid).get();\n        setHasAccount(Boolean(users.docs.length))\n        try{\n          setUserObj(users.docs[0].data());\n          setDocUserId(users.docs[0].id);\n        }catch(e){\n          setUserObj(user)\n        }\n      }\n      else{\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  dbService.collection('current').doc('current').onSnapshot(data => {\n    setCurrentInfo(data.data())\n  });\n  }, []);\n\n  useEffect(() => {\n    if(!docUserId)\n      return;\n    dbService.collection('users').doc(docUserId).onSnapshot(snap => {\n      setUserObj(snap.data());\n    })\n  },[docUserId])\n\n  return (\n    // 여기는 테마 적용하기 위한 컴포넌트!\n    <ThemeProvider theme={theme}>\n      <MainWrapper>\n        {init ? \n          <AppRouter \n            isLoggedIn = {Boolean(userObj)} \n            userObj = {userObj}\n            hasAccount={hasAccount} \n            doc_user_id={docUserId}\n            currentInfo={currentInfo}\n          />\n        :\n          <div>\n          \"Initializing...\"\n          </div>\n        }\n      </MainWrapper>\n    </ThemeProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}