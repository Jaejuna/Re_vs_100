{"version":3,"sources":["firebase.js","assets/fonts/SamlipOutline.ttf","assets/fonts/labdigital.ttf","assets/fonts/SamlipBasic.ttf","styles/fonts.js","assets/images/backgroundMobile.jpg","styles/media.js","materials/Box.jsx","MainWrapper.js","styles/theme.js","materials/Button.js","materials/Input.js","assets/images/challenger.png","routes/SignIn.jsx","assets/images/quizLogo.png","routes/Auth.jsx","components/Board.jsx","hooks/useDidMountEffect.js","materials/Choice.jsx","components/Submit.jsx","Quizs.js","components/Quiz.jsx","components/Chance.jsx","components/Timer.jsx","routes/Question.jsx","materials/Btn.js","routes/Survivor.jsx","assets/images/frame.png","routes/Descript.jsx","routes/Draw.jsx","components/Router.js","components/App.jsx","index.jsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storage","createGlobalStyle","SamOut","SamBasic","sizes","giant","huge","bigDesktop","desktop","tablet","thone","phablet","phone","tiny","media","Object","keys","reduce","accumulator","label","emSize","first","css","Box","styled","div","left","Wrapper","theme","colors","main","bg_mobile","MainBox","MainWrapper","children","calcRem","size","deviceSizes","mobileS","mobileM","mobileL","tabletL","fontSizes","small","base","lg","xl","xxl","xxxl","titleSize","text","border","selected","answer","answerBorder","answerText","primary","accent","disabled","secondary","device","Button","button","fullWidth","bold","fontSize","color","colorset","Input","input","InputWrapper","Img","img","SignIn","userObj","currentInfo","useState","name","setName","alias","setAlias","number","setNumber","toQuiz","onChange","event","target","value","onSubmit","a","preventDefault","collection","doc","uid","set","isAdmin","available","quiz_1","quiz_2","quiz_3","quiz_4","quiz_5","quiz_6","quiz_7","quiz_8","alert","window","location","reload","src","challenger","placeholder","required","type","pattern","MyButton","Auth","isLoggedIn","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","quizLogo","onClick","Bar","show","survived","Board","showAnswer","quiz","participants","corrects","setCorrects","all","setAll","currentQuiz","useEffect","b","useDidMountEffect","func","deps","didMount","useRef","current","ChoiceButton","isAnswer","isSelected","Choice","props","Choices","Submit","doc_user_id","isBlocked","no","candidates","myAnswer","setMyAnswer","onChoiceClicked","ans","submitMyAnswer","update","setTimeout","Quizs","question","QuestionWrapper","Quiz","Modal","Container","BarChart","perc","Chance","visible","toggle","c","sum","Guage","GuageBody","GuageFill","offset","rgbHex","GuageCover","Timer","seconds","setOffset","parseInt","TopWrapper","QuizWrapper","ButtonsWrapper","Question","showHint","part","startedTimestamp","setParticipants","surv","setSurv","setSeconds","display","setDisplay","toggleHint","prev","onSnapshot","snapshot","survCount","docs","map","data","p","filter","length","onPrevClicked","Date","getTime","onClickHint","block","revealAnswer","usersRef","where","get","then","querySnapshot","Error","batch","console","log","forEach","docRef","commit","catch","error","message","people","countdown","setInterval","now","passed","clearInterval","isDone","Btn","Winner","Survivor","lastSurv","setLastSurv","idx","icon","faCrown","isDraw","Description","Explanation","Counter","Descript","setPart","faUserFriends","qrcode","Drawn","Draw","drawn","setDrawn","draw","slice","i","j","Math","floor","random","shuffle","faSmile","join","AppRouter","hasAccount","exact","path","App","init","setInit","setUserObj","setHasAccount","docUserId","setDocUserId","setCurrentInfo","onAuthStateChanged","user","users","Boolean","id","e","snap","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38455016.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\"\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCNEEZVWLepSVn_ennOWsbwjL8E2wqnbpQ\",\n    authDomain: \"re-vs-100-8ec8b.firebaseapp.com\",\n    projectId: \"re-vs-100-8ec8b\",\n    storageBucket: \"re-vs-100-8ec8b.appspot.com\",\n    messagingSenderId: \"400681423336\",\n    appId: \"1:400681423336:web:13667d56d28179863d545d\"\n}\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","export default __webpack_public_path__ + \"static/media/SamlipOutline.cb892823.ttf\";","export default __webpack_public_path__ + \"static/media/labdigital.a204f34c.ttf\";","export default __webpack_public_path__ + \"static/media/SamlipBasic.d6a7dad8.ttf\";","import { createGlobalStyle } from \"styled-components\";\nimport LabDigital from \"../assets/fonts/labdigital.ttf\";\nimport SamOut from \"../assets/fonts/SamlipOutline.ttf\"\nimport SamBasic from \"../assets/fonts/SamlipBasic.ttf\"\n\nexport default createGlobalStyle`\n    @font-face {\n        font-family: \"SamOut\";\n        src: local('SamOut'), local('SamBasic')\n        url(${SamOut}) format('woff'),\n        url(${SamBasic}) format('woff');\n        font-weight: 300;\n        font-style: normal;\n    }\n`;","export default __webpack_public_path__ + \"static/media/backgroundMobile.619b31bf.jpg\";","import { css } from \"styled-components\"\n\nconst sizes = {\n  giant: 1920,\n  huge: 1440,\n  bigDesktop: 1200,\n  desktop: 1000,\n  tablet: 768,\n  thone: 600,\n  phablet: 480,\n  phone: 376,\n  tiny: 330,\n}\n\n// Iterate through the sizes and create a media template\n// Usage:\n// const StyledWrapper = styled.div`\n//   ${media.huge`margin-left: 20px;`}\n// `\nconst media = Object.keys(sizes).reduce(\n  (accumulator, label) => {\n    const emSize = sizes[label] / 16\n    accumulator[label] = (first) => css`\n      @media (max-width: ${emSize}em) {\n        ${css(first)}\n      }\n    `\n    return accumulator\n  },{})\n\nexport default media;","import styled from 'styled-components';\n\nconst Box = styled.div`\n    display: flex;\n    justify-content: ${({left}) => left ? 'left' : 'center'};\n    align-items: center;\n`\nexport default Box;","import React from \"react\";\nimport styled from \"styled-components\";\nimport GlobalFont from \"./styles/fonts\";\nimport bg_mobile from \"./assets/images/backgroundMobile.jpg\";\nimport media from \"./styles/media\";\nimport Box from \"./materials/Box\";\n\nconst Wrapper = styled.div`\n    width: 100%;\n    min-height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    /* background-color: ${({theme}) => theme.colors.main}; */\n    //원래 백그라운 컬러\n    //background: radial-gradient(circle, rgba(238,174,202,1) 0%, rgba(148,187,233,1) 100%);\n    // background: radial-gradient(farthest-corner at 800px 300px, #f4f4f4, #363636 65%);\n    background-image: url(${bg_mobile});\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    margin: 0;\n`\nconst MainBox = styled(Box)`\n    width:min(1470px, calc(100% - 30px));\n    padding: 20px 0 40px 0;\n    margin: 0;\n`\n// 데스크탑 이상 사이즈의 화면에서 양측 여백을 관리하는 Wrapper\nconst MainWrapper = ({children}) => (\n\n    <Wrapper>\n        <GlobalFont />\n        <MainBox>\n            {children}\n        </MainBox>\n    </Wrapper>\n);\nexport default MainWrapper;","// 여기는 전체 테마에 대한 내용!\n\nconst colors = {\n    main: '#365387',\n    text: '#ddd',\n    border: '#494949',\n    selected: `#cc76c2`,\n    answer: '#b8cbff',\n    answerBorder: '#eac2efc',\n    answerText: '#4b3297',\n    primary: {\n      main: '#01579b',\n      text: `#fff`,\n      border: `rgba(0, 0, 0, 0.5)`,\n      accent: '#666ad1',\n      disabled: `#6f74dd`\n    },\n    secondary:{\n      main: `#464646`,\n      text: `rgba(255,255,255,0.85)`,\n      border: `rgba(255,255,255,0.15)`,\n      accent: `#5f5f5f`,\n      disabled: '#4A4A4A',\n    },\n  }\n\nconst calcRem = (size) => `${size / 16}rem`;\n\nconst fontSizes = {\n  small: calcRem(14),\n  base: calcRem(16),\n  lg: calcRem(18),\n  xl: calcRem(20),\n  xxl: calcRem(22),\n  xxxl: calcRem(24),\n  titleSize: calcRem(50),\n};\n\nconst deviceSizes = {\n  mobileS: 320,\n  mobileM: 375,\n  mobileL: 450,\n  tablet: 768,\n  tabletL: 1024,\n};\n\nconst device = {\n  mobileS: `only screen and (max-width: ${deviceSizes.mobileS}px)`,\n  mobileM: `only screen and (max-width: ${deviceSizes.mobileM}px)`,\n  mobileL: `only screen and (max-width: ${deviceSizes.mobileL}px)`,\n  tablet: `only screen and (max-width: ${deviceSizes.tablet}px)`,\n  tabletL: `only screen and (max-width: ${deviceSizes.tabletL}px)`,\n};\n\nconst theme = {\n  fontSizes,\n  colors,\n  deviceSizes,\n  device,\n};\n\nexport default theme;","import styled from \"styled-components\";\n\n// params\n// color : secondary | primary\n\nconst Button = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 3px;\n    padding: 0.5rem 0;\n    margin: 0.5rem 1rem;\n    width: ${({fullWidth}) => fullWidth ? \"100%\" : '8rem'};\n    font-weight: ${({bold}) => bold ? 'bold' : 'normal'};\n    font-size: ${({fontSize}) => fontSize ? fontSize+'px' : '1rem'};\n    outline: none;\n    ${({color, theme:{colors}, disabled})=> {\n        const colorset = color===\"secondary\" ? colors.secondary : colors.primary;\n        return `\n            background: ${ disabled? colorset.disabled : colorset.main};\n            color: ${colorset.text};\n            border: ${colorset.border} solid thin;\n            ${!disabled &&`\n                &:hover {\n                    background: ${color===\"text\" ? 'transparent' : colorset.accent };\n                    outline: none;\n                }\n            `}\n        `\n    }}\n`\n\nexport default Button;\n\n","import styled from \"styled-components\";\n\nconst Input = styled.input`\n    font-size: 18px;\n    padding: 10px;\n    border: none;\n    border-radius: 6px;\n    outline: none;\n    border-bottom: 2px solid ${({theme}) => theme.colors.main};\n    background: rgba( 255, 255, 255, 0.20 );\n    box-shadow: 0 8px 40px 0 rgba( 31, 38, 135, 0.37 );\n    backdrop-filter: blur( 10.5px );\n    -webkit-backdrop-filter: blur( 10.5px );\n    ::placeholder {\n        color: #dddddd;\n    }\n    :focus {\n        border-bottom: 4px solid ${({theme}) => theme.colors.selected};\n    }\n\n`;\n\nexport default Input;","export default __webpack_public_path__ + \"static/media/challenger.03e4f276.png\";","import React, { useState } from 'react';\nimport { dbService } from '../firebase';\nimport Input from \"../materials/Input\";\nimport styled from \"styled-components\";\nimport media from '../styles/media';\nimport challenger from '../assets/images/challenger.png';\nimport Button from '../materials/Button';\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n    justify-items: center;\n`\n\nconst InputWrapper = styled.div`\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n    max-width: 100%;\n    align-items: center;\n    flex-direction: row;\n    margin-bottom: 100px;\n    \n    & > button {\n      margin: 0;\n    }\n    & > *:nth-child(n+2){\n      margin-left: 15px;\n      margin-top: 0;\n    }\n    ${media.tablet`\n      flex-direction: column;\n        & > input {\n          width: 80%;\n        }\n        & > *:nth-child(n+2){\n          margin-left: 0px;\n          margin-top: 15px;\n        }\n    `}\n`\n\nconst Img = styled.img`\n  width: 50%;\n  height: 100%;\n  ${media.tablet`\n  width: 100%;\n  height: auto;\n`}\n`\n\nconst SignIn = ({userObj, currentInfo}) => {\n    const [name, setName] = useState(\"\");\n    const [alias, setAlias] = useState(\"\");\n    const [number, setNumber] = useState(\"\");\n    const {toQuiz} = currentInfo\n    \n    const onChange = (event) => {\n      const {target: {name, value}} = event;\n      if (name === \"name\"){\n        setName(value);\n      } else if (name === \"alias\"){\n        setAlias(value);\n      } else if (name === \"number\"){\n        setNumber(value);\n      }\n    };\n\n    const onSubmit = async (event) => {\n      event.preventDefault();\n      await dbService.collection(\"users\").doc(userObj.uid).set({\n          uid: userObj.uid,\n          name,\n          alias,\n          number,\n          isAdmin: false,\n          available: !toQuiz,\n          quiz_1: 0,\n          quiz_2: 0,\n          quiz_3: 0,\n          quiz_4: 0,\n          quiz_5: 0,\n          quiz_6: 0,\n          quiz_7: 0,\n          quiz_8: 0\n      });\n      alert(toQuiz ? '참관만 가능합니다.' : '가입이 완료되었습니다.');\n      window.location.reload(false);\n    }\n\n    return (\n      <Wrapper>\n        <Img src = {challenger} />\n        <form onSubmit={onSubmit}>\n          <InputWrapper>\n            <Input\n              name = \"name\"\n              placeholder = \"이름\"\n              required\n              value = {name}\n              onChange = {onChange}\n            />\n            <Input \n              name = \"alias\"\n              placeholder = \"닉네임\"\n              required\n              value = {alias}\n              onChange = {onChange}\n            />\n            <Input \n              name = \"number\"\n              type = \"tel\"\n              placeholder = \"ex) 01012345678\"\n              pattern =\"[0-9]{11}\"\n              required\n              value = {number}\n              onChange = {onChange}\n            />\n            <Button type = \"submit\" onSubmit = {onSubmit}> \n              입장\n            </Button>\n          </InputWrapper>\n        </form>\n      </Wrapper>\n    );\n  }\n\nexport default SignIn;","export default __webpack_public_path__ + \"static/media/quizLogo.740cf7c9.png\";","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport {authService, firebaseInstance} from \"../firebase\";\nimport Button from '../materials/Button';\nimport SignIn from \"./SignIn\"\nimport quizLogo from '../assets/images/quizLogo.png';\nimport media from '../styles/media';\n\nconst Wrapper = styled.div`\n  display: grid;\n  align-items: center;\n  grid-template-rows: repeat(2, 1fr);\n  text-align: center;\n  justify-items: center;\n  ${media.tablet`\n    grid-template-columns: 100%;\n    grid-template-rows: auto auto;\n  `}\n`\n\nconst MyButton = styled(Button)`\n  width: 300px;\n`\n\nconst Img = styled.img`\n  width: 100%;\n  height: 100%;\n  ${media.tablet`\n    width: 100%;\n    height: 180px;\n  `}\n`\n\nconst Auth = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const onSocialClick = async () => {\n    const provider = new firebaseInstance.auth.GoogleAuthProvider();\n    await authService.signInWithPopup(provider);\n  }\n\n  const refresh = () => {\n    window.location.reload(false);\n  }\n\n  return (\n    <>\n    { isLoggedIn ?\n    <>\n      <SignIn/>\n      {refresh}\n    </>\n      :\n      <Wrapper>\n        <Img src={quizLogo}/>\n        <MyButton onClick={onSocialClick} name =\"google\">\n          구글 아이디로 로그인하기\n        </MyButton>\n      </Wrapper>\n    }\n    </>\n  );\n}\n\nexport default Auth;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst Bar = styled.div`\n    padding-top: 20px;\n    opacity: ${({show}) => show ? 1 : 0};\n    transition: opacity 0.6s linear;\n\n    min-width: 96%;\n    height: 50px;\n    display: flex;\n\n    // 공통\n    & > div{\n        box-shadow: 1px 0 4px black;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n    // Survived\n    & > div:first-child{\n        border-top-left-radius: 15px;\n        border-bottom-left-radius: 15px;\n        background-color: #ce93d8;\n        font-weight: bolder;\n        width: ${({survived}) => `${survived}%`};\n        ${({survived}) => {\n            if(!survived)\n                return `display: none;`\n            else if(survived === 100)\n                return `border-radius: 15px;`\n            else \n                return `display: block;`\n        }}\n    }\n    // Failed\n    & > div:nth-child(2){\n        border-top-right-radius: 15px;\n        border-bottom-right-radius: 15px;\n        background-color: #f3e5f5;\n        width: ${({survived}) => `${100 - survived}%`};\n        ${({survived}) => {\n            if(survived===100)\n                return `display: none;`\n            else if(!survived)\n                return `border-radius: 15px;`\n            else\n                return `display: block;`\n        }}\n    }\n`\n\n// part: 전체 참여자\n// participants: [1번 선택자, 2번 선택자, 3번 선택자]\nconst Board = ({showAnswer, quiz, participants, currentInfo}) => {\n    const [corrects, setCorrects] = useState(0);\n    const [all, setAll] = useState(1);\n    const {currentQuiz} = currentInfo;\n    \n    useEffect(() => {\n        setCorrects(participants[quiz.answer-1]);\n        setAll(participants.reduce((a, b) => a+b));\n    }, [currentQuiz]);\n\n    return(\n        <Bar show={showAnswer} survived={100 * corrects / all}>\n            <div> {`${corrects}명 생존`}</div>\n            <div> {`${all - corrects}명 탈락`}</div>\n        </Bar>\n    )\n}\n\nexport default Board;","import { useEffect, useRef } from 'react';\n\nconst useDidMountEffect = (func, deps) => {\n    const didMount = useRef(false);\n\n    useEffect(() => {\n        if (didMount.current) func();\n        else didMount.current = true;\n    }, deps);\n}\n\nexport default useDidMountEffect;","import React from 'react';\nimport styled from 'styled-components';\n\nconst ChoiceButton = styled.button`\n    /* font-family: \"\"; */\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 0;\n    font-size: 1.6rem;\n    font-weight: bolder;\n    border-radius: 5px;\n    border: ${({theme, isAnswer}) => isAnswer ? `5px solid ${theme.colors.answerBorder}` : 'none'};;\n    color: white;\n    position: relative;\n    background-color: ${({theme:{colors}, isSelected, isAnswer}) => \n        isSelected ? colors.selected : isAnswer ? colors.answer : colors.main };\n    color: ${({theme, isAnswer, isSelected}) => isAnswer ? isSelected ? '#1a17bb' : theme.colors.answerText : theme.colors.text};\n    ${({isAnswer}) => isAnswer && `opacity: 0.7`} \n    text-decoration: none;\n    text-transform: uppercase;\n    transition: 0.5s all ease;\n    outline: none;\n`\n\nconst Choice = (props) => {\n    return (\n        <ChoiceButton {...props}>\n            {props.text}\n        </ChoiceButton>\n    )\n}\n\nexport default Choice;","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { dbService } from '../firebase';\nimport useDidMountEffect from '../hooks/useDidMountEffect';\nimport Choice from '../materials/Choice';\nimport media from '../styles/media';\n\nconst Choices = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-template-rows: 100px;\n    ${media.tablet`\n        grid-template-columns: 100%;\n        grid-template-rows: repeat(3, 60px);\n    `}\n    grid-gap: 5px;\n    background-color: ${({theme}) => theme.colors.border};\n    border: 5px solid ${({theme}) => theme.colors.border};\n    border-radius: 5px;\n`\n\nconst Submit = ({quiz, userObj, doc_user_id, showAnswer, isBlocked}) => {\n    const {isAdmin, available} = userObj;\n    const {no, answer, candidates} = quiz;\n    const [myAnswer, setMyAnswer] = useState(null);\n\n    const onChoiceClicked = async ans => {\n        if(!isAdmin && showAnswer)\n            return;\n        setMyAnswer(ans);\n        submitMyAnswer(ans);\n    }\n    const submitMyAnswer = async (ans) => {\n        await dbService.collection('users').doc(doc_user_id).update({\n            ['quiz_'+no]: ans\n        })\n    }\n\n    // 문제가 바뀌면 선택지 초기화\n    useEffect(() => {\n        setMyAnswer(null);\n    }, [quiz.no])\n\n    // not execute on initial Rendering\n    useDidMountEffect(() => {\n        (async () => {\n            if(!showAnswer)\n                return;\n            if(myAnswer === answer){\n                // 정답 색깔 바뀌고 1초 후에 alert\n                setTimeout(()=>alert('정답입니다!!'), 1000);\n                return;\n            }\n                setTimeout(()=>alert('정답을 맞추지 못하셨습니다ㅠㅠ 다음 문제부터는 관전만 가능합니다.'), 1000);\n        })();\n    }, [showAnswer])\n\n    return(\n        <Choices>\n            <Choice \n                onClick = {() => onChoiceClicked(1)}\n                no={1}\n                text={candidates[0]}\n                isSelected={myAnswer===1}\n                isAnswer={answer===1 && showAnswer}\n                disabled={!available || showAnswer || (!isAdmin && isBlocked)}\n            />\n            <Choice \n                onClick = {() => onChoiceClicked(2)}\n                text={candidates[1]}\n                isSelected={myAnswer===2}\n                isAnswer={answer===2 && showAnswer}\n                disabled={!available || showAnswer || (!isAdmin && isBlocked)}\n            />\n            <Choice \n                onClick = {() => onChoiceClicked(3)}\n                no={3}\n                text={candidates[2]}\n                isSelected={myAnswer===3}\n                isAnswer={answer===3 && showAnswer}\n                disabled={!available || showAnswer || (!isAdmin && isBlocked)}\n            />\n        </Choices>        \n    )\n}\n\nexport default Submit; ","const Quizs = (no, question, answer, candidates) => ({\n  no,\n  question,\n  answer,\n  candidates\n})\n\nexport default [\n  Quizs(1,\n    `예수님은 골고다 언덕에서 십자가에 못 박혀 돌아가셨습니다. 여기서 ‘골고다’의 의미는 무엇일까요?`,\n      2,\n      [\"죽음\", \"해골산\", \"지옥\"]\n    ),\n  Quizs(2,\n    `다음 중 부활절의 “부”로 옳은 것은 무엇일까요?`,\n    1,\n    [\"다시 부(復)\", \"뜰 부(浮)\", \"미쁠 부(孚)\"]\n  ),\n  Quizs(3,\n    `예수님은 3일 만에 부활하신 후 여러 사람들에게 자신의 모습을 보이셨습니다.  이때 예수님의 부활을 가장 처음 목격한 인물은 누구일까요?`,\n      2,\n      [\"배드로\", \"막달라 마리아\", \"요한\"]\n    ),\n    Quizs(4,\n      ` 도마는 부활하신 예수님의 못 찔린 자국을 보고자 했습니다. 도마가 보고자한 예수님의 못 자국이 아닌 곳은 어디일까요?`,\n      1,\n      [\"발\", \"손\", \"옆구리\"]\n    ),\n  Quizs(5,\n    `부활절은 영어로 ‘Easter’ 입니다. Easter의 어원은 무엇일까요?`,\n    3,\n    [\"Eous(새벽의)\", \"Eurus(바람)\", \"Eostre(봄의 여신)\"]\n  ),\n  Quizs(6,\n    `부활 후에 예수님은 길을 가는 두 제자와 동행하십니다. 이때 두 제자 중 한명의 이름은 무엇일까요?`,\n    3,\n    [\"맛디아\", \"다대오\", \"글로바\"]\n  ),\n  Quizs(7,\n    `지난주 종려주일에 드린 대학부 테네브레 예배에 대한 설명으로 옳은 것은 무엇일까요?`,\n    2,\n    [\"테네브레는 영어로 tenebre이다.\", \"탁현수 목사님의 설교 제목은 '베드로를 보시니' 이었다. \", \"남산 산책에서 받은 말씀카드는 누가복음 10장 45절이다.\"]\n  ),\n  Quizs(8,\n    `부활절은 과거 325년 니케아 공의회에서 서방교회들의 기준을 따라 정해졌습니다. 이때 정해진 부활절의 기준은 무엇일까요? `,\n    1,\n    [\"춘분 다음 보름달 이후의 첫 주일\", \"양력 4월의 첫 번째 주일\", \"음력 3월의 첫 번째 주일\"]\n  ),\n  Quizs(9,\n    `폴란드에서는 부활절 다음 월요일에 함께 ‘이것’을 하며 서로의 건강과 안전을 기원합니다. ‘이것’은 무엇일까요?`,\n    3,\n    [\"나뭇가지 씹기\", \"땅에 달걀 껍질 묻기\", \"물 뿌리기\"]\n  ),\n  Quizs(10,\n    `Re VS 100의 진행자인 안태호 벗님은 1997년생(빠른)입니다. 그렇다면 1997년도의 부활절은 언제였을까요?`,\n    1,\n    [\"1997년 3월 30일\", \"1997년 4월 7일\", \"1997년 4월 15일 \"]\n  )\n];","import React from \"react\";\nimport styled from \"styled-components\";\nimport media from \"../styles/media\";\n\nconst QuestionWrapper = styled.div`\n    max-width: 100%;\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    background-color: ${({theme}) => theme.colors.main};\n    color: ${({theme}) => theme.colors.text};\n    border: 5px solid ${({theme}) => theme.colors.border};\n    border-bottom: none;\n    border-radius: 5px;\n    font-size: 2rem;\n    font-weight: bolder;\n    letter-spacing: 1.5px;\n    line-height: 50px;\n    padding: 20px;\n    ${media.tablet`\n      font-size: 1.5rem;\n      line-height: 40px;\n      word-break: break-all;\n      padding: 10px;\n  `}\n`\n\nconst Quiz = ({question}) => {\n  \n  return (\n    <QuestionWrapper>\n      {question}\n    </QuestionWrapper>\n  )\n}\n\nexport default Quiz;","import React from 'react'\nimport styled from 'styled-components'\nimport Box from '../materials/Box';\n\nconst Modal = styled.div`\n\tz-index: 10;\n\tdisplay: ${({show}) => (show ? 'flex' : 'none')};\n    justify-content: center;\n    align-items: center;\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\theight: 100vh;\n\twidth:100vw;\n\tbackground: rgba(0,0,0,0.5);\n`;\n\nconst Container = styled(Box)`\n    background-color: #eee;\n    box-shadow: 0px 2px 6px grey;\n    border-radius: 10px;\n    padding: 10px;\n    width: 450px;\n    height: 300px;\n`\n\nconst BarChart = styled.div`\n    display: grid;\n    grid-template-columns: 60px 270px 80px;\n    grid-template-rows: repeat(3, 50px);\n`\n\nconst Bar = styled.div`\n    height: 15px;\n    width: ${({perc}) => 1+perc+'%'};\n    background-color: ${({color}) => color};\n`\n\nconst Chance = ({visible, toggle, participants}) => {\n    const [a, b, c] = participants;\n    const sum =(a+b+c)/100;\n    return (\n        <Modal show={visible} onClick={toggle}>\n            <Container>\n                <BarChart>\n                    <Box>1번</Box>\n                    <Box left>\n                        <Bar perc={a/sum} color=\"#cf0c0c\" />\n                    </Box>\n                    <Box>{a}명</Box>\n\n                    <Box>2번</Box>\n                    <Box left>\n                        <Bar perc={b/sum} color=\"#20d6a0\"/>\n                    </Box>\n                    <Box>{b}명</Box>\n                    <Box>3번</Box>\n                    <Box left>\n                        <Bar perc={c/sum} color=\"#245cbb\"/>\n                    </Box>\n                    <Box>{c}명</Box>\n                </BarChart>\n            </Container>\n        </Modal>\n    )\n}\n\nexport default Chance;","import React, { useEffect, useState } from 'react';\nimport rgbHex from 'rgb-hex';\nimport styled from 'styled-components';\n\nconst Guage = styled.div`\n    width: 100%;\n    font-size: 20px;\n    color: #ddd;\n    @media(max-width:480px){\n        height: 50px;\n        max-width: 100px;\n        font-size: 20px;\n    }\n    @media(min-width:480px){\n        height: 60px;\n        max-width: 120px;\n        font-size: 26px;\n    }\n    @media(min-width:1080px){\n        height: 90px;\n        max-width: 180px;\n        font-size: 32px;\n    }\n`\n\n\nconst GuageBody = styled.div`\n    width: 100%;\n    height: 0;\n    padding-bottom: 50%;\n    background: #b6d5f8;\n    position: relative;\n    border-top-left-radius: 100% 200%;\n    border-top-right-radius: 100% 200%;\n    overflow: hidden;\n`\n\nconst GuageFill = styled.div`\n    position: absolute;\n    top: 100%;\n    left: 0;\n    width: inherit;\n    height: 100%;\n    transform-origin: center top;\n    transform: rotate(0.25turn);\n    transition: transform 0.2s ease-out;\n    background-color: ${({offset}) => '#'+rgbHex(offset, offset, 255)};\n    transform: rotate( ${({perc}) => perc /2 }turn);\n`\n\nconst GuageCover = styled.div`\n    width: 75%;\n    height: 150%;\n    background-color: #152764;\n    border-radius: 50%;\n    position: absolute;\n    top: 25%;\n    left: 50%;\n    transform: translateX(-50%);\n\n    /* Text */\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding-bottom: 25%;\n    box-sizing: border-box;\n    font-weight: bolder;\n`\n\n\nconst Timer = ({seconds}) => {\n    const perc = seconds / 60;\n    const [offset, setOffset] = useState(1);\n\n    useEffect(() => {\n        setOffset(parseInt( perc > 1 ? 1 : perc < 0 ? 0 :55+192*(1-perc)));\n    },[seconds])\n\n    return (\n        <Guage>\n            <GuageBody>\n                <GuageFill offset={offset} perc={perc} />\n                <GuageCover>{seconds}</GuageCover>\n            </GuageBody>\n        </Guage>\n    )\n}\n\n\nexport default Timer;","import React, { useEffect, useState } from 'react';\nimport { dbService } from '../firebase';\nimport Board from '../components/Board';\nimport Submit from '../components/Submit';\nimport Quizs from '../Quizs';\nimport Button from '../materials/Button';\nimport styled from 'styled-components';\nimport Quiz from '../components/Quiz';\nimport Chance from '../components/Chance';\nimport Timer from '../components/Timer';\nimport media from '../styles/media';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-rows: auto auto auto auto;\n  width: 100%;\n`\n\nconst TopWrapper = styled.div`\n  display: grid;\n  grid-template-columns: auto auto;\n  margin-bottom: 10px;\n  & > div:nth-child(2){\n    display: flex;\n    justify-content: flex-end;\n    align-items: flex-end;\n    & > button {\n      margin: 0;\n    }\n  }\n`\n\nconst QuizWrapper = styled.div`\n    display: grid;\n    grid-template-rows: 360px auto auto;\n    background-color: ${({theme}) => theme.colors.border};\n    border-radius: 15px;\n    box-shadow: 10px 10px 20px black;\n    ${media.tablet`\n    grid-template-columns: 100%;\n    grid-template-rows: 300px;\n  `}\n`\n\nconst ButtonsWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n  & > button {\n    margin: 8px 4px;\n  }\n`\n\nconst Question = ({userObj, doc_user_id, currentInfo}) => {\n  const {currentQuiz, showAnswer, showHint, isBlocked, part, startedTimestamp} = currentInfo;\n  const {isAdmin} = userObj;\n  const quiz = Quizs[currentQuiz];\n  const [participants, setParticipants] = useState([0, 0, 0]);\n  const [surv,setSurv] = useState(0);\n  //Timer useState\n  const [seconds, setSeconds] = useState(60);\n\n  // modal 바깥 부분 클릭 시 숨기기\n  const [display, setDisplay] = useState(false);\n  const toggleHint = () => setDisplay(prev => !prev);\n\n  useEffect(() => {\n    dbService.collection(\"users\").onSnapshot( snapshot => {\n      const survCount = snapshot.docs.map( doc => doc.data()).map( p => p.available);;\n      setSurv(survCount.filter(a => a).length)\n    })\n  }, [currentQuiz]);\n\n  const onPrevClicked = async() => {    \n    if( currentQuiz <= 0 ) return;\n    await dbService.collection('current').doc('current').update({\n        currentQuiz: currentQuiz-1,\n        showAnswer: false,\n        isBlocked: false,\n        startedTimestamp: new Date().getTime()\n    })\n  }\n  \n  //next click 할때 타이머 초기화\n  const onNextClicked = () => {\n    if( currentQuiz === Quizs.length-1 || surv <= 5){\n      dbService.collection('current').doc('current').update({\n        isDone: true\n      })\n      setSeconds(0);\n    }\n    else{\n      dbService.collection('current').doc('current').update({\n        currentQuiz: currentQuiz+1,\n        showAnswer: false,\n        isBlocked: false,\n        startedTimestamp: new Date().getTime()\n      })\n    }\n  }\n\n  const onClickHint = async() => {\n      toggleHint();\n      await dbService.collection('current').doc('current').update({\n        showHint: true\n      });\n  }\n\n  const block = async() => {\n    await dbService.collection('current').doc('current').update({\n      isBlocked: true,\n      startedTimestamp: 0\n    });\n  }\n\n  const revealAnswer = async() => {\n      dbService.collection('current').doc('current').update({\n          showAnswer: true\n      });\n      const usersRef = dbService.collection('users');\n      usersRef.where(\n            `quiz_${quiz.no}`, \n            '!=', \n            quiz.answer\n        ).get()\n        .then((querySnapshot) => {\n\n          // 정답자 0명인 경우\n          if(participants[quiz.answer-1]===0)\n            throw new Error('AllFailed')\n\n          // 탈락자 available: false 처리\n          let batch = dbService.batch();\n          console.log(querySnapshot.docs.length)\n          querySnapshot.docs.forEach((doc) => {\n              const docRef = usersRef.doc(doc.data().uid);\n              batch.update(docRef, {available: false});\n          })\n          batch.commit();\n      }).catch( error => {\n          if(error.message === 'AllFailed')\n            setTimeout(() => alert(\n              '모든 참여자가 탈락하였으므로 다음 라운드에서 모두 재도전합니다.'\n            ), 3000)\n          console.log(\"Error getting document:\", error);\n      });\n  }\n  \n  // 선지 별 선택자 수\n  useEffect(() => {\n    dbService.collection(\"users\").onSnapshot( snapshot => {\n      const people = snapshot.docs.map( doc => doc.data()).map( p => p['quiz_' + quiz.no]);\n      setParticipants([\n        people.filter(a => a===1).length,\n        people.filter(a => a===2).length,\n        people.filter(a => a===3).length\n      ])\n    })\n  }, [currentQuiz]);\n  \n  //Timer\n  useEffect(() => {\n      const countdown = setInterval(() => {\n        const now = new Date().getTime();\n        const passed = parseInt((now - startedTimestamp) / 1000);\n        setSeconds(passed > 61 ? 0 : 61-passed);\n        if(passed >=61)\n          clearInterval(countdown);\n      }, 1000);\n      return () => clearInterval(countdown);\n    }, [startedTimestamp]);\n\n    return (\n      <Wrapper>\n        <TopWrapper>\n        <Timer seconds={seconds} />\n          {isAdmin ?\n            <div>\n              {!showHint &&\n                <Button onClick={onClickHint} disabled={showHint}> \n                  벗님들 찬스 \n                </Button>\n              } \n            </div>\n              : <div />\n          }\n        </TopWrapper>\n        <QuizWrapper>\n            <Quiz question={quiz.question}/>\n            <Submit\n                quiz={quiz} \n                userObj={userObj} \n                doc_user_id={doc_user_id}\n                showAnswer={showAnswer}\n                isBlocked={isBlocked}\n            />\n        </QuizWrapper>\n          {isAdmin &&\n          <ButtonsWrapper>\n              <Button color=\"secondary\" onClick = {onPrevClicked}> 이전 </Button>\n              {\n                !isBlocked ?\n                <Button color=\"secondary\" onClick = {block}> 시간 종료 </Button>\n                :showAnswer ?\n                <Button onClick = {onNextClicked}> 다음 </Button>\n                :\n                <Button onClick = {revealAnswer}> 정답 공개 </Button>\n              }\n          </ButtonsWrapper>\n          }\n            <Board {...{showAnswer, quiz, part, participants, currentInfo, userObj}}/>\n            <Chance visible={display} toggle={toggleHint} participants={participants} currentQuiz={currentQuiz}/>\n      </Wrapper>\n  );\n}\n\nexport default Question;","import styled from \"styled-components\";\n\n// params\n// color : secondary | primary\n\nconst Btn = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 3px;\n    padding: 0.5rem 0;\n    margin: 0.5rem 20rem;\n    width: ${({fullWidth}) => fullWidth ? \"100%\" : '8rem'};\n    font-weight: ${({bold}) => bold ? 'bold' : 'normal'};\n    font-size: ${({fontSize}) => fontSize ? fontSize+'px' : '1rem'};\n    ${({color, theme:{colors}, disabled})=> {\n        const colorset = color===\"secondary\" ? colors.secondary : colors.primary;\n        return `\n            background: ${ disabled? colorset.disabled : colorset.main};\n            color: ${colorset.text};\n            border: ${colorset.border} solid thin;\n            ${!disabled &&`\n                &:hover {\n                    background: ${color===\"text\" ? 'transparent' : colorset.accent };\n                    outline: none;\n                }\n            `}\n        `\n    }}\n`\n\nexport default Btn;\n\n","import React, {useState, useEffect} from 'react';\nimport { dbService } from '../firebase';\nimport styled from 'styled-components';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport { faCrown } from '@fortawesome/free-solid-svg-icons';\nimport Btn from '../materials/Btn'\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    font-size: 2em;\n    font-weight: bolder;\n    text-align: center;\n    align-items: center;\n    letter-spacing: 1.5px;\n    color: #dbe2fd;\n`\nconst Winner = styled.div`\n    display: grid;\n    grid-template-columns: 50px 200px 50px;\n`\n\nconst Survivor = ({userObj}) => {\n    const [lastSurv, setLastSurv] = useState([]);\n    const {isAdmin} = userObj;\n\n    useEffect(() => {\n        return dbService.collection(\"users\").onSnapshot( snapshot => {\n            const surv = snapshot.docs.map( doc => doc.data())\n                .filter(a => a.available)\n                .map( b => b.alias);\n            setLastSurv(surv);\n        })\n    }, []);\n\n    const onClickToDraw = () => {\n        dbService.collection('current').doc('current').update({\n            isDraw : true\n        })\n    }\n\n    return (\n        <Wrapper>\n            <p>\n                최후의 {lastSurv.length}인\n            </p>\n            {\n                lastSurv.map((surv, idx) => (\n                    <Winner key={idx}>\n                        <FontAwesomeIcon icon={faCrown}/>\n                            &nbsp;[&nbsp;{surv}&nbsp;]님&nbsp;\n                        <FontAwesomeIcon icon={faCrown} />\n                    </Winner>\n                ))\n            }\n            <p>\n                문자가 발송될 예정이니 꼭 확인해주세요!\n            </p>\n\n            { isAdmin &&\n                <Btn onClick = {onClickToDraw}> 추첨 하러 가기 </Btn>\n            }\n        </Wrapper>\n    )\n}\n\nexport default Survivor; ","export default __webpack_public_path__ + \"static/media/frame.4a975f16.png\";","import React, { useState } from 'react';\nimport { dbService } from '../firebase';\nimport Button from '../materials/Button';\nimport qrcode from '../assets/images/frame.png';\nimport styled from 'styled-components';\nimport media from '../styles/media';\nimport Box from '../materials/Box';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserFriends } from '@fortawesome/free-solid-svg-icons';\n\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  text-align: left;\n  ${media.tablet`\n    grid-template-columns: 100%;\n    grid-template-rows: auto auto;\n  `}\n`\nconst Description = styled.div`\n  margin: 30px;\n  color: white;\n`\n\nconst Explanation =styled.div`\n  font-weight: 600;\n  letter-spacing: 0.5px;\n  line-height: 2em;\n  font-size: large;  \n  ${media.tablet`\n  font-size: medium;\n  background: linear-gradient(to bottom, #fce4ec, #e3f2fd);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n`}\n`\nconst Counter = styled.div`\n  float: right;\n  font-weight: bolder;\n  font-size: 2rem;\n`\n\nconst Img = styled.img`\n  width: 100%;\n  height: 100%;\n`\n\nconst Descript = ({isAdmin}) => {\n  const [part, setPart] = useState(0);\n\n  const onClickToQuiz = () => {  \n    // 모든 참여자를 available하게 바꿈. \n      const usersRef = dbService.collection('users');\n      usersRef.get()\n        .then((querySnapshot) => {\n          let batch = dbService.batch();\n          querySnapshot.docs.forEach((doc) => {\n            const docRef = usersRef.doc(doc.data().uid);\n            batch.update(docRef, {available: true});\n          })\n          batch.commit();\n      }).catch( error => {\n          console.log(\"Error getting document:\", error);\n      }); \n    // toQuiz 누르는 순간까지 참여한 벗님 수 기록\n      dbService.collection('current').doc('current').update({\n        toQuiz: true,\n        part,\n        showAnswer: false,\n        block: false,\n        showHint: false,\n        currentQuiz: 0,\n        isDone: false,\n        isDraw: false,\n        startedTimestamp: new Date().getTime()\n      })\n      \n  }\n  \n\n    dbService.collection(\"users\").onSnapshot( snapshot => {\n      const people = snapshot.docs.map( doc => doc.data()).length\n      setPart(people)\n    })\n\n  \n  return (\n      <Wrapper>\n        <div>\n          <Description>\n          <Counter>\n            <FontAwesomeIcon icon={faUserFriends}/> &nbsp;\n            {part}\n          </Counter>\n          <h1>Rules</h1>\n            <Explanation>\n              <ol>\n                <li>3개의 보기 중 정답을 고릅니다. </li>\n                <li>100인이 먼저 문제를 다 푼 후, 게스트 2인이 문제를 풉니다. </li>\n                <li>각 문제 당 1분의 시간제한이 있습니다. </li>\n                <li>각 단계의 정답자만 다음 단계로 넘어갈 수 있습니다. </li>\n                <li>최후의 5인이 남을 때까지 퀴즈가 진행됩니다. </li>\n                <li>중간 참여는 불가능합니다.</li>\n                <li>게스트 2명은 함께 2번의 찬스를 쓸 수 있습니다. </li>\n                <ul>\n                  <li>한벗님 찬스 : 원하는 한 명의 답을 알 수 있습니다. </li>\n                  <li>벗님들 찬스 : 모든 벗님이 선택한 답을 알 수 있습니다.</li>\n                </ul>\n              </ol>\n            </Explanation>\n          </Description>\n            \n            {isAdmin && \n            <Box>\n              <Button onClick = {onClickToQuiz}> 퀴즈 시작하기</Button> \n            </Box>\n            }\n          </div>\n          {isAdmin && \n            <Img src={qrcode}/>\n          }\n      </Wrapper> \n  );\n}\n\nexport default Descript;","import React, { useEffect, useState } from 'react';\nimport { dbService } from '../firebase';\nimport styled from 'styled-components';\nimport media from '../styles/media';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport { faSmile } from '@fortawesome/free-solid-svg-icons';\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    font-size: 2em;\n    font-weight: bolder;\n    text-align: center;\n    align-items: center;\n    letter-spacing: 1.5px;\n    line-height: 1.8em;\n    color: white;\n    ${media.tablet`\n      font-size: 1.5em;\n    `}\n    ${media.phone`\n      font-size: 1em;\n    `}\n`\n\nconst Drawn = styled.div`\n    font-style: italic;\n`\n\nconst Draw = () => {\n  const [drawn, setDrawn] = useState([]);\n\n  function shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n\n  useEffect(() => {\n    dbService.collection(\"users\").onSnapshot( snapshot => {\n        const draw = snapshot.docs.map( doc => doc.data())\n                      .filter(a => !a.isAdmin)\n                      .map( b => b.alias)\n                      .slice(0, 10);\n        console.log(draw);\n        shuffle(draw);\n        setDrawn(draw);\n    })\n}, []);\n\n    return (\n      <Wrapper>\n        <div>\n          당첨 축하드립니다!!!<br/>\n          문자가 발송될 예정이니 꼭 확인해주세요 :) \n        </div>\n        <div>\n          <FontAwesomeIcon icon={faSmile} />  추첨자 명단  <FontAwesomeIcon icon={faSmile} />\n        </div>\n        <Drawn>{drawn.join(', ')}</Drawn> \n        <br/><br/>\n        <div>\n          모든 퀴즈 순서가 끝났습니다!\n        </div>\n      </Wrapper>\n    );\n  }\n\nexport default Draw;","  \nimport React from 'react';\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Auth from '../routes/Auth';\nimport SignIn from '../routes/SignIn';\nimport Question from '../routes/Question';\nimport Survivor from '../routes/Survivor';\nimport Descript from '../routes/Descript';\nimport Draw from '../routes/Draw';\n\nconst AppRouter = ({isLoggedIn, userObj, hasAccount, doc_user_id, currentInfo}) => {\n    return (\n      <Router>\n        <Switch>\n          {\n            isLoggedIn ? \n              hasAccount ?\n                <>\n                {\n                  !currentInfo.toQuiz ? \n                    <Route exact path=\"/\">\n                      <Descript\n                        isAdmin={userObj.isAdmin} \n                      />\n                    </Route>\n                    :\n                    <>\n                    {\n                      currentInfo.isDone ?\n                        currentInfo.isDraw ?\n                        <Route exact path=\"/\">\n                          <Draw\n                            userObj = {userObj} \n                          />\n                        </Route>\n                        :\n                        <Route exact path=\"/\">\n                          <Survivor\n                            userObj = {userObj} \n                            currentInfo = {currentInfo}\n                          />\n                        </Route>\n                      :\n                    <Route exact path=\"/\">\n                      <Question\n                        userObj = {userObj} \n                        doc_user_id = {doc_user_id} \n                        currentInfo = {currentInfo}\n                      />\n                    </Route>\n                    }\n                  </>\n                }\n                </>   \n                :\n                <Route exact path=\"/\">\n                  <SignIn \n                  userObj={userObj}\n                  currentInfo = {currentInfo}\n                  />\n                </Route>\n            :\n            <Route exact path=\"/\">\n              <Auth currentInfo = {currentInfo}/>\n            </Route>\n          }\n        </Switch>\n      </Router>\n    );\n}\n\nexport default AppRouter;","import React, { useEffect, useState } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { authService, dbService } from '../firebase';\nimport MainWrapper from '../MainWrapper';\nimport theme from '../styles/theme';\nimport AppRouter from './Router';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  const [hasAccount, setHasAccount] = useState(false);\n  const [docUserId, setDocUserId] = useState('');\n  const [currentInfo, setCurrentInfo] = useState({currentQuiz:0, showAnswer:false, showHint:false, toQuiz:false, isDone:false, isDraw:false});\n\n  useEffect(() => {\n    authService.onAuthStateChanged(async (user) => {\n      if (user) {\n        const users = await dbService.collection('users').where('uid','==',user.uid).get();\n        setHasAccount(Boolean(users.docs.length))\n        try{\n          setUserObj(users.docs[0].data());\n          setDocUserId(users.docs[0].id);\n        }catch(e){\n          setUserObj(user)\n        }\n      }\n      else{\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  dbService.collection('current').doc('current').onSnapshot(data => {\n    setCurrentInfo(data.data())\n  });\n  }, []);\n\n  useEffect(() => {\n    if(!docUserId)\n      return;\n    dbService.collection('users').doc(docUserId).onSnapshot(snap => {\n      setUserObj(snap.data());\n    })\n  },[docUserId])\n\n  return (\n    // 여기는 테마 적용하기 위한 컴포넌트!\n    <ThemeProvider theme={theme}>\n      <MainWrapper>\n        {init ? \n          <AppRouter \n            isLoggedIn = {Boolean(userObj)} \n            userObj = {userObj}\n            hasAccount={hasAccount} \n            doc_user_id={docUserId}\n            currentInfo={currentInfo}\n          />\n        :\n          <div>\n          \"Initializing...\"\n          </div>\n        }\n      </MainWrapper>\n    </ThemeProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}