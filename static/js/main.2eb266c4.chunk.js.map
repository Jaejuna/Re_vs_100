{"version":3,"sources":["firebase.js","assets/fonts/labdigital.ttf","styles/fonts.js","MainWrapper.js","styles/theme.js","materials/Button.js","materials/Input.js","styles/media.js","routes/SignIn.jsx","routes/Auth.jsx","materials/Box.jsx","components/Board.jsx","materials/Choice.jsx","components/Submit.jsx","Quizs.js","components/Quiz.jsx","components/Chance.jsx","routes/Question.jsx","routes/Survivor.jsx","assets/images/frame.png","routes/Descript.jsx","components/Router.js","components/App.jsx","index.jsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storage","createGlobalStyle","LabDigital","Wrapper","styled","div","theme","colors","main","MainBox","MainWrapper","children","calcRem","size","deviceSizes","mobileS","mobileM","mobileL","tablet","tabletL","fontSizes","small","base","lg","xl","xxl","xxxl","titleSize","text","border","selected","answer","answerBorder","answerText","primary","accent","disabled","secondary","device","Button","button","fullWidth","bold","fontSize","color","colorset","Input","input","sizes","giant","huge","bigDesktop","desktop","thone","phablet","phone","tiny","media","Object","keys","reduce","accumulator","label","emSize","first","css","InputWrapper","TitleWrapper","SignIn","userObj","currentInfo","useState","name","setName","alias","setAlias","number","setNumber","toQuiz","history","useHistory","onChange","event","target","value","onSubmit","a","preventDefault","collection","add","uid","isAdmin","available","alert","go","type","placeholder","required","pattern","MyButton","Auth","isLoggedIn","setIsLoggedIn","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","onClick","Box","left","show","Bar","survived","Board","showAnswer","part","corrects","setCorrects","onSnapshot","snapshot","people","docs","map","doc","data","filter","user","length","ChoiceButton","isAnswer","isSelected","Choice","props","Choices","Submit","quiz","doc_user_id","isBlocked","no","candidates","myAnswer","setMyAnswer","onChoiceClicked","ans","submitMyAnswer","update","useEffect","setTimeout","console","log","Quizs","question","QuestionWrapper","Quiz","Modal","Container","BarChart","perc","Chance","visible","toggle","participants","b","c","sum","QuizWrapper","ButtonsWrapper","TimerWrapper","Question","currentQuiz","showHint","setParticipants","surv","setSurv","minutes","setMinutes","seconds","setSeconds","display","setDisplay","toggleHint","prev","onPrevClicked","onNextClick","survCount","p","isDone","onClickHint","block","revealAnswer","countdown","setInterval","parseInt","clearInterval","Survivor","lastSurv","setLastSurv","survee","Img","img","Descript","setPart","onClickToQuiz","src","qrcode","AppRouter","hasAccount","exact","path","component","App","init","setInit","setUserObj","setHasAccount","docUserId","setDocUserId","setCurrentInfo","onAuthStateChanged","where","get","users","Boolean","id","e","snap","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2eb266c4.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\"\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCNEEZVWLepSVn_ennOWsbwjL8E2wqnbpQ\",\r\n    authDomain: \"re-vs-100-8ec8b.firebaseapp.com\",\r\n    projectId: \"re-vs-100-8ec8b\",\r\n    storageBucket: \"re-vs-100-8ec8b.appspot.com\",\r\n    messagingSenderId: \"400681423336\",\r\n    appId: \"1:400681423336:web:13667d56d28179863d545d\"\r\n}\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","export default __webpack_public_path__ + \"static/media/labdigital.a204f34c.ttf\";","import { createGlobalStyle } from \"styled-components\";\r\nimport LabDigital from \"../assets/fonts/labdigital.ttf\";\r\n\r\nexport default createGlobalStyle`\r\n    @font-face {\r\n        font-family: \"Lab Digital\";\r\n        src: local(\"Lab Digital\"),\r\n        url(${LabDigital}) format('woff');\r\n        font-weight: 300;\r\n        font-style: normal;\r\n    }\r\n`;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport GlobalFont from \"./styles/fonts\";\r\n\r\nconst Wrapper = styled.div`\r\n    width: 100%;\r\n    min-height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    /* background-color: ${({theme}) => theme.colors.main}; */\r\n    background: rgb(238,174,202);\r\n    background: radial-gradient(circle, rgba(238,174,202,1) 0%, rgba(148,187,233,1) 100%);\r\n    margin: 0;\r\n\r\n`\r\nconst MainBox = styled.div`\r\n    width:min(1470px, calc(100% - 30px));\r\n    padding: 20px 0 40px 0;\r\n    margin: 0;\r\n`\r\n// 데스크탑 이상 사이즈의 화면에서 양측 여백을 관리하는 Wrapper\r\nconst MainWrapper = ({children}) => (\r\n\r\n    <Wrapper>\r\n        <GlobalFont />\r\n        <MainBox>\r\n            {children}\r\n        </MainBox>\r\n    </Wrapper>\r\n);\r\nexport default MainWrapper;","// 여기는 전체 테마에 대한 내용!\r\n\r\nconst colors = {\r\n    main: '#f6e9ff',\r\n    text: '#333',\r\n    border: '#666',\r\n    selected: `#d9afff`,\r\n    answer: '#b8cbff',\r\n    answerBorder: '#eac2efc',\r\n    answerText: '#2a50b8',\r\n    primary: {\r\n      main: '#303f9f',\r\n      text: `#fff`,\r\n      border: `rgba(0, 0, 0, 0.5)`,\r\n      accent: '#666ad1',\r\n      disabled: `#777aef`\r\n    },\r\n    secondary:{\r\n      main: `#464646`,\r\n      text: `rgba(255,255,255,0.85)`,\r\n      border: `rgba(255,255,255,0.15)`,\r\n      accent: `#5f5f5f`,\r\n      disabled: '#4A4A4A',\r\n    },\r\n};\r\n\r\n//여기 밑에는 걍 복붙한거ㅎㅎㅎ\r\n\r\nconst calcRem = (size) => `${size / 16}rem`;\r\n\r\nconst fontSizes = {\r\n  small: calcRem(14),\r\n  base: calcRem(16),\r\n  lg: calcRem(18),\r\n  xl: calcRem(20),\r\n  xxl: calcRem(22),\r\n  xxxl: calcRem(24),\r\n  titleSize: calcRem(50),\r\n};\r\n\r\nconst deviceSizes = {\r\n  mobileS: 320,\r\n  mobileM: 375,\r\n  mobileL: 450,\r\n  tablet: 768,\r\n  tabletL: 1024,\r\n};\r\n\r\nconst device = {\r\n  mobileS: `only screen and (max-width: ${deviceSizes.mobileS}px)`,\r\n  mobileM: `only screen and (max-width: ${deviceSizes.mobileM}px)`,\r\n  mobileL: `only screen and (max-width: ${deviceSizes.mobileL}px)`,\r\n  tablet: `only screen and (max-width: ${deviceSizes.tablet}px)`,\r\n  tabletL: `only screen and (max-width: ${deviceSizes.tabletL}px)`,\r\n};\r\n\r\nconst theme = {\r\n  fontSizes,\r\n  colors,\r\n  deviceSizes,\r\n  device,\r\n};\r\n\r\nexport default theme;","import styled from \"styled-components\";\r\n\r\n// params\r\n// color : secondary | primary\r\n\r\nconst Button = styled.button`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-radius: 3px;\r\n    padding: 0.5rem 0;\r\n    margin: 0.5rem 1rem;\r\n    border-radius: 5px;\r\n    width: ${({fullWidth}) => fullWidth ? \"100%\" : '8rem'};\r\n    font-weight: ${({bold}) => bold ? 'bold' : 'normal'};\r\n    font-size: ${({fontSize}) => fontSize ? fontSize+'px' : '1rem'};\r\n    outline: none;\r\n    ${ ({color, theme:{colors}, disabled})=> {\r\n        const colorset = color===\"secondary\" ? colors.secondary : colors.primary;\r\n        return `\r\n            background: ${ disabled? colorset.disabled : colorset.main};\r\n            color: ${colorset.text};\r\n            border: ${colorset.border} solid thin;\r\n            ${!disabled &&`\r\n                &:hover {\r\n                    background: ${color===\"text\" ? 'transparent' : colorset.accent };\r\n                    outline: none;\r\n                }\r\n            `}\r\n        `\r\n    }}\r\n`\r\n\r\nexport default Button;\r\n\r\n","import styled from \"styled-components\";\r\n\r\nconst Input = styled.input`\r\n    font-size: 18px;\r\n    padding: 10px;\r\n    margin: 10px;\r\n    background: papayawhip;\r\n    border: none;\r\n    border-radius: 3px;\r\n    ::placeholder {\r\n        color: palevioletred;\r\n    }\r\n`;\r\n\r\nexport default Input;","import { css } from \"styled-components\"\r\n\r\nconst sizes = {\r\n  giant: 1920,\r\n  huge: 1440,\r\n  bigDesktop: 1200,\r\n  desktop: 1000,\r\n  tablet: 768,\r\n  thone: 600,\r\n  phablet: 480,\r\n  phone: 376,\r\n  tiny: 330,\r\n}\r\n\r\n// Iterate through the sizes and create a media template\r\n// Usage:\r\n// const StyledWrapper = styled.div`\r\n//   ${media.huge`margin-left: 20px;`}\r\n// `\r\nconst media = Object.keys(sizes).reduce(\r\n  (accumulator, label) => {\r\n    const emSize = sizes[label] / 16\r\n    accumulator[label] = (first) => css`\r\n      @media (max-width: ${emSize}em) {\r\n        ${css(first)}\r\n      }\r\n    `\r\n    return accumulator\r\n  },{})\r\n\r\nexport default media;","import React, { useState } from 'react';\r\nimport { dbService } from '../firebase';\r\nimport {useHistory} from 'react-router-dom';\r\nimport Input from \"../materials/Input\";\r\nimport styled from \"styled-components\";\r\nimport media from '../styles/media';\r\n\r\nconst InputWrapper = styled.div`\r\n  width: 100vw;\r\n  display: grid;\r\n  justify-content: center;\r\n  max-width: 100%;\r\n  align-items: center;\r\n  ${media.phone`\r\n    grid-template-columns: 100%;\r\n    grid-template-rows: auto auto auto 180px;\r\n  `}\r\n  `\r\n\r\n  const TitleWrapper = styled.div`\r\n  width: 100vw;\r\n  display: grid;\r\n  justify-content: center;\r\n  max-width: 100%;\r\n  align-items: center;\r\n  font-size: 2em;\r\n  ${media.phone`\r\n    grid-template-columns: 100%;\r\n    grid-template-rows: 300px;\r\n  `}\r\n  `\r\n\r\nconst SignIn = ({userObj, currentInfo}) => {\r\n    const [name, setName] = useState(\"\");\r\n    const [alias, setAlias] = useState(\"\");\r\n    const [number, setNumber] = useState(\"\");\r\n    const {toQuiz} = currentInfo\r\n    const history = useHistory();\r\n    \r\n    const onChange = (event) => {\r\n      const {target: {name, value}} = event;\r\n      if (name === \"name\"){\r\n        setName(value);\r\n      } else if (name === \"alias\"){\r\n        setAlias(value);\r\n      } else if (name === \"number\"){\r\n        setNumber(value);\r\n      }\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n      event.preventDefault()\r\n      if(toQuiz === true){\r\n        await dbService.collection(\"users\").add({\r\n          uid: userObj.uid,\r\n          name,\r\n          alias,\r\n          number,\r\n          isAdmin: false,\r\n          available: false\r\n        });\r\n        alert('참관만 가능합니다.');\r\n      } else if (toQuiz === false){\r\n        await dbService.collection(\"users\").add({\r\n          uid: userObj.uid,\r\n          name,\r\n          alias,\r\n          number,\r\n          isAdmin: false,\r\n          available: true\r\n      });\r\n      alert('가입이 완료되었습니다.');\r\n      }\r\n      history.go(0);\r\n    }\r\n\r\n    return (\r\n      <>\r\n      <TitleWrapper>\r\n        <h2>도전자 정보</h2>\r\n      </TitleWrapper>\r\n          <form onSubmit={onSubmit}>\r\n            <InputWrapper>\r\n            <Input\r\n            name = \"name\"\r\n            type = \"text\"\r\n            placeholder = \"이름\"\r\n            required\r\n            value = {name}\r\n            onChange = {onChange}\r\n            />\r\n            <Input \r\n            name = \"alias\"\r\n            type = \"text\"\r\n            placeholder = \"닉네임\"\r\n            required\r\n            value = {alias}\r\n            onChange = {onChange}\r\n            />\r\n            <Input \r\n            name = \"number\"\r\n            type = \"tel\"\r\n            placeholder = \"ex)01012345678\"\r\n            pattern =\"[0-9]{11}\"\r\n            required\r\n            value = {number}\r\n            onChange = {onChange}\r\n            />\r\n            <Input  \r\n            type=\"submit\"\r\n            onSubmit={onSubmit}\r\n            />\r\n            </InputWrapper>\r\n          </form>\r\n        </>\r\n    );\r\n  }\r\n\r\nexport default SignIn;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport {authService, firebaseInstance} from \"../firebase\";\r\nimport Button from '../materials/Button';\r\nimport SignIn from \"./SignIn\"\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0;\r\n`\r\n\r\nconst MyButton = styled(Button)`\r\n  width: 300px;\r\n`\r\n\r\nconst Auth = () => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const onSocialClick = async () => {\r\n    const provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    await authService.signInWithPopup(provider);\r\n    setIsLoggedIn(true);\r\n  }\r\n\r\n  return (\r\n    <>\r\n    { isLoggedIn ?\r\n    <>\r\n      <SignIn />\r\n    </>\r\n      :\r\n      <Wrapper>\r\n        <MyButton onClick={onSocialClick} name =\"google\">\r\n          구글 아이디로 로그인하기\r\n        </MyButton>\r\n      </Wrapper>\r\n    }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Auth;\r\n","import styled from 'styled-components';\r\n\r\nconst Box = styled.div`\r\n    display: flex;\r\n    justify-content: ${({left}) => left ? 'left' : 'center'};\r\n    align-items: center;\r\n`\r\nexport default Box;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { dbService } from '../firebase';\r\nimport Box from '../materials/Box';\r\n\r\nconst Wrapper = styled(Box)`\r\n    opacity: ${({show}) => show ? 1 : 0};\r\n    transition: opacity 0.6s linear;\r\n`\r\n\r\nconst Bar = styled.div`\r\n    width: 96%;\r\n    height: 50px;\r\n    display: grid;\r\n    grid-template-columns: ${({survived}) => `${survived}% ${100 - survived}%`};\r\n\r\n    // 공통\r\n    & > div{\r\n        box-shadow: 1px 0 4px black;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n    // Survived\r\n    & > div:first-child{\r\n        border-top-left-radius: 15px;\r\n        border-bottom-left-radius: 15px;\r\n        background-color: #ce93d8;\r\n        font-weight: bolder;\r\n    }\r\n    // Failed\r\n    & > div:nth-child(2){\r\n        border-top-right-radius: 15px;\r\n        border-bottom-right-radius: 15px;\r\n        background-color: #f3e5f5;\r\n    }\r\n`\r\n\r\n\r\n// part: 전체 참여자\r\n// participants: [1번 정답자, 2번 정답자, 3번 정답자]\r\nconst Board = ({showAnswer, part}) => {\r\n    const [corrects, setCorrects] = useState(0);\r\n    dbService.collection(\"users\").onSnapshot( snapshot => {\r\n        const people = snapshot.docs.map( doc => doc.data()).filter( user => user.available ).length\r\n        setCorrects(people);\r\n    })\r\n\r\n    return(\r\n        <Wrapper show={showAnswer}>\r\n            <Bar survived={100 * corrects / part}>\r\n                <div> {corrects}명 생존</div>\r\n                <div> {part - corrects}명 탈락</div>\r\n            </Bar>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Board;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ChoiceButton = styled.button`\r\n    /* font-family: \"\"; */\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 0;\r\n    font-size: 1.6rem;\r\n    font-weight: bolder;\r\n    border-radius: 15px;\r\n    border: ${({theme, isAnswer}) => isAnswer ? `5px solid ${theme.colors.answerBorder}` : 'none'};;\r\n\r\n    position: relative;\r\n    background-color: ${({theme:{colors}, isSelected, isAnswer}) => \r\n        isSelected ? colors.selected : isAnswer ? colors.answer : colors.main };\r\n    color: ${({theme, isAnswer}) => isAnswer ? theme.colors.answerText : theme.colors.text};\r\n    ${({isAnswer}) => isAnswer && `opacity: 0.7`} \r\n    text-decoration: none;\r\n    text-transform: uppercase;\r\n    transition: 0.5s all ease;\r\n\r\n    \r\n`\r\n\r\nconst Choice = (props) => {\r\n    return (\r\n        <ChoiceButton {...props}>\r\n            {props.text}\r\n        </ChoiceButton>\r\n    )\r\n}\r\n\r\nexport default Choice;","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { dbService } from '../firebase';\r\nimport Choice from '../materials/Choice';\r\nimport media from '../styles/media';\r\n\r\nconst Choices = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    grid-template-rows: 100px;\r\n    ${media.tablet`\r\n        grid-template-columns: 100%;\r\n        grid-template-rows: repeat(3, 60px);\r\n    `}\r\n    grid-gap: 5px;\r\n    background-color: ${({theme}) => theme.colors.border};\r\n    border: 5px solid ${({theme}) => theme.colors.border};\r\n    border-radius: 20px;\r\n`\r\n\r\nconst Submit = ({quiz, userObj, doc_user_id, showAnswer, isBlocked}) => {\r\n    const {isAdmin, available} = userObj;\r\n    const {no, answer, candidates} = quiz;\r\n    const [myAnswer, setMyAnswer] = useState(null);\r\n\r\n    const onChoiceClicked = async ans => {\r\n        if(!isAdmin && showAnswer)\r\n            return;\r\n        setMyAnswer(ans);\r\n        submitMyAnswer(ans);\r\n    }\r\n    const submitMyAnswer = async (ans) => {\r\n        await dbService.collection('users').doc(doc_user_id).update({\r\n            ['quiz_'+no]: ans\r\n        })\r\n    }\r\n\r\n    // 문제가 바뀌면 선택지 초기화\r\n    useEffect(() => {\r\n        setMyAnswer(null);\r\n    }, [quiz.no])\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            if(!showAnswer)\r\n                return;\r\n            if(myAnswer === answer){\r\n                // 정답 색깔 바뀌고 1초 후에 alert\r\n                setTimeout(()=>alert('정답입니다!!'), 1000);\r\n                return;\r\n            }\r\n    \r\n            await dbService.collection('users').doc(doc_user_id).update({\r\n                available: false\r\n            })\r\n            console.log(myAnswer);\r\n            if(!myAnswer) \r\n                return;\r\n            setTimeout(()=>alert('정답을 맞추지 못하셨습니다ㅠㅠ 다음 문제부터는 관전만 가능합니다.'), 1000);\r\n        })();\r\n        \r\n    }, [showAnswer])\r\n\r\n    return(\r\n        <Choices>\r\n            <Choice \r\n                onClick = {() => onChoiceClicked(1)}\r\n                no={1}\r\n                text={candidates[0]}\r\n                isSelected={myAnswer===1}\r\n                isAnswer={answer===1 && showAnswer}\r\n                disabled={!available || showAnswer || (!isAdmin && isBlocked)}\r\n            />\r\n            <Choice \r\n                onClick = {() => onChoiceClicked(2)}\r\n                text={candidates[1]}\r\n                isSelected={myAnswer===2}\r\n                isAnswer={answer===2 && showAnswer}\r\n                disabled={!available || showAnswer || (!isAdmin && isBlocked)}\r\n            />\r\n            <Choice \r\n                onClick = {() => onChoiceClicked(3)}\r\n                no={3}\r\n                text={candidates[2]}\r\n                isSelected={myAnswer===3}\r\n                isAnswer={answer===3 && showAnswer}\r\n                disabled={!available || showAnswer || (!isAdmin && isBlocked)}\r\n            />\r\n        </Choices> \r\n        // }</>        \r\n    )\r\n}\r\n\r\nexport default Submit; ","const Quizs = (no, question, answer, candidates) => ({\r\n  no,\r\n  question,\r\n  answer,\r\n  candidates\r\n})\r\n\r\nexport default [\r\n  Quizs(1,\r\n    `골고다 언덕의 '골고다'의 뜻은?`,\r\n      2,\r\n      [\"죽음\", \"해골산\", \"지옥\"]\r\n    ),\r\n  Quizs(2,\r\n    `영어로 부활절은 Easter 입니다. Easter의 어원은 무엇일까요?`,\r\n    1,\r\n    [\"Eastre(새벽) + Ostara(봄)\", \"Ostern\",\"Pascha\"]\r\n  ),\r\n  Quizs(3,\r\n    `예수님은 십자가에 못박히시고 3일만에 부활하셨습니다. 그리고 그 모습을 여러 사람들에게 보이시며 자신의 부활을 알렸는데요 그 중 예수님의 부활을 가장 처음 목격한 인물은 누구일까요?`,\r\n      1,\r\n      [\"에그 디시브\", \"이스터 에그\", \"이스터 빠끄\"]\r\n    ),\r\n    Quizs(4,\r\n      ` 부활절의 기준은 과거 325년 닛케아 공의회에서 정해졌는데요 이는 서방교회들의 기준을 따른 것이라고 합니다. 부활절의 정확한 날짜 언제 일까요?`,\r\n      1,\r\n      [\"춘분(春分) 이후 보름달이 되는 다음 주일\", \"양력 4월의 첫번째 주일 \", \"음력 3월 첫 주일\"]\r\n    ),\r\n  Quizs(5,\r\n    `호다음 중 부활절의 “부”로 옳은 것은?`,\r\n    1,\r\n    [\"다시 부(復)\", \"뜰 부(浮)\", \"다다를 부(赴)\"]\r\n  ),\r\n  Quizs(6,\r\n    `도마는 부활하신 예수님의 못자국을 보고자 했습니다. 도마가 보길 원했던 예수님의 못자국이 아닌 곳은?`,\r\n    2,\r\n    [\"손\", \"발\", \"옆구리\"]\r\n  ),\r\n  Quizs(7,\r\n    `호스트인 안태호 벗님은 1997년생(빠른)이다. 그렇다면 1997년도의 부활절은 다음 중 언제였을까?`,\r\n    3,\r\n    [\"1997년 4월 7일\", \"1997년 4월 15일\", \"1997년 3월 30일\"]\r\n  ),\r\n  Quizs(8,\r\n    `다음 중 부활절 음식에 해당되지 않는 것은?(1퍼센트를 위한 상식백과 기준)`,\r\n    2,\r\n    [\"햄\", \"김치\", \"삶은 달걀\"]\r\n  ),\r\n];","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst QuestionWrapper = styled.div`\r\n    max-width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: ${({theme}) => theme.colors.main};\r\n    color: ${({theme}) => theme.colors.text};\r\n    border: 5px solid ${({theme}) => theme.colors.border};\r\n    border-bottom: none;\r\n    border-radius: 20px;\r\n    font-size: 1.5rem;\r\n`\r\n\r\nconst Quiz = ({question}) => {\r\n  \r\n  return (\r\n    <QuestionWrapper>\r\n      {question}\r\n    </QuestionWrapper>\r\n  )\r\n}\r\n\r\nexport default Quiz;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Box from '../materials/Box';\r\n\r\nconst Modal = styled.div`\r\n\tz-index: 10;\r\n\tdisplay: ${({show}) => (show ? 'flex' : 'none')};\r\n    justify-content: center;\r\n    align-items: center;\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\theight: 100vh;\r\n\twidth:100vw;\r\n\tbackground: rgba(0,0,0,0.5);\r\n`;\r\n\r\nconst Container = styled(Box)`\r\n    background-color: #eee;\r\n    box-shadow: 0px 2px 6px grey;\r\n    border-radius: 10px;\r\n    padding: 10px;\r\n    width: 450px;\r\n    height: 300px;\r\n`\r\n\r\nconst BarChart = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 60px 270px 80px;\r\n    grid-template-rows: repeat(3, 50px);\r\n`\r\n\r\nconst Bar = styled.div`\r\n    height: 15px;\r\n    width: ${({perc}) => 1+perc+'%'};\r\n    background-color: ${({color}) => color};\r\n`\r\n\r\nconst Chance = ({visible, toggle, participants}) => {\r\n    const [a, b, c] = participants;\r\n    const sum =(a+b+c)/100;\r\n    return (\r\n        <Modal show={visible} onClick={toggle}>\r\n            <Container>\r\n                <BarChart>\r\n                    <Box>1번</Box>\r\n                    <Box left>\r\n                        <Bar perc={a/sum} color=\"#cf0c0c\" />\r\n                    </Box>\r\n                    <Box>{a}명</Box>\r\n\r\n                    <Box>2번</Box>\r\n                    <Box left>\r\n                        <Bar perc={b/sum} color=\"#20d6a0\"/>\r\n                    </Box>\r\n                    <Box>{b}명</Box>\r\n                    <Box>3번</Box>\r\n                    <Box left>\r\n                        <Bar perc={c/sum} color=\"#245cbb\"/>\r\n                    </Box>\r\n                    <Box>{c}명</Box>\r\n                </BarChart>\r\n            </Container>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default Chance;","import React, { useEffect, useState } from 'react';\r\nimport { dbService } from '../firebase';\r\nimport Board from '../components/Board';\r\nimport Submit from '../components/Submit';\r\nimport Quizs from '../Quizs';\r\nimport Button from '../materials/Button';\r\nimport styled from 'styled-components';\r\nimport Quiz from '../components/Quiz';\r\nimport Chance from '../components/Chance';\r\nimport media from '../styles/media';\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-rows: auto auto auto auto;\r\n`\r\n\r\nconst QuizWrapper = styled.div`\r\n    display: grid;\r\n    grid-template-rows: 360px auto auto;\r\n    background-color: ${({theme}) => theme.colors.border};\r\n    border-radius: 20px;\r\n    ${media.tablet`\r\n    grid-template-columns: 100%;\r\n    grid-template-rows: 300px;\r\n  `}\r\n`\r\n\r\nconst ButtonsWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  & > button {\r\n    margin: 8px 4px;\r\n  }\r\n`\r\n\r\nconst TimerWrapper = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  justify-content: flex-start;\r\n  font-size: 2em;\r\n  padding: 5% 0;\r\n`\r\n\r\nconst Question = ({userObj, doc_user_id, currentInfo}) => {\r\n  const {currentQuiz, showAnswer, showHint, isBlocked, part} = currentInfo;\r\n  const {isAdmin} = userObj;\r\n  const quiz = Quizs[currentQuiz];\r\n  const [participants, setParticipants] = useState([0, 0, 0]);\r\n  const [surv,setSurv] = useState(0);\r\n  //Timer useState\r\n  const [minutes, setMinutes] = useState(1);\r\n  const [seconds, setSeconds] = useState(0);\r\n\r\n  // modal 바깥 부분 클릭 시 숨기기\r\n  const [display, setDisplay] = useState(false);\r\n  const toggleHint = () => setDisplay(prev => !prev);\r\n\r\nconst onPrevClicked = async() => {    \r\n  if( currentQuiz <= 0 ) return;\r\n  await dbService.collection('current').doc('current').update({\r\n      currentQuiz: currentQuiz-1,\r\n      showAnswer: false,\r\n      isBlocked: false\r\n  })\r\n}\r\n  //next click 할때 타이머 초기화\r\n  const onNextClick = async() => {\r\n    dbService.collection(\"users\").onSnapshot( snapshot => {\r\n      const survCount = snapshot.docs.map( doc => doc.data()).map( p => p.available);\r\n      setSurv(survCount.filter(a => a === true).length)\r\n    })\r\n    \r\n    // 마지막 문제 or 생존자가 5명이거나 이하일때 isDone:true\r\n    if( currentQuiz >= 7 || surv <= 2){\r\n      await dbService.collection('current').doc('current').update({\r\n        isDone: true\r\n      })\r\n    }else{\r\n      await dbService.collection('current').doc('current').update({\r\n        currentQuiz: currentQuiz+1,\r\n        showAnswer: false,\r\n        isBlocked: false\r\n      })\r\n      setMinutes(1);\r\n      setSeconds(0);\r\n    }\r\n  }\r\n\r\n  const onClickHint = async() => {\r\n      toggleHint();\r\n      await dbService.collection('current').doc('current').update({\r\n        showHint: true\r\n      });\r\n  }\r\n\r\n  const block = async() => {\r\n      await dbService.collection('current').doc('current').update({\r\n        isBlocked: true\r\n    });\r\n    setMinutes(0);\r\n    setSeconds(0);\r\n  }\r\n\r\n  const revealAnswer = async() => {\r\n      await dbService.collection('current').doc('current').update({\r\n        showAnswer: true\r\n    });\r\n  }\r\n\r\n  //Timer\r\n    useEffect(() => {\r\n      const countdown = setInterval(() => {\r\n        if (parseInt(seconds) > 0) {\r\n          setSeconds(parseInt(seconds) - 1);\r\n        }\r\n        if (parseInt(seconds) === 0) {\r\n          if (parseInt(minutes) === 0) {\r\n              clearInterval(countdown);\r\n          } else {\r\n            setMinutes(parseInt(minutes) - 1);\r\n            setSeconds(59);\r\n          }\r\n        }\r\n      }, 1000);\r\n      return () => clearInterval(countdown);\r\n    }, [minutes, seconds]);\r\n\r\n  useEffect(() => {\r\n    dbService.collection(\"users\").onSnapshot( snapshot => {\r\n      const people = snapshot.docs.map( doc => doc.data()).map( p => p['quiz_' + quiz.no]);\r\n      setParticipants([\r\n        people.filter(a => a===1).length,\r\n        people.filter(a => a===2).length,\r\n        people.filter(a => a===3).length\r\n      ])\r\n    })\r\n  }, [currentQuiz]);\r\n\r\n    return (\r\n      <Wrapper>\r\n        <ButtonsWrapper>\r\n          <Button onClick={onClickHint} disabled={showHint} > 찬스 </Button>\r\n        </ButtonsWrapper>\r\n        <QuizWrapper>\r\n            <Quiz question={quiz.question}/>\r\n            <Submit\r\n                quiz={quiz} \r\n                userObj={userObj} \r\n                doc_user_id={doc_user_id}\r\n                showAnswer={showAnswer}\r\n                isBlocked={isBlocked}\r\n            />\r\n        </QuizWrapper>\r\n          {isAdmin &&\r\n          <ButtonsWrapper>\r\n              <Button color=\"secondary\" onClick = {onPrevClicked}> 이전 </Button>\r\n              {\r\n                !isBlocked ?\r\n                <Button color=\"secondary\" onClick = {block}> 시간 종료 </Button>\r\n                :showAnswer ?\r\n                <Button onClick = {onNextClick}> 다음 </Button>\r\n                :\r\n                <Button onClick = {revealAnswer}> 정답 공개 </Button>\r\n              }\r\n          </ButtonsWrapper>\r\n          }\r\n            <Board {...{showAnswer, part, participants}}/>\r\n            <Chance visible={display} toggle={toggleHint} participants={participants}/>\r\n            <TimerWrapper>\r\n              {minutes}:{seconds < 10 ? `0${seconds}` : seconds}\r\n            </TimerWrapper>\r\n      </Wrapper>\r\n\r\n  );\r\n}\r\n\r\nexport default Question;","import React, {useState, useEffect} from 'react';\r\nimport { dbService } from '../firebase';\r\n\r\nconst Survivor = () => {\r\n    const [lastSurv, setLastSurv] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbService.collection(\"users\").onSnapshot( snapshot => {\r\n            const surv = snapshot.docs.map( doc => doc.data())\r\n            const survee = surv.filter(a => a.available ===true).map( b => b.alias)\r\n            setLastSurv(survee);\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n        <div>\r\n            축하드립니다!!! 최후의 생존자 여러분!!!!\r\n        </div>\r\n        <div>\r\n            {[lastSurv]}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Survivor; ","export default __webpack_public_path__ + \"static/media/frame.4a975f16.png\";","import React, { useState } from 'react';\r\nimport { dbService } from '../firebase';\r\nimport Button from '../materials/Button';\r\nimport qrcode from '../assets/images/frame.png';\r\nimport styled from 'styled-components';\r\nimport media from '../styles/media';\r\nimport Box from '../materials/Box';\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  ${media.tablet`\r\n    grid-template-columns: 100%;\r\n    grid-template-rows: auto auto;\r\n  `}\r\n`\r\nconst Img = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\n\r\nconst Descript = ({isAdmin}) => {\r\n  const [part, setPart] = useState(0);\r\n\r\n  const onClickToQuiz = async () => {    \r\n    // toQuiz 누르는 순간까지 참여한 벗님 수 기록\r\n    await dbService.collection('current').doc('current').update({\r\n      toQuiz: true,\r\n      part,\r\n      showAnswer: false,\r\n      block: false,\r\n      showHint: false,\r\n      currentQuiz: 0\r\n    })\r\n  }\r\n\r\n    dbService.collection(\"users\").onSnapshot( snapshot => {\r\n      const people = snapshot.docs.map( doc => doc.data()).length\r\n      setPart(people)\r\n    })\r\n\r\n  \r\n  return (\r\n      <Wrapper>\r\n        <div>\r\n          <h1>Rules</h1>\r\n            <div>\r\n              1.3개의 보기 중 정답을 고른다. <br/>\r\n              2.100인이 먼저 문제를 다 푼 후, 게스트 2인이 푼다. <br/>\r\n              3.문제를 푸는 데는 1분의 시간제한이 있다. <br/>\r\n              4.문제를 틀리면 탈락이며, 정답자만 다음 문제로 넘어간다.(중간 참여 불가능) <br/>\r\n              5. 정답자가 8명(?) 이하로 남으면 프로그램이 종료한다. <br/>\r\n              6. 게스트 2명은 함께 2번의 찬스를 쓸 수 있다.<br/><br/>\r\n              한벗님 찬스 : 원하는 한 명의 답을 알 수 있다, 없을 시 호스트가 지정. <br/>\r\n              벗님들 찬스 : 모든 벗님이 선택한 답을 알 수 있다.<br/><br/>\r\n              {part}명 참여하셨습니다.\r\n            </div>\r\n            \r\n            {isAdmin && \r\n            <Box>\r\n              <Button onClick = {onClickToQuiz}> 퀴즈 시작하기</Button> \r\n            </Box>\r\n            }\r\n          </div>\r\n          <Img src={qrcode}/>\r\n      </Wrapper> \r\n  );\r\n}\r\n\r\nexport default Descript;","  \r\nimport React from 'react';\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Auth from '../routes/Auth';\r\nimport SignIn from '../routes/SignIn';\r\nimport Question from '../routes/Question';\r\nimport Survivor from '../routes/Survivor';\r\nimport Descript from '../routes/Descript';\r\n\r\nconst AppRouter = ({isLoggedIn, userObj, hasAccount, doc_user_id, currentInfo}) => {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          {\r\n            isLoggedIn ? \r\n              hasAccount ?\r\n                <>\r\n                {\r\n                  !currentInfo.toQuiz ? \r\n                    <Route exact path=\"/\">\r\n                      <Descript\r\n                        isAdmin={userObj.isAdmin} \r\n                      />\r\n                    </Route>\r\n                    :\r\n                    <>\r\n                    {\r\n                      currentInfo.isDone ?\r\n                      <Route exact path=\"/\">\r\n                        <Survivor\r\n                          userObj = {userObj} \r\n                        />\r\n                      </Route>\r\n                      :\r\n                    <Route exact path=\"/\">\r\n                      <Question\r\n                        userObj = {userObj} \r\n                        doc_user_id = {doc_user_id} \r\n                        currentInfo = {currentInfo}\r\n                      />\r\n                    </Route>\r\n                    }\r\n                  </>\r\n                }\r\n                </>   \r\n                :\r\n                <Route exact path=\"/\">\r\n                  <SignIn \r\n                  userObj={userObj}\r\n                  currentInfo = {currentInfo}\r\n                  />\r\n                </Route>\r\n            :\r\n            <Route exact path=\"/\" component={Auth}/>\r\n          }\r\n        </Switch>\r\n      </Router>\r\n    );\r\n}\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { authService, dbService } from '../firebase';\r\nimport MainWrapper from '../MainWrapper';\r\nimport theme from '../styles/theme';\r\nimport AppRouter from './Router';\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n  const [hasAccount, setHasAccount] = useState(false);\r\n  const [docUserId, setDocUserId] = useState('');\r\n  const [currentInfo, setCurrentInfo] = useState({currentQuiz:0, showAnswer:false, showHint:false, toQuiz:false, isDone:false});\r\n\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged(async (user) => {\r\n      if (user) {\r\n        const users = await dbService.collection('users').where('uid','==',user.uid).get();\r\n        setHasAccount(Boolean(users.docs.length))\r\n        try{\r\n          setUserObj(users.docs[0].data());\r\n          setDocUserId(users.docs[0].id);\r\n        }catch(e){\r\n          setUserObj(user)\r\n        }\r\n      }\r\n      else{\r\n        setUserObj(null);\r\n      }\r\n      setInit(true);\r\n    });\r\n  dbService.collection('current').doc('current').onSnapshot(data => {\r\n    setCurrentInfo(data.data())\r\n  });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(!docUserId)\r\n      return;\r\n    dbService.collection('users').doc(docUserId).onSnapshot(snap => {\r\n      setUserObj(snap.data());\r\n    })\r\n  },[docUserId])\r\n\r\n  return (\r\n    // 여기는 테마 적용하기 위한 컴포넌트!\r\n    <ThemeProvider theme={theme}>\r\n      <MainWrapper>\r\n        {init ? \r\n          <AppRouter \r\n            isLoggedIn = {Boolean(userObj)} \r\n            userObj = {userObj}\r\n            hasAccount={hasAccount} \r\n            doc_user_id={docUserId}\r\n            currentInfo={currentInfo}\r\n          />\r\n        :\r\n          <div>\r\n          \"Initializing...\"\r\n          </div>\r\n        }\r\n      </MainWrapper>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}