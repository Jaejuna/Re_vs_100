{"version":3,"sources":["firebase.js","assets/fonts/labdigital.ttf","styles/fonts.js","MainWrapper.js","styles/theme.js","materials/Button.js","materials/Input.js","routes/SignIn.jsx","routes/Auth.jsx","materials/Box.jsx","components/Board.jsx","materials/Choice.jsx","styles/media.js","components/Submit.jsx","Quizs.js","components/Quiz.jsx","components/Chance.jsx","routes/Question.jsx","routes/Survivor.jsx","assets/images/frame.png","routes/Descript.jsx","components/Router.js","components/App.jsx","index.jsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storage","createGlobalStyle","LabDigital","Wrapper","styled","div","theme","colors","main","MainBox","MainWrapper","children","calcRem","size","deviceSizes","mobileS","mobileM","mobileL","tablet","tabletL","fontSizes","small","base","lg","xl","xxl","xxxl","titleSize","text","border","selected","answer","answerBorder","answerText","primary","accent","disabled","secondary","device","Button","button","fullWidth","bold","fontSize","color","colorset","Input","input","SignIn","userObj","currentInfo","useState","name","setName","alias","setAlias","number","setNumber","toQuiz","history","useHistory","onChange","event","target","value","onSubmit","a","preventDefault","collection","add","uid","isAdmin","available","alert","go","type","placeholder","required","pattern","MyButton","Auth","isLoggedIn","setIsLoggedIn","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","onClick","Box","left","show","Bar","survived","Board","showAnswer","part","participants","corrects","setCorrects","onSnapshot","snapshot","people","docs","map","doc","data","filter","user","length","ChoiceButton","isAnswer","isSelected","Choice","props","sizes","giant","huge","bigDesktop","desktop","thone","phablet","phone","tiny","media","Object","keys","reduce","accumulator","label","emSize","first","css","Choices","Submit","quiz","doc_user_id","isBlocked","no","candidates","myAnswer","setMyAnswer","onChoiceClicked","ans","submitMyAnswer","update","useEffect","setTimeout","console","log","Quizs","question","QuestionWrapper","Quiz","Modal","Container","BarChart","perc","Chance","visible","toggle","b","c","sum","QuizWrapper","ButtonsWrapper","Question","currentQuiz","showHint","setParticipants","minutes","setMinutes","seconds","setSeconds","display","setDisplay","toggleHint","prev","onPrevClicked","onNextClick","timestamp","Date","getTime","onClickHint","block","revealAnswer","countdown","setInterval","parseInt","clearInterval","p","Survivor","isSurvived","Img","img","Descript","setPart","onClickToQuiz","src","qrcode","AppRouter","hasAccount","exact","path","component","App","init","setInit","setUserObj","setHasAccount","docUserId","setDocUserId","isDone","setCurrentInfo","onAuthStateChanged","where","get","users","Boolean","id","e","snap","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc9fc475.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\"\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCNEEZVWLepSVn_ennOWsbwjL8E2wqnbpQ\",\n    authDomain: \"re-vs-100-8ec8b.firebaseapp.com\",\n    projectId: \"re-vs-100-8ec8b\",\n    storageBucket: \"re-vs-100-8ec8b.appspot.com\",\n    messagingSenderId: \"400681423336\",\n    appId: \"1:400681423336:web:13667d56d28179863d545d\"\n}\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","export default __webpack_public_path__ + \"static/media/labdigital.a204f34c.ttf\";","import { createGlobalStyle } from \"styled-components\";\nimport LabDigital from \"../assets/fonts/labdigital.ttf\";\n\nexport default createGlobalStyle`\n    @font-face {\n        font-family: \"Lab Digital\";\n        src: local(\"Lab Digital\"),\n        url(${LabDigital}) format('woff');\n        font-weight: 300;\n        font-style: normal;\n    }\n`;","import React from \"react\";\nimport styled from \"styled-components\";\nimport GlobalFont from \"./styles/fonts\";\n\nconst Wrapper = styled.div`\n    width: 100%;\n    min-height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    /* background-color: ${({theme}) => theme.colors.main}; */\n    background: rgb(238,174,202);\n    background: radial-gradient(circle, rgba(238,174,202,1) 0%, rgba(148,187,233,1) 100%);\n    margin: 0;\n\n`\nconst MainBox = styled.div`\n    width:min(1470px, calc(100% - 30px));\n    padding: 20px 0 40px 0;\n    margin: 0;\n`\n// 데스크탑 이상 사이즈의 화면에서 양측 여백을 관리하는 Wrapper\nconst MainWrapper = ({children}) => (\n\n    <Wrapper>\n        <GlobalFont />\n        <MainBox>\n            {children}\n        </MainBox>\n    </Wrapper>\n);\nexport default MainWrapper;","// 여기는 전체 테마에 대한 내용!\n\nconst colors = {\n    main: '#f6e9ff',\n    text: '#333',\n    border: '#666',\n    selected: `#d9afff`,\n    answer: '#b8cbff',\n    answerBorder: '#eac2efc',\n    answerText: '#2a50b8',\n    primary: {\n      main: '#303f9f',\n      text: `#fff`,\n      border: `rgba(0, 0, 0, 0.5)`,\n      accent: '#666ad1',\n      disabled: `#777aef`\n    },\n    secondary:{\n      main: `#464646`,\n      text: `rgba(255,255,255,0.85)`,\n      border: `rgba(255,255,255,0.15)`,\n      accent: `#5f5f5f`,\n      disabled: '#4A4A4A',\n    },\n};\n\n//여기 밑에는 걍 복붙한거ㅎㅎㅎ\n\nconst calcRem = (size) => `${size / 16}rem`;\n\nconst fontSizes = {\n  small: calcRem(14),\n  base: calcRem(16),\n  lg: calcRem(18),\n  xl: calcRem(20),\n  xxl: calcRem(22),\n  xxxl: calcRem(24),\n  titleSize: calcRem(50),\n};\n\nconst deviceSizes = {\n  mobileS: 320,\n  mobileM: 375,\n  mobileL: 450,\n  tablet: 768,\n  tabletL: 1024,\n};\n\nconst device = {\n  mobileS: `only screen and (max-width: ${deviceSizes.mobileS}px)`,\n  mobileM: `only screen and (max-width: ${deviceSizes.mobileM}px)`,\n  mobileL: `only screen and (max-width: ${deviceSizes.mobileL}px)`,\n  tablet: `only screen and (max-width: ${deviceSizes.tablet}px)`,\n  tabletL: `only screen and (max-width: ${deviceSizes.tabletL}px)`,\n};\n\nconst theme = {\n  fontSizes,\n  colors,\n  deviceSizes,\n  device,\n};\n\nexport default theme;","import styled from \"styled-components\";\n\n// params\n// color : secondary | primary\n\nconst Button = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 3px;\n    padding: 0.5rem 0;\n    margin: 0.5rem 1rem;\n    border-radius: 5px;\n    width: ${({fullWidth}) => fullWidth ? \"100%\" : '8rem'};\n    font-weight: ${({bold}) => bold ? 'bold' : 'normal'};\n    font-size: ${({fontSize}) => fontSize ? fontSize+'px' : '1rem'};\n    outline: none;\n    ${ ({color, theme:{colors}, disabled})=> {\n        const colorset = color===\"secondary\" ? colors.secondary : colors.primary;\n        return `\n            background: ${ disabled? colorset.disabled : colorset.main};\n            color: ${colorset.text};\n            border: ${colorset.border} solid thin;\n            ${!disabled &&`\n                &:hover {\n                    background: ${color===\"text\" ? 'transparent' : colorset.accent };\n                    outline: none;\n                }\n            `}\n        `\n    }}\n`\n\nexport default Button;\n\n","import styled from \"styled-components\";\n\nconst Input = styled.input`\n    font-size: 18px;\n    padding: 10px;\n    margin: 10px;\n    background: papayawhip;\n    border: none;\n    border-radius: 3px;\n    ::placeholder {\n        color: palevioletred;\n    }\n`;\n\nexport default Input;","import React, { useState } from 'react';\nimport { dbService } from '../firebase';\nimport {useHistory} from 'react-router-dom';\nimport Input from \"../materials/Input\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  `\n\nconst SignIn = ({userObj, currentInfo}) => {\n    const [name, setName] = useState(\"\");\n    const [alias, setAlias] = useState(\"\");\n    const [number, setNumber] = useState(\"\");\n    const {toQuiz} = currentInfo\n    const history = useHistory();\n    \n    const onChange = (event) => {\n      const {target: {name, value}} = event;\n      if (name === \"name\"){\n        setName(value);\n      } else if (name === \"alias\"){\n        setAlias(value);\n      } else if (name === \"number\"){\n        setNumber(value);\n      }\n    };\n\n\n\n    const onSubmit = async (event) => {\n      event.preventDefault()\n      if(toQuiz === true){\n        await dbService.collection(\"users\").add({\n          uid: userObj.uid,\n          name: name,\n          alias: alias,\n          number: number,\n          isAdmin: false,\n          available: false\n        });\n        alert('가입이 완료되었습니다.');\n      } else if (toQuiz === false){\n        await dbService.collection(\"users\").add({\n          uid: userObj.uid,\n          name: name,\n          alias: alias,\n          number: number,\n          isAdmin: false,\n          available: true\n      });\n      alert('참관만 가능합니다.');\n      }\n      history.go(0);\n    }\n\n    return (\n      <>\n      <Wrapper>\n        <h2>도전자 정보</h2>\n      </Wrapper>\n          <form onSubmit={onSubmit}>\n            <Wrapper>\n            <Input\n            name = \"name\"\n            type = \"text\"\n            placeholder = \"이름\"\n            required\n            value = {name}\n            onChange = {onChange}\n            />\n            <Input \n            name = \"alias\"\n            type = \"text\"\n            placeholder = \"닉네임\"\n            required\n            value = {alias}\n            onChange = {onChange}\n            />\n            <Input \n            name = \"number\"\n            type = \"tel\"\n            placeholder = \"ex)01012345678\"\n            pattern =\"[0-9]{7}\"\n            required\n            value = {number}\n            onChange = {onChange}\n            />\n            <Input  \n            type=\"submit\"\n            onSubmit={onSubmit}\n            />\n          </Wrapper>\n          </form>\n        </>\n    );\n  }\n\nexport default SignIn;","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport {authService, firebaseInstance} from \"../firebase\";\nimport Button from '../materials/Button';\nimport SignIn from \"./SignIn\"\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0;\n`\n\nconst MyButton = styled(Button)`\n  width: 300px;\n`\n\nconst Auth = () => {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const onSocialClick = async () => {\n        const provider = new firebaseInstance.auth.GoogleAuthProvider();\n        await authService.signInWithPopup(provider);\n        setIsLoggedIn(true);\n      }\n\n  return (\n    <>\n    { isLoggedIn ?\n      <SignIn />\n      :\n      <Wrapper>\n        <MyButton onClick={onSocialClick} name =\"google\">\n          구글 아이디로 로그인하기\n        </MyButton>\n      </Wrapper>\n    }\n    </>\n  );\n}\n\nexport default Auth;\n","import styled from 'styled-components';\n\nconst Box = styled.div`\n    display: flex;\n    justify-content: ${({left}) => left ? 'left' : 'center'};\n    align-items: center;\n`\nexport default Box;","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { dbService } from '../firebase';\nimport Box from '../materials/Box';\n\nconst Wrapper = styled(Box)`\n    opacity: ${({show}) => show ? 1 : 0};\n    transition: opacity 0.6s linear;\n`\n\nconst Bar = styled.div`\n    width: 96%;\n    height: 50px;\n    display: grid;\n    grid-template-columns: ${({survived}) => `${survived}% ${100 - survived}%`};\n\n    // 공통\n    & > div{\n        box-shadow: 1px 0 4px black;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n    // Survived\n    & > div:first-child{\n        border-top-left-radius: 15px;\n        border-bottom-left-radius: 15px;\n        background-color: #ce93d8;\n        font-weight: bolder;\n    }\n    // Failed\n    & > div:nth-child(2){\n        border-top-right-radius: 15px;\n        border-bottom-right-radius: 15px;\n        background-color: #f3e5f5;\n    }\n`\n\n\n// part: 전체 참여자\n// participants: [1번 정답자, 2번 정답자, 3번 정답자]\nconst Board = ({showAnswer, part, participants}) => {\n    const [corrects, setCorrects] = useState(0);\n    dbService.collection(\"users\").onSnapshot( snapshot => {\n        const people = snapshot.docs.map( doc => doc.data())\n                        .filter( user => user.available )\n                        .length\n        setCorrects(people);\n      })\n\n    return(\n        <Wrapper show={showAnswer}>\n            <Bar survived={100 * corrects / part}>\n                <div> {corrects}명 생존</div>\n                <div> {part - corrects}명 탈락</div>\n            </Bar>\n        </Wrapper>\n    )\n}\n\nexport default Board;","import React from 'react';\nimport styled from 'styled-components';\n\nconst ChoiceButton = styled.button`\n    /* font-family: \"\"; */\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 0;\n    font-size: 1.6rem;\n    font-weight: bolder;\n    border-radius: 15px;\n    border: ${({theme, isAnswer}) => isAnswer ? `5px solid ${theme.colors.answerBorder}` : 'none'};;\n\n    position: relative;\n    background-color: ${({theme:{colors}, isSelected, isAnswer}) => \n        isSelected ? colors.selected : isAnswer ? colors.answer : colors.main };\n    color: ${({theme, isAnswer}) => isAnswer ? theme.colors.answerText : theme.colors.text};\n    ${({isAnswer}) => isAnswer && `opacity: 0.7`} \n    text-decoration: none;\n    text-transform: uppercase;\n    transition: 0.5s all ease;\n\n    \n`\n\nconst Choice = (props) => {\n    return (\n        <ChoiceButton {...props}>\n            {props.text}\n        </ChoiceButton>\n    )\n}\n\nexport default Choice;","import { css } from \"styled-components\"\n\nconst sizes = {\n  giant: 1920,\n  huge: 1440,\n  bigDesktop: 1200,\n  desktop: 1000,\n  tablet: 768,\n  thone: 600,\n  phablet: 480,\n  phone: 376,\n  tiny: 330,\n}\n\n// Iterate through the sizes and create a media template\n// Usage:\n// const StyledWrapper = styled.div`\n//   ${media.huge`margin-left: 20px;`}\n// `\nconst media = Object.keys(sizes).reduce(\n  (accumulator, label) => {\n    const emSize = sizes[label] / 16\n    accumulator[label] = (first) => css`\n      @media (max-width: ${emSize}em) {\n        ${css(first)}\n      }\n    `\n    return accumulator\n  },{})\n\nexport default media;","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { dbService } from '../firebase';\nimport Choice from '../materials/Choice';\nimport media from '../styles/media';\n\nconst Choices = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-template-rows: 100px;\n    ${media.tablet`\n        grid-template-columns: 100%;\n        grid-template-rows: repeat(3, 60px);\n    `}\n    grid-gap: 5px;\n    background-color: ${({theme}) => theme.colors.border};\n    border: 5px solid ${({theme}) => theme.colors.border};\n    border-radius: 20px;\n`\n\nconst Submit = ({quiz, userObj, doc_user_id, showAnswer, isBlocked}) => {\n    const {isAdmin, available} = userObj;\n    const {no, answer, candidates} = quiz;\n    const [myAnswer, setMyAnswer] = useState(null);\n\n    const onChoiceClicked = async ans => {\n        if(!isAdmin && showAnswer)\n            return;\n        setMyAnswer(ans);\n        submitMyAnswer(ans);\n    }\n    const submitMyAnswer = async (ans) => {\n        await dbService.collection('users').doc(doc_user_id).update({\n            ['quiz_'+no]: ans\n        })\n    }\n\n    // 문제가 바뀌면 선택지 초기화\n    useEffect(() => {\n        setMyAnswer(null);\n    }, [quiz.no])\n\n    useEffect(() => {\n        (async () => {\n            if(!showAnswer)\n                return;\n            if(myAnswer === answer){\n                // 정답 색깔 바뀌고 1초 후에 alert\n                setTimeout(()=>alert('정답입니다!!'), 1000);\n                return;\n            }\n    \n            await dbService.collection('users').doc(doc_user_id).update({\n                available: false\n            })\n            console.log(myAnswer);\n            if(!myAnswer) \n                return;\n            setTimeout(()=>alert('정답을 맞추지 못하셨습니다ㅠㅠ 다음 문제부터는 관전만 가능합니다.'), 1000);\n        })();\n        \n      }, [showAnswer])\n  \n    return(\n        <Choices>\n            <Choice \n                onClick = {() => onChoiceClicked(1)}\n                no={1}\n                text={candidates[0]}\n                isSelected={myAnswer===1}\n                isAnswer={answer===1 && showAnswer}\n                disabled={!available || showAnswer || (!isAdmin && isBlocked)}\n            />\n            <Choice \n                onClick = {() => onChoiceClicked(2)}\n                text={candidates[1]}\n                isSelected={myAnswer===2}\n                isAnswer={answer===2 && showAnswer}\n                disabled={!available || showAnswer || (!isAdmin && isBlocked)}\n            />\n            <Choice \n                onClick = {() => onChoiceClicked(3)}\n                no={3}\n                text={candidates[2]}\n                isSelected={myAnswer===3}\n                isAnswer={answer===3 && showAnswer}\n                disabled={!available || showAnswer || (!isAdmin && isBlocked)}\n            />\n        </Choices> \n        // }</>        \n    )\n}\n\nexport default Submit; ","const Quizs = (no, question, answer, candidates) => ({\n  no,\n  question,\n  answer,\n  candidates\n})\n\nexport default [\n  Quizs(1,\n  `호스트인 안태호 벗님은 1997년생(빠른)이다. 그렇다면 1997년도의 부활절은 다음 중 언제였을까?`,\n    3,\n    [\"1997년 4월 7일\", \"1997년 4월 15일\", \"1997년 3월 30일\"]\n  ),\n  Quizs(2,\n    `도마는 부활하신 예수님의 못자국을 보고자 했습니다. 도마가 보길 원했던 예수님의 못자국이 아닌 곳은?`,\n    2,\n    [\"손\", \"발\", \"옆구리\"]\n  ),\n  Quizs(3,\n    `예수님이 며칠만에 부활하셨나요?`,\n    3,\n    [\"나흘\", \"4일\",\"사흘\"]\n  ),\n];","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst QuestionWrapper = styled.div`\n    max-width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: ${({theme}) => theme.colors.main};\n    color: ${({theme}) => theme.colors.text};\n    border: 5px solid ${({theme}) => theme.colors.border};\n    border-bottom: none;\n    border-radius: 20px;\n    font-size: 1.5rem;\n`\n\nconst Quiz = ({question}) => {\n  \n  return (\n    <QuestionWrapper>\n      {question}\n    </QuestionWrapper>\n  )\n}\n\nexport default Quiz;","import React from 'react'\nimport styled from 'styled-components'\nimport Box from '../materials/Box';\n\nconst Modal = styled.div`\n\tz-index: 10;\n\tdisplay: ${({show}) => (show ? 'flex' : 'none')};\n    justify-content: center;\n    align-items: center;\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\theight: 100vh;\n\twidth:100vw;\n\tbackground: rgba(0,0,0,0.5);\n`;\n\nconst Container = styled(Box)`\n    background-color: #eee;\n    box-shadow: 0px 2px 6px grey;\n    border-radius: 10px;\n    padding: 10px;\n    width: 450px;\n    height: 300px;\n`\n\nconst BarChart = styled.div`\n    display: grid;\n    grid-template-columns: 60px 270px 80px;\n    grid-template-rows: repeat(3, 50px);\n`\n\nconst Bar = styled.div`\n    height: 15px;\n    width: ${({perc}) => 1+perc+'%'};\n    background-color: ${({color}) => color};\n`\n\nconst Chance = ({visible, toggle, participants}) => {\n    const [a, b, c] = participants;\n    const sum =(a+b+c)/100;\n    return (\n        <Modal show={visible} onClick={toggle}>\n            <Container>\n                <BarChart>\n                    <Box>1</Box>\n                    <Box left>\n                        <Bar perc={a/sum} color=\"#cf0c0c\" />\n                    </Box>\n                    <Box>{a}명</Box>\n\n                    <Box>2</Box>\n                    <Box left>\n                        <Bar perc={b/sum} color=\"#20d6a0\"/>\n                    </Box>\n                    <Box>{b}명</Box>\n                    <Box>3</Box>\n                    <Box left>\n                        <Bar perc={c/sum} color=\"#245cbb\"/>\n                    </Box>\n                    <Box>{c}명</Box>\n                </BarChart>\n            </Container>\n        </Modal>\n    )\n}\n\nexport default Chance;","import React, { useEffect, useState } from 'react';\nimport { dbService } from '../firebase';\nimport Board from '../components/Board';\nimport Submit from '../components/Submit';\nimport Quizs from '../Quizs';\nimport Button from '../materials/Button';\nimport styled from 'styled-components';\nimport Quiz from '../components/Quiz';\nimport Chance from '../components/Chance';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-rows: auto auto auto auto auto;\n`\n\nconst QuizWrapper = styled.div`\n    display: grid;\n    grid-template-rows: 360px auto auto;\n    background-color: ${({theme}) => theme.colors.border};\n    border-radius: 20px;\n`\n\nconst ButtonsWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n  & > button {\n    margin: 8px 4px;\n  }\n`\n\nconst Question = ({userObj, doc_user_id, currentInfo}) => {\n  const {currentQuiz, showAnswer, showHint, isBlocked, part} = currentInfo;\n  const {isAdmin, available} = userObj;\n  const quiz = Quizs[currentQuiz];\n  const [participants, setParticipants] = useState([0, 0, 0]);\n  //Timer useState\n  const [minutes, setMinutes] = useState(1);\n  const [seconds, setSeconds] = useState(0);\n\n  // modal 바깥 부분 클릭 시 숨기기\n  const [display, setDisplay] = useState(false);\n  const toggleHint = () => setDisplay(prev => !prev);\n\nconst onPrevClicked = async() => {    \n  if( currentQuiz <= 0 ) return;\n  await dbService.collection('current').doc('current').update({\n      currentQuiz: currentQuiz-1,\n      showAnswer: false,\n      isBlocked: false\n  })\n}\n  //next click 할때 타이머 초기화\n  const onNextClick = async() => {\n    if( currentQuiz >= 2 ) \n        return;\n    await dbService.collection('current').doc('current').update({\n      currentQuiz: currentQuiz+1,\n      showAnswer: false,\n      isBlocked: false\n    })\n    setMinutes(1);\n    setSeconds(0);\n    const timestamp = new Date().getTime();\n    console.log(timestamp / 1000)\n  }\n\n  const onClickHint = async() => {\n      toggleHint();\n      await dbService.collection('current').doc('current').update({\n        showHint: true\n      });\n  }\n\n  const block = async() => {\n      await dbService.collection('current').doc('current').update({\n        isBlocked: true\n    });\n  }\n\n  const revealAnswer = async() => {\n      await dbService.collection('current').doc('current').update({\n        showAnswer: true\n    });\n  }\n\n  //Timer\n    useEffect(() => {\n      const countdown = setInterval(() => {\n        if (parseInt(seconds) > 0) {\n          setSeconds(parseInt(seconds) - 1);\n        }\n        if (parseInt(seconds) === 0) {\n          if (parseInt(minutes) === 0) {\n              clearInterval(countdown);\n          } else {\n            setMinutes(parseInt(minutes) - 1);\n            setSeconds(59);\n          }\n        }\n      }, 1000);\n      return () => clearInterval(countdown);\n    }, [minutes, seconds]);\n\n  useEffect(() => {\n    dbService.collection(\"users\").onSnapshot( snapshot => {\n      const people = snapshot.docs.map( doc => doc.data()).map( p => p['quiz_' + quiz.no]);\n      setParticipants([\n        people.filter(a => a===1).length,\n        people.filter(a => a===2).length,\n        people.filter(a => a===3).length\n      ])\n    })\n  }, [currentQuiz]);\n\n  // Descript toQuiz 되면 submit 못 누르게, isSurvived = false면 못 누르게\n  // userObj 의 available 값을 줘서 button을 disable\n\n    return (\n      <Wrapper>\n        <ButtonsWrapper>\n          <Button onClick={onClickHint} disabled={showHint} > 찬스 </Button>\n        </ButtonsWrapper>\n        <QuizWrapper>\n            <Quiz question={quiz.question}/>\n            <Submit\n                quiz={quiz} \n                userObj={userObj} \n                doc_user_id={doc_user_id}\n                showAnswer={showAnswer}\n                isBlocked={isBlocked}\n            />\n        </QuizWrapper>\n          {isAdmin &&\n          <ButtonsWrapper>\n              <Button color=\"secondary\" onClick = {onPrevClicked}> 이전 </Button>\n              {\n                !isBlocked ?\n                <Button color=\"secondary\" onClick = {block}> 시간 종료 </Button>\n                :showAnswer ?\n                <Button onClick = {onNextClick}> 다음 </Button>\n                :\n                <Button onClick = {revealAnswer}> 정답 공개 </Button>\n              }\n          </ButtonsWrapper>\n          }\n            <Board {...{showAnswer, part, participants}}/>\n            <h2>\n              {minutes}:{seconds < 10 ? `0${seconds}` : seconds}\n            </h2>\n            <Chance visible={display} toggle={toggleHint} participants={participants}/>\n      </Wrapper>\n\n  );\n}\n\nexport default Question;","import React from 'react';\n\nconst Survivor = ({userObj}) => {\n    const {name, isSurvived} = userObj;\n\n    return (\n        <div>\n        최후의 생존자\n        {isSurvived ? name : \"\"}\n        </div>\n    )\n}\n\nexport default Survivor; ","export default __webpack_public_path__ + \"static/media/frame.4a975f16.png\";","import React, { useState } from 'react';\nimport { dbService } from '../firebase';\nimport Button from '../materials/Button';\nimport qrcode from '../assets/images/frame.png';\nimport styled from 'styled-components';\nimport media from '../styles/media';\nimport Box from '../materials/Box';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  ${media.tablet`\n    grid-template-columns: 100%;\n    grid-template-rows: auto auto;\n  `}\n`\nconst Img = styled.img`\n  width: 100%;\n  height: 100%;\n`\n\nconst Descript = ({isAdmin}) => {\n  const [part, setPart] = useState(0);\n\n  const onClickToQuiz = async () => {    \n    // toQuiz 누르는 순간까지 참여한 벗님 수 기록\n    await dbService.collection('current').doc('current').update({\n      toQuiz: true,\n      part,\n      showAnswer: false,\n      block: false,\n      showHint: false,\n      currentQuiz: 0\n    })\n  }\n\n    dbService.collection(\"users\").onSnapshot( snapshot => {\n      const people = snapshot.docs.map( doc => doc.data()).length\n      setPart(people)\n    })\n\n  \n  return (\n      <Wrapper>\n        <div>\n          <h1>Rules</h1>\n            <div>\n              1.3개의 보기 중 정답을 고른다. <br/>\n              2.100인이 먼저 문제를 다 푼 후, 게스트 2인이 푼다. <br/>\n              3.문제를 푸는 데는 1분의 시간제한이 있다. <br/>\n              4.문제를 틀리면 탈락이며, 정답자만 다음 문제로 넘어간다.(중간 참여 불가능) <br/>\n              5. 정답자가 8명(?) 이하로 남으면 프로그램이 종료한다. <br/>\n              6. 게스트 2명은 함께 2번의 찬스를 쓸 수 있다.<br/><br/>\n              한벗님 찬스 : 원하는 한 명의 답을 알 수 있다, 없을 시 호스트가 지정. <br/>\n              벗님들 찬스 : 모든 벗님이 선택한 답을 알 수 있다.<br/><br/>\n              {part}명 참여하셨습니다.\n            </div>\n            \n            {isAdmin && \n            <Box>\n              <Button onClick = {onClickToQuiz}> 퀴즈 시작하기</Button> \n            </Box>\n            }\n          </div>\n          <Img src={qrcode}/>\n      </Wrapper> \n  );\n}\n\nexport default Descript;","import React from 'react';\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Auth from '../routes/Auth';\nimport SignIn from '../routes/SignIn';\nimport Question from '../routes/Question';\nimport Survivor from '../routes/Survivor';\nimport Descript from '../routes/Descript';\n\nconst AppRouter = ({isLoggedIn, userObj, hasAccount, doc_user_id, currentInfo}) => {\n    return (\n      <Router>\n        <Switch>\n          {\n            isLoggedIn ? \n              hasAccount ?\n                <>\n                {\n                  !currentInfo.toQuiz ? \n                    <Route exact path=\"/\">\n                      <Descript\n                        isAdmin={userObj.isAdmin} \n                      />\n                    </Route>\n                    :\n                    <Route exact path=\"/\">\n                      <Question\n                        userObj = {userObj} \n                        doc_user_id = {doc_user_id} \n                        currentInfo = {currentInfo}\n                      />\n                    </Route>\n                }\n                  <Route exact path=\"/result\" component={Survivor}/>\n                </>   \n                :\n                <Route exact path=\"/\">\n                  <SignIn \n                  userObj={userObj}\n                  currentInfo = {currentInfo}\n                  />\n                </Route>\n            :\n            <Route exact path=\"/\" component={Auth}/>\n          }\n        </Switch>\n      </Router>\n    );\n}\n\nexport default AppRouter;","import React, { useEffect, useState } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { authService, dbService } from '../firebase';\nimport MainWrapper from '../MainWrapper';\nimport theme from '../styles/theme';\nimport AppRouter from './Router';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  const [hasAccount, setHasAccount] = useState(false);\n  const [docUserId, setDocUserId] = useState('');\n  const [currentInfo, setCurrentInfo] = useState({currentQuiz:0, showAnswer:false, showHint:false, toQuiz:false, isDone:false});\n\n  useEffect(() => {\n    authService.onAuthStateChanged(async (user) => {\n      if (user) {\n        const users = await dbService.collection('users').where('uid','==',user.uid).get();\n        setHasAccount(Boolean(users.docs.length))\n        try{\n          setUserObj(users.docs[0].data());\n          setDocUserId(users.docs[0].id);\n        }catch(e){\n          setUserObj(user)\n        }\n      }\n      else{\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  dbService.collection('current').doc('current').onSnapshot(data => {\n    setCurrentInfo(data.data())\n  });\n  }, []);\n\n  useEffect(() => {\n    if(!docUserId)\n      return;\n    dbService.collection('users').doc(docUserId).onSnapshot(snap => {\n      setUserObj(snap.data());\n    })\n  },[docUserId])\n\n  return (\n    // 여기는 테마 적용하기 위한 컴포넌트!\n    <ThemeProvider theme={theme}>\n      <MainWrapper>\n        {init ? \n          <AppRouter \n            isLoggedIn = {Boolean(userObj)} \n            userObj = {userObj}\n            hasAccount={hasAccount} \n            doc_user_id={docUserId}\n            currentInfo={currentInfo}\n          />\n        :\n          <div>\n          \"Initializing...\"\n          </div>\n        }\n      </MainWrapper>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}