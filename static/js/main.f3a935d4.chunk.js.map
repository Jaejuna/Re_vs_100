{"version":3,"sources":["firebase.js","assets/fonts/SamlipOutline.ttf","assets/fonts/labdigital.ttf","assets/fonts/SamlipBasic.ttf","styles/fonts.js","assets/images/backgroundMobile.jpg","styles/media.js","materials/Box.jsx","MainWrapper.js","styles/theme.js","materials/Button.js","materials/Input.js","assets/images/challenger.png","routes/SignIn.jsx","assets/images/quizLogo.png","routes/Auth.jsx","components/Board.jsx","hooks/useDidMountEffect.js","materials/Choice.jsx","components/Submit.jsx","Quizs.js","components/Quiz.jsx","components/Chance.jsx","components/Timer.jsx","routes/Question.jsx","materials/Btn.js","routes/Survivor.jsx","assets/images/frame.png","routes/Descript.jsx","routes/Draw.jsx","components/Router.js","components/App.jsx","index.jsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storage","createGlobalStyle","SamOut","SamBasic","sizes","giant","huge","bigDesktop","desktop","tablet","thone","phablet","phone","tiny","media","Object","keys","reduce","accumulator","label","emSize","first","css","Box","styled","div","left","Wrapper","theme","colors","main","bg_mobile","MainBox","MainWrapper","children","calcRem","size","deviceSizes","mobileS","mobileM","mobileL","tabletL","fontSizes","small","base","lg","xl","xxl","xxxl","titleSize","text","border","selected","answer","answerBorder","answerText","primary","accent","disabled","secondary","device","Button","button","fullWidth","bold","fontSize","color","colorset","Input","input","InputWrapper","Img","img","SignIn","userObj","currentInfo","useState","name","setName","alias","setAlias","number","setNumber","toQuiz","onChange","event","target","value","onSubmit","a","preventDefault","collection","doc","uid","set","isAdmin","available","quiz_1","quiz_2","quiz_3","quiz_4","quiz_5","quiz_6","quiz_7","quiz_8","alert","window","location","reload","src","challenger","placeholder","required","type","pattern","MyButton","Auth","isLoggedIn","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","quizLogo","onClick","Bar","show","survived","Board","showAnswer","quiz","participants","corrects","setCorrects","all","setAll","currentQuiz","useEffect","b","useDidMountEffect","func","deps","didMount","useRef","current","ChoiceButton","isAnswer","isSelected","Choice","props","Choices","Submit","doc_user_id","isBlocked","no","candidates","myAnswer","setMyAnswer","onChoiceClicked","ans","submitMyAnswer","update","setTimeout","Quizs","question","QuestionWrapper","Quiz","Modal","Container","BarChart","perc","Chance","visible","toggle","c","sum","Guage","GuageBody","GuageFill","offset","rgbHex","GuageCover","Timer","seconds","setOffset","parseInt","TopWrapper","QuizWrapper","ButtonsWrapper","Question","showHint","part","startedTimestamp","setParticipants","surv","setSurv","setSeconds","display","setDisplay","toggleHint","prev","onSnapshot","snapshot","survCount","docs","map","data","p","filter","length","onPrevClicked","Date","getTime","onClickHint","block","revealAnswer","usersRef","where","get","then","querySnapshot","Error","batch","console","log","forEach","docRef","commit","catch","error","message","people","countdown","setInterval","now","passed","clearInterval","isDone","Btn","Winner","Survivor","lastSurv","setLastSurv","idx","icon","faCrown","isDraw","Description","Explanation","Counter","Descript","setPart","faUserFriends","qrcode","Drawn","Draw","drawn","setDrawn","draw","slice","i","j","Math","floor","random","shuffle","faSmile","join","AppRouter","hasAccount","exact","path","App","init","setInit","setUserObj","setHasAccount","docUserId","setDocUserId","setCurrentInfo","onAuthStateChanged","user","users","Boolean","id","e","snap","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3a935d4.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\"\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCNEEZVWLepSVn_ennOWsbwjL8E2wqnbpQ\",\r\n    authDomain: \"re-vs-100-8ec8b.firebaseapp.com\",\r\n    projectId: \"re-vs-100-8ec8b\",\r\n    storageBucket: \"re-vs-100-8ec8b.appspot.com\",\r\n    messagingSenderId: \"400681423336\",\r\n    appId: \"1:400681423336:web:13667d56d28179863d545d\"\r\n}\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","export default __webpack_public_path__ + \"static/media/SamlipOutline.cb892823.ttf\";","export default __webpack_public_path__ + \"static/media/labdigital.a204f34c.ttf\";","export default __webpack_public_path__ + \"static/media/SamlipBasic.d6a7dad8.ttf\";","import { createGlobalStyle } from \"styled-components\";\r\nimport LabDigital from \"../assets/fonts/labdigital.ttf\";\r\nimport SamOut from \"../assets/fonts/SamlipOutline.ttf\"\r\nimport SamBasic from \"../assets/fonts/SamlipBasic.ttf\"\r\n\r\nexport default createGlobalStyle`\r\n    @font-face {\r\n        font-family: \"SamOut\";\r\n        src: local('SamOut'), local('SamBasic')\r\n        url(${SamOut}) format('woff'),\r\n        url(${SamBasic}) format('woff');\r\n        font-weight: 300;\r\n        font-style: normal;\r\n    }\r\n`;","export default __webpack_public_path__ + \"static/media/backgroundMobile.619b31bf.jpg\";","import { css } from \"styled-components\"\r\n\r\nconst sizes = {\r\n  giant: 1920,\r\n  huge: 1440,\r\n  bigDesktop: 1200,\r\n  desktop: 1000,\r\n  tablet: 768,\r\n  thone: 600,\r\n  phablet: 480,\r\n  phone: 376,\r\n  tiny: 330,\r\n}\r\n\r\n// Iterate through the sizes and create a media template\r\n// Usage:\r\n// const StyledWrapper = styled.div`\r\n//   ${media.huge`margin-left: 20px;`}\r\n// `\r\nconst media = Object.keys(sizes).reduce(\r\n  (accumulator, label) => {\r\n    const emSize = sizes[label] / 16\r\n    accumulator[label] = (first) => css`\r\n      @media (max-width: ${emSize}em) {\r\n        ${css(first)}\r\n      }\r\n    `\r\n    return accumulator\r\n  },{})\r\n\r\nexport default media;","import styled from 'styled-components';\r\n\r\nconst Box = styled.div`\r\n    display: flex;\r\n    justify-content: ${({left}) => left ? 'left' : 'center'};\r\n    align-items: center;\r\n`\r\nexport default Box;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport GlobalFont from \"./styles/fonts\";\r\nimport bg_mobile from \"./assets/images/backgroundMobile.jpg\";\r\nimport media from \"./styles/media\";\r\nimport Box from \"./materials/Box\";\r\n\r\nconst Wrapper = styled.div`\r\n    width: 100%;\r\n    min-height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    /* background-color: ${({theme}) => theme.colors.main}; */\r\n    //원래 백그라운 컬러\r\n    //background: radial-gradient(circle, rgba(238,174,202,1) 0%, rgba(148,187,233,1) 100%);\r\n    // background: radial-gradient(farthest-corner at 800px 300px, #f4f4f4, #363636 65%);\r\n    background-image: url(${bg_mobile});\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    margin: 0;\r\n`\r\nconst MainBox = styled(Box)`\r\n    width:min(1470px, calc(100% - 30px));\r\n    padding: 20px 0 40px 0;\r\n    margin: 0;\r\n`\r\n// 데스크탑 이상 사이즈의 화면에서 양측 여백을 관리하는 Wrapper\r\nconst MainWrapper = ({children}) => (\r\n\r\n    <Wrapper>\r\n        <GlobalFont />\r\n        <MainBox>\r\n            {children}\r\n        </MainBox>\r\n    </Wrapper>\r\n);\r\nexport default MainWrapper;","// 여기는 전체 테마에 대한 내용!\r\n\r\nconst colors = {\r\n    main: '#365387',\r\n    text: '#ddd',\r\n    border: '#494949',\r\n    selected: `#cc76c2`,\r\n    answer: '#b8cbff',\r\n    answerBorder: '#eac2efc',\r\n    answerText: '#4b3297',\r\n    primary: {\r\n      main: '#01579b',\r\n      text: `#fff`,\r\n      border: `rgba(0, 0, 0, 0.5)`,\r\n      accent: '#666ad1',\r\n      disabled: `#6f74dd`\r\n    },\r\n    secondary:{\r\n      main: `#464646`,\r\n      text: `rgba(255,255,255,0.85)`,\r\n      border: `rgba(255,255,255,0.15)`,\r\n      accent: `#5f5f5f`,\r\n      disabled: '#4A4A4A',\r\n    },\r\n  }\r\n\r\nconst calcRem = (size) => `${size / 16}rem`;\r\n\r\nconst fontSizes = {\r\n  small: calcRem(14),\r\n  base: calcRem(16),\r\n  lg: calcRem(18),\r\n  xl: calcRem(20),\r\n  xxl: calcRem(22),\r\n  xxxl: calcRem(24),\r\n  titleSize: calcRem(50),\r\n};\r\n\r\nconst deviceSizes = {\r\n  mobileS: 320,\r\n  mobileM: 375,\r\n  mobileL: 450,\r\n  tablet: 768,\r\n  tabletL: 1024,\r\n};\r\n\r\nconst device = {\r\n  mobileS: `only screen and (max-width: ${deviceSizes.mobileS}px)`,\r\n  mobileM: `only screen and (max-width: ${deviceSizes.mobileM}px)`,\r\n  mobileL: `only screen and (max-width: ${deviceSizes.mobileL}px)`,\r\n  tablet: `only screen and (max-width: ${deviceSizes.tablet}px)`,\r\n  tabletL: `only screen and (max-width: ${deviceSizes.tabletL}px)`,\r\n};\r\n\r\nconst theme = {\r\n  fontSizes,\r\n  colors,\r\n  deviceSizes,\r\n  device,\r\n};\r\n\r\nexport default theme;","import styled from \"styled-components\";\r\n\r\n// params\r\n// color : secondary | primary\r\n\r\nconst Button = styled.button`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-radius: 3px;\r\n    padding: 0.5rem 0;\r\n    margin: 0.5rem 1rem;\r\n    width: ${({fullWidth}) => fullWidth ? \"100%\" : '8rem'};\r\n    font-weight: ${({bold}) => bold ? 'bold' : 'normal'};\r\n    font-size: ${({fontSize}) => fontSize ? fontSize+'px' : '1rem'};\r\n    outline: none;\r\n    ${({color, theme:{colors}, disabled})=> {\r\n        const colorset = color===\"secondary\" ? colors.secondary : colors.primary;\r\n        return `\r\n            background: ${ disabled? colorset.disabled : colorset.main};\r\n            color: ${colorset.text};\r\n            border: ${colorset.border} solid thin;\r\n            ${!disabled &&`\r\n                &:hover {\r\n                    background: ${color===\"text\" ? 'transparent' : colorset.accent };\r\n                    outline: none;\r\n                }\r\n            `}\r\n        `\r\n    }}\r\n`\r\n\r\nexport default Button;\r\n\r\n","import styled from \"styled-components\";\r\n\r\nconst Input = styled.input`\r\n    font-size: 18px;\r\n    padding: 10px;\r\n    border: none;\r\n    border-radius: 6px;\r\n    outline: none;\r\n    border-bottom: 2px solid ${({theme}) => theme.colors.main};\r\n    background: rgba( 255, 255, 255, 0.20 );\r\n    box-shadow: 0 8px 40px 0 rgba( 31, 38, 135, 0.37 );\r\n    backdrop-filter: blur( 10.5px );\r\n    -webkit-backdrop-filter: blur( 10.5px );\r\n    ::placeholder {\r\n        color: #dddddd;\r\n    }\r\n    :focus {\r\n        border-bottom: 4px solid ${({theme}) => theme.colors.selected};\r\n    }\r\n\r\n`;\r\n\r\nexport default Input;","export default __webpack_public_path__ + \"static/media/challenger.03e4f276.png\";","import React, { useState } from 'react';\r\nimport { dbService } from '../firebase';\r\nimport Input from \"../materials/Input\";\r\nimport styled from \"styled-components\";\r\nimport media from '../styles/media';\r\nimport challenger from '../assets/images/challenger.png';\r\nimport Button from '../materials/Button';\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    text-align: center;\r\n    justify-items: center;\r\n`\r\n\r\nconst InputWrapper = styled.div`\r\n    width: 100vw;\r\n    display: flex;\r\n    justify-content: center;\r\n    max-width: 100%;\r\n    align-items: center;\r\n    flex-direction: row;\r\n    margin-bottom: 100px;\r\n    \r\n    & > button {\r\n      margin: 0;\r\n    }\r\n    & > *:nth-child(n+2){\r\n      margin-left: 15px;\r\n      margin-top: 0;\r\n    }\r\n    ${media.tablet`\r\n      flex-direction: column;\r\n        & > input {\r\n          width: 80%;\r\n        }\r\n        & > *:nth-child(n+2){\r\n          margin-left: 0px;\r\n          margin-top: 15px;\r\n        }\r\n    `}\r\n`\r\n\r\nconst Img = styled.img`\r\n  width: 50%;\r\n  height: 100%;\r\n  ${media.tablet`\r\n  width: 100%;\r\n  height: auto;\r\n`}\r\n`\r\n\r\nconst SignIn = ({userObj, currentInfo}) => {\r\n    const [name, setName] = useState(\"\");\r\n    const [alias, setAlias] = useState(\"\");\r\n    const [number, setNumber] = useState(\"\");\r\n    const {toQuiz} = currentInfo\r\n    \r\n    const onChange = (event) => {\r\n      const {target: {name, value}} = event;\r\n      if (name === \"name\"){\r\n        setName(value);\r\n      } else if (name === \"alias\"){\r\n        setAlias(value);\r\n      } else if (name === \"number\"){\r\n        setNumber(value);\r\n      }\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n      event.preventDefault();\r\n      await dbService.collection(\"users\").doc(userObj.uid).set({\r\n          uid: userObj.uid,\r\n          name,\r\n          alias,\r\n          number,\r\n          isAdmin: false,\r\n          available: !toQuiz,\r\n          quiz_1: 0,\r\n          quiz_2: 0,\r\n          quiz_3: 0,\r\n          quiz_4: 0,\r\n          quiz_5: 0,\r\n          quiz_6: 0,\r\n          quiz_7: 0,\r\n          quiz_8: 0\r\n      });\r\n      alert(toQuiz ? '참관만 가능합니다.' : '가입이 완료되었습니다.');\r\n      window.location.reload(false);\r\n    }\r\n\r\n    return (\r\n      <Wrapper>\r\n        <Img src = {challenger} />\r\n        <form onSubmit={onSubmit}>\r\n          <InputWrapper>\r\n            <Input\r\n              name = \"name\"\r\n              placeholder = \"이름\"\r\n              required\r\n              value = {name}\r\n              onChange = {onChange}\r\n            />\r\n            <Input \r\n              name = \"alias\"\r\n              placeholder = \"닉네임\"\r\n              required\r\n              value = {alias}\r\n              onChange = {onChange}\r\n            />\r\n            <Input \r\n              name = \"number\"\r\n              type = \"tel\"\r\n              placeholder = \"ex) 01012345678\"\r\n              pattern =\"[0-9]{11}\"\r\n              required\r\n              value = {number}\r\n              onChange = {onChange}\r\n            />\r\n            <Button type = \"submit\" onSubmit = {onSubmit}> \r\n              입장\r\n            </Button>\r\n          </InputWrapper>\r\n        </form>\r\n      </Wrapper>\r\n    );\r\n  }\r\n\r\nexport default SignIn;","export default __webpack_public_path__ + \"static/media/quizLogo.740cf7c9.png\";","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport {authService, firebaseInstance} from \"../firebase\";\r\nimport Button from '../materials/Button';\r\nimport SignIn from \"./SignIn\"\r\nimport quizLogo from '../assets/images/quizLogo.png';\r\nimport media from '../styles/media';\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  align-items: center;\r\n  grid-template-rows: repeat(2, 1fr);\r\n  text-align: center;\r\n  justify-items: center;\r\n  ${media.tablet`\r\n    grid-template-columns: 100%;\r\n    grid-template-rows: auto auto;\r\n  `}\r\n`\r\n\r\nconst MyButton = styled(Button)`\r\n  width: 300px;\r\n`\r\n\r\nconst Img = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  ${media.tablet`\r\n    width: 100%;\r\n    height: 180px;\r\n  `}\r\n`\r\n\r\nconst Auth = () => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const onSocialClick = async () => {\r\n    const provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    await authService.signInWithPopup(provider);\r\n  }\r\n\r\n  const refresh = () => {\r\n    window.location.reload(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n    { isLoggedIn ?\r\n    <>\r\n      <SignIn/>\r\n      {refresh}\r\n    </>\r\n      :\r\n      <Wrapper>\r\n        <Img src={quizLogo}/>\r\n        <MyButton onClick={onSocialClick} name =\"google\">\r\n          구글 아이디로 로그인하기\r\n        </MyButton>\r\n      </Wrapper>\r\n    }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Auth;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Bar = styled.div`\r\n    padding-top: 20px;\r\n    opacity: ${({show}) => show ? 1 : 0};\r\n    transition: opacity 0.6s linear;\r\n\r\n    min-width: 96%;\r\n    height: 50px;\r\n    display: flex;\r\n\r\n    // 공통\r\n    & > div{\r\n        box-shadow: 1px 0 4px black;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n    // Survived\r\n    & > div:first-child{\r\n        border-top-left-radius: 15px;\r\n        border-bottom-left-radius: 15px;\r\n        background-color: #ce93d8;\r\n        font-weight: bolder;\r\n        width: ${({survived}) => `${survived}%`};\r\n        ${({survived}) => {\r\n            if(!survived)\r\n                return `display: none;`\r\n            else if(survived === 100)\r\n                return `border-radius: 15px;`\r\n            else \r\n                return `display: flex;`\r\n        }}\r\n    }\r\n    // Failed\r\n    & > div:nth-child(2){\r\n        border-top-right-radius: 15px;\r\n        border-bottom-right-radius: 15px;\r\n        background-color: #f3e5f5;\r\n        width: ${({survived}) => `${100 - survived}%`};\r\n        ${({survived}) => {\r\n            if(survived===100)\r\n                return `display: none;`\r\n            else if(!survived)\r\n                return `border-radius: 15px;`\r\n            else\r\n                return `display: flex;`\r\n        }}\r\n    }\r\n`\r\n\r\n// part: 전체 참여자\r\n// participants: [1번 선택자, 2번 선택자, 3번 선택자]\r\nconst Board = ({showAnswer, quiz, participants, currentInfo}) => {\r\n    const [corrects, setCorrects] = useState(0);\r\n    const [all, setAll] = useState(1);\r\n    const {currentQuiz} = currentInfo;\r\n    \r\n    useEffect(() => {\r\n        setCorrects(participants[quiz.answer-1]);\r\n        setAll(participants.reduce((a, b) => a+b));\r\n    }, [currentQuiz]);\r\n\r\n    return(\r\n        <Bar show={showAnswer} survived={100 * corrects / all}>\r\n            <div> {`${corrects}명 생존`}</div>\r\n            <div> {`${all - corrects}명 탈락`}</div>\r\n        </Bar>\r\n    )\r\n}\r\n\r\nexport default Board;","import { useEffect, useRef } from 'react';\r\n\r\nconst useDidMountEffect = (func, deps) => {\r\n    const didMount = useRef(false);\r\n\r\n    useEffect(() => {\r\n        if (didMount.current) func();\r\n        else didMount.current = true;\r\n    }, deps);\r\n}\r\n\r\nexport default useDidMountEffect;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ChoiceButton = styled.button`\r\n    /* font-family: \"\"; */\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 0;\r\n    font-size: 1.6rem;\r\n    font-weight: bolder;\r\n    border-radius: 5px;\r\n    border: ${({theme, isAnswer}) => isAnswer ? `5px solid ${theme.colors.answerBorder}` : 'none'};;\r\n    color: white;\r\n    position: relative;\r\n    background-color: ${({theme:{colors}, isSelected, isAnswer}) => \r\n        isSelected ? colors.selected : isAnswer ? colors.answer : colors.main };\r\n    color: ${({theme, isAnswer, isSelected}) => isAnswer ? isSelected ? '#1a17bb' : theme.colors.answerText : theme.colors.text};\r\n    ${({isAnswer}) => isAnswer && `opacity: 0.7`} \r\n    text-decoration: none;\r\n    text-transform: uppercase;\r\n    transition: 0.5s all ease;\r\n    outline: none;\r\n`\r\n\r\nconst Choice = (props) => {\r\n    return (\r\n        <ChoiceButton {...props}>\r\n            {props.text}\r\n        </ChoiceButton>\r\n    )\r\n}\r\n\r\nexport default Choice;","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { dbService } from '../firebase';\r\nimport useDidMountEffect from '../hooks/useDidMountEffect';\r\nimport Choice from '../materials/Choice';\r\nimport media from '../styles/media';\r\n\r\nconst Choices = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    grid-template-rows: 100px;\r\n    ${media.tablet`\r\n        grid-template-columns: 100%;\r\n        grid-template-rows: repeat(3, 60px);\r\n    `}\r\n    grid-gap: 5px;\r\n    background-color: ${({theme}) => theme.colors.border};\r\n    border: 5px solid ${({theme}) => theme.colors.border};\r\n    border-radius: 5px;\r\n`\r\n\r\nconst Submit = ({quiz, userObj, doc_user_id, showAnswer, isBlocked}) => {\r\n    const {isAdmin, available} = userObj;\r\n    const {no, answer, candidates} = quiz;\r\n    const [myAnswer, setMyAnswer] = useState(null);\r\n\r\n    const onChoiceClicked = async ans => {\r\n        if(!isAdmin && showAnswer)\r\n            return;\r\n        setMyAnswer(ans);\r\n        submitMyAnswer(ans);\r\n    }\r\n    const submitMyAnswer = async (ans) => {\r\n        await dbService.collection('users').doc(doc_user_id).update({\r\n            ['quiz_'+no]: ans\r\n        })\r\n    }\r\n\r\n    // 문제가 바뀌면 선택지 초기화\r\n    useEffect(() => {\r\n        setMyAnswer(null);\r\n    }, [quiz.no])\r\n\r\n    // not execute on initial Rendering\r\n    useDidMountEffect(() => {\r\n        (async () => {\r\n            if(!showAnswer)\r\n                return;\r\n            if(myAnswer === answer){\r\n                // 정답 색깔 바뀌고 1초 후에 alert\r\n                setTimeout(()=>alert('정답입니다!!'), 1000);\r\n                return;\r\n            }\r\n                setTimeout(()=>alert('정답을 맞추지 못하셨습니다ㅠㅠ 다음 문제부터는 관전만 가능합니다.'), 1000);\r\n        })();\r\n    }, [showAnswer])\r\n\r\n    return(\r\n        <Choices>\r\n            <Choice \r\n                onClick = {() => onChoiceClicked(1)}\r\n                no={1}\r\n                text={candidates[0]}\r\n                isSelected={myAnswer===1}\r\n                isAnswer={answer===1 && showAnswer}\r\n                disabled={!available || showAnswer || (!isAdmin && isBlocked)}\r\n            />\r\n            <Choice \r\n                onClick = {() => onChoiceClicked(2)}\r\n                text={candidates[1]}\r\n                isSelected={myAnswer===2}\r\n                isAnswer={answer===2 && showAnswer}\r\n                disabled={!available || showAnswer || (!isAdmin && isBlocked)}\r\n            />\r\n            <Choice \r\n                onClick = {() => onChoiceClicked(3)}\r\n                no={3}\r\n                text={candidates[2]}\r\n                isSelected={myAnswer===3}\r\n                isAnswer={answer===3 && showAnswer}\r\n                disabled={!available || showAnswer || (!isAdmin && isBlocked)}\r\n            />\r\n        </Choices>        \r\n    )\r\n}\r\n\r\nexport default Submit; ","const Quizs = (no, question, answer, candidates) => ({\r\n  no,\r\n  question,\r\n  answer,\r\n  candidates\r\n})\r\n\r\nexport default [\r\n  Quizs(1,\r\n    `예수님은 골고다 언덕에서 십자가에 못 박혀 돌아가셨습니다. 여기서 ‘골고다’의 의미는 무엇일까요?`,\r\n      2,\r\n      [\"죽음\", \"해골산\", \"지옥\"]\r\n    ),\r\n  Quizs(2,\r\n    `다음 중 부활절의 “부”로 옳은 것은 무엇일까요?`,\r\n    1,\r\n    [\"다시 부(復)\", \"뜰 부(浮)\", \"미쁠 부(孚)\"]\r\n  ),\r\n  Quizs(3,\r\n    `예수님은 3일 만에 부활하신 후 여러 사람들에게 자신의 모습을 보이셨습니다.  이때 예수님의 부활을 가장 처음 목격한 인물은 누구일까요?`,\r\n      2,\r\n      [\"배드로\", \"막달라 마리아\", \"요한\"]\r\n    ),\r\n    Quizs(4,\r\n      ` 도마는 부활하신 예수님의 못 찔린 자국을 보고자 했습니다. 도마가 보고자한 예수님의 못 자국이 아닌 곳은 어디일까요?`,\r\n      1,\r\n      [\"발\", \"손\", \"옆구리\"]\r\n    ),\r\n  Quizs(5,\r\n    `부활절은 영어로 ‘Easter’ 입니다. Easter의 어원은 무엇일까요?`,\r\n    3,\r\n    [\"Eous(새벽의)\", \"Eurus(바람)\", \"Eostre(봄의 여신)\"]\r\n  ),\r\n  Quizs(6,\r\n    `부활 후에 예수님은 엠마오라는 마을로 가는 두 제자와 동행하십니다. 이때 두 제자 중 한명의 이름은 무엇일까요?`,\r\n    3,\r\n    [\"맛디아\", \"다대오\", \"글로바\"]\r\n  ),\r\n  Quizs(7,\r\n    `지난주 종려주일에 드린 대학부 테네브레 예배에 대한 설명으로 옳은 것은 무엇일까요?`,\r\n    2,\r\n    [\"테네브레는 영어로 tenebre이다.\", \"탁현수 목사님의 설교 제목은 '베드로를 보시니' 이었다. \", \"남산 산책에서 받은 말씀카드는 누가복음 10장 45절이다.\"]\r\n  ),\r\n  Quizs(8,\r\n    `부활절은 과거 325년 니케아 공의회에서 서방교회들의 기준을 따라 정해졌습니다. 이때 정해진 부활절의 기준은 무엇일까요? `,\r\n    1,\r\n    [\"춘분 다음 보름달 이후의 첫 주일\", \"양력 4월의 첫 번째 주일\", \"음력 3월의 첫 번째 주일\"]\r\n  ),\r\n  Quizs(9,\r\n    `폴란드에서는 부활절 다음 월요일에 함께 ‘이것’을 하며 서로의 건강과 안전을 기원합니다. ‘이것’은 무엇일까요?`,\r\n    3,\r\n    [\"나뭇가지 씹기\", \"땅에 달걀 껍질 묻기\", \"물 뿌리기\"]\r\n  ),\r\n  Quizs(10,\r\n    `Re VS 100의 진행자인 안태호 벗님은 1997년생(빠른)입니다. 그렇다면 1997년도의 부활절은 언제였을까요?`,\r\n    1,\r\n    [\"1997년 3월 30일\", \"1997년 4월 7일\", \"1997년 4월 15일 \"]\r\n  )\r\n];","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport media from \"../styles/media\";\r\n\r\nconst QuestionWrapper = styled.div`\r\n    max-width: 100%;\r\n    display: inline-flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: ${({theme}) => theme.colors.main};\r\n    color: ${({theme}) => theme.colors.text};\r\n    border: 5px solid ${({theme}) => theme.colors.border};\r\n    border-bottom: none;\r\n    border-radius: 5px;\r\n    font-size: 2rem;\r\n    font-weight: bolder;\r\n    letter-spacing: 1.5px;\r\n    line-height: 50px;\r\n    padding: 20px;\r\n    ${media.tablet`\r\n      font-size: 1.5rem;\r\n      line-height: 40px;\r\n      word-break: break-all;\r\n      padding: 10px;\r\n  `}\r\n`\r\n\r\nconst Quiz = ({question}) => {\r\n  \r\n  return (\r\n    <QuestionWrapper>\r\n      {question}\r\n    </QuestionWrapper>\r\n  )\r\n}\r\n\r\nexport default Quiz;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Box from '../materials/Box';\r\n\r\nconst Modal = styled.div`\r\n\tz-index: 10;\r\n\tdisplay: ${({show}) => (show ? 'flex' : 'none')};\r\n    justify-content: center;\r\n    align-items: center;\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\theight: 100vh;\r\n\twidth:100vw;\r\n\tbackground: rgba(0,0,0,0.5);\r\n`;\r\n\r\nconst Container = styled(Box)`\r\n    background-color: #eee;\r\n    box-shadow: 0px 2px 6px grey;\r\n    border-radius: 10px;\r\n    padding: 10px;\r\n    width: 450px;\r\n    height: 300px;\r\n`\r\n\r\nconst BarChart = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 60px 270px 80px;\r\n    grid-template-rows: repeat(3, 50px);\r\n`\r\n\r\nconst Bar = styled.div`\r\n    height: 15px;\r\n    width: ${({perc}) => 1+perc+'%'};\r\n    background-color: ${({color}) => color};\r\n`\r\n\r\nconst Chance = ({visible, toggle, participants}) => {\r\n    const [a, b, c] = participants;\r\n    const sum =(a+b+c)/100;\r\n    return (\r\n        <Modal show={visible} onClick={toggle}>\r\n            <Container>\r\n                <BarChart>\r\n                    <Box>1번</Box>\r\n                    <Box left>\r\n                        <Bar perc={a/sum} color=\"#cf0c0c\" />\r\n                    </Box>\r\n                    <Box>{a}명</Box>\r\n\r\n                    <Box>2번</Box>\r\n                    <Box left>\r\n                        <Bar perc={b/sum} color=\"#20d6a0\"/>\r\n                    </Box>\r\n                    <Box>{b}명</Box>\r\n                    <Box>3번</Box>\r\n                    <Box left>\r\n                        <Bar perc={c/sum} color=\"#245cbb\"/>\r\n                    </Box>\r\n                    <Box>{c}명</Box>\r\n                </BarChart>\r\n            </Container>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default Chance;","import React, { useEffect, useState } from 'react';\r\nimport rgbHex from 'rgb-hex';\r\nimport styled from 'styled-components';\r\n\r\nconst Guage = styled.div`\r\n    width: 100%;\r\n    font-size: 20px;\r\n    color: #ddd;\r\n    @media(max-width:480px){\r\n        height: 50px;\r\n        max-width: 100px;\r\n        font-size: 20px;\r\n    }\r\n    @media(min-width:480px){\r\n        height: 60px;\r\n        max-width: 120px;\r\n        font-size: 26px;\r\n    }\r\n    @media(min-width:1080px){\r\n        height: 90px;\r\n        max-width: 180px;\r\n        font-size: 32px;\r\n    }\r\n`\r\n\r\n\r\nconst GuageBody = styled.div`\r\n    width: 100%;\r\n    height: 0;\r\n    padding-bottom: 50%;\r\n    background: #b6d5f8;\r\n    position: relative;\r\n    border-top-left-radius: 100% 200%;\r\n    border-top-right-radius: 100% 200%;\r\n    overflow: hidden;\r\n`\r\n\r\nconst GuageFill = styled.div`\r\n    position: absolute;\r\n    top: 100%;\r\n    left: 0;\r\n    width: inherit;\r\n    height: 100%;\r\n    transform-origin: center top;\r\n    transform: rotate(0.25turn);\r\n    transition: transform 0.2s ease-out;\r\n    background-color: ${({offset}) => '#'+rgbHex(offset, offset, 255)};\r\n    transform: rotate( ${({perc}) => perc /2 }turn);\r\n`\r\n\r\nconst GuageCover = styled.div`\r\n    width: 75%;\r\n    height: 150%;\r\n    background-color: #152764;\r\n    border-radius: 50%;\r\n    position: absolute;\r\n    top: 25%;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n\r\n    /* Text */\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding-bottom: 25%;\r\n    box-sizing: border-box;\r\n    font-weight: bolder;\r\n`\r\n\r\n\r\nconst Timer = ({seconds}) => {\r\n    const perc = seconds / 60;\r\n    const [offset, setOffset] = useState(1);\r\n\r\n    useEffect(() => {\r\n        setOffset(parseInt( perc > 1 ? 1 : perc < 0 ? 0 :55+192*(1-perc)));\r\n    },[seconds])\r\n\r\n    return (\r\n        <Guage>\r\n            <GuageBody>\r\n                <GuageFill offset={offset} perc={perc} />\r\n                <GuageCover>{seconds}</GuageCover>\r\n            </GuageBody>\r\n        </Guage>\r\n    )\r\n}\r\n\r\n\r\nexport default Timer;","import React, { useEffect, useState } from 'react';\r\nimport { dbService } from '../firebase';\r\nimport Board from '../components/Board';\r\nimport Submit from '../components/Submit';\r\nimport Quizs from '../Quizs';\r\nimport Button from '../materials/Button';\r\nimport styled from 'styled-components';\r\nimport Quiz from '../components/Quiz';\r\nimport Chance from '../components/Chance';\r\nimport Timer from '../components/Timer';\r\nimport media from '../styles/media';\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-rows: auto auto auto auto;\r\n  width: 100%;\r\n`\r\n\r\nconst TopWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: auto auto;\r\n  margin-bottom: 10px;\r\n  & > div:nth-child(2){\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: flex-end;\r\n    & > button {\r\n      margin: 0;\r\n    }\r\n  }\r\n`\r\n\r\nconst QuizWrapper = styled.div`\r\n    display: grid;\r\n    grid-template-rows: 360px auto auto;\r\n    background-color: ${({theme}) => theme.colors.border};\r\n    border-radius: 15px;\r\n    box-shadow: 10px 10px 20px black;\r\n    ${media.tablet`\r\n    grid-template-columns: 100%;\r\n    grid-template-rows: 300px;\r\n  `}\r\n`\r\n\r\nconst ButtonsWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  & > button {\r\n    margin: 8px 4px;\r\n  }\r\n`\r\n\r\nconst Question = ({userObj, doc_user_id, currentInfo}) => {\r\n  const {currentQuiz, showAnswer, showHint, isBlocked, part, startedTimestamp} = currentInfo;\r\n  const {isAdmin} = userObj;\r\n  const quiz = Quizs[currentQuiz];\r\n  const [participants, setParticipants] = useState([0, 0, 0]);\r\n  const [surv,setSurv] = useState(0);\r\n  //Timer useState\r\n  const [seconds, setSeconds] = useState(60);\r\n\r\n  // modal 바깥 부분 클릭 시 숨기기\r\n  const [display, setDisplay] = useState(false);\r\n  const toggleHint = () => setDisplay(prev => !prev);\r\n\r\n  useEffect(() => {\r\n    dbService.collection(\"users\").onSnapshot( snapshot => {\r\n      const survCount = snapshot.docs.map( doc => doc.data()).map( p => p.available);;\r\n      setSurv(survCount.filter(a => a).length)\r\n    })\r\n  }, [currentQuiz]);\r\n\r\n  const onPrevClicked = async() => {    \r\n    if( currentQuiz <= 0 ) return;\r\n    await dbService.collection('current').doc('current').update({\r\n        currentQuiz: currentQuiz-1,\r\n        showAnswer: false,\r\n        isBlocked: false,\r\n        startedTimestamp: new Date().getTime()\r\n    })\r\n  }\r\n  \r\n  //next click 할때 타이머 초기화\r\n  const onNextClicked = () => {\r\n    //마지막 문제 이후, 최후의 n인일 때 isDone 으로\r\n    if( currentQuiz === Quizs.length-1 || surv <= 2){\r\n      dbService.collection('current').doc('current').update({\r\n        isDone: true\r\n      })\r\n      setSeconds(0);\r\n    }\r\n    else{\r\n      dbService.collection('current').doc('current').update({\r\n        currentQuiz: currentQuiz+1,\r\n        showAnswer: false,\r\n        isBlocked: false,\r\n        startedTimestamp: new Date().getTime()\r\n      })\r\n    }\r\n  }\r\n\r\n  const onClickHint = async() => {\r\n      toggleHint();\r\n      await dbService.collection('current').doc('current').update({\r\n        showHint: true\r\n      });\r\n  }\r\n\r\n  const block = async() => {\r\n    await dbService.collection('current').doc('current').update({\r\n      isBlocked: true,\r\n      startedTimestamp: 0\r\n    });\r\n  }\r\n\r\n  const revealAnswer = async() => {\r\n      dbService.collection('current').doc('current').update({\r\n          showAnswer: true\r\n      });\r\n      const usersRef = dbService.collection('users');\r\n      usersRef.where(\r\n            `quiz_${quiz.no}`, \r\n            '!=', \r\n            quiz.answer\r\n        ).get()\r\n        .then((querySnapshot) => {\r\n\r\n          // 정답자 0명인 경우\r\n          if(participants[quiz.answer-1]===0)\r\n            throw new Error('AllFailed')\r\n\r\n          // 탈락자 available: false 처리\r\n          let batch = dbService.batch();\r\n          console.log(querySnapshot.docs.length)\r\n          querySnapshot.docs.forEach((doc) => {\r\n              const docRef = usersRef.doc(doc.data().uid);\r\n              batch.update(docRef, {available: false});\r\n          })\r\n          batch.commit();\r\n      }).catch( error => {\r\n          if(error.message === 'AllFailed')\r\n            setTimeout(() => alert(\r\n              '모든 참여자가 탈락하였으므로 다음 라운드에서 모두 재도전합니다.'\r\n            ), 3000)\r\n          console.log(\"Error getting document:\", error);\r\n      });\r\n  }\r\n  \r\n  // 선지 별 선택자 수\r\n  useEffect(() => {\r\n    dbService.collection(\"users\").onSnapshot( snapshot => {\r\n      const people = snapshot.docs.map( doc => doc.data()).map( p => p['quiz_' + quiz.no]);\r\n      setParticipants([\r\n        people.filter(a => a===1).length,\r\n        people.filter(a => a===2).length,\r\n        people.filter(a => a===3).length\r\n      ])\r\n    })\r\n  }, [currentQuiz]);\r\n  \r\n  //Timer\r\n  useEffect(() => {\r\n      const countdown = setInterval(() => {\r\n        const now = new Date().getTime();\r\n        const passed = parseInt((now - startedTimestamp) / 1000);\r\n        setSeconds(passed > 61 ? 0 : 61-passed);\r\n        if(passed >=61)\r\n          clearInterval(countdown);\r\n      }, 1000);\r\n      return () => clearInterval(countdown);\r\n    }, [startedTimestamp]);\r\n\r\n    return (\r\n      <Wrapper>\r\n        <TopWrapper>\r\n        <Timer seconds={seconds} />\r\n          {isAdmin ?\r\n            <div>\r\n              {!showHint &&\r\n                <Button onClick={onClickHint} disabled={showHint}> \r\n                  벗님들 찬스 \r\n                </Button>\r\n              } \r\n            </div>\r\n              : <div />\r\n          }\r\n        </TopWrapper>\r\n        <QuizWrapper>\r\n            <Quiz question={quiz.question}/>\r\n            <Submit\r\n                quiz={quiz} \r\n                userObj={userObj} \r\n                doc_user_id={doc_user_id}\r\n                showAnswer={showAnswer}\r\n                isBlocked={isBlocked}\r\n            />\r\n        </QuizWrapper>\r\n          {isAdmin &&\r\n          <ButtonsWrapper>\r\n              <Button color=\"secondary\" onClick = {onPrevClicked}> 이전 </Button>\r\n              {\r\n                !isBlocked ?\r\n                <Button color=\"secondary\" onClick = {block}> 시간 종료 </Button>\r\n                :showAnswer ?\r\n                <Button onClick = {onNextClicked}> 다음 </Button>\r\n                :\r\n                <Button onClick = {revealAnswer}> 정답 공개 </Button>\r\n              }\r\n          </ButtonsWrapper>\r\n          }\r\n            <Board {...{showAnswer, quiz, part, participants, currentInfo, userObj}}/>\r\n            <Chance visible={display} toggle={toggleHint} participants={participants} currentQuiz={currentQuiz}/>\r\n      </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Question;","import styled from \"styled-components\";\r\n\r\n// params\r\n// color : secondary | primary\r\n\r\nconst Btn = styled.button`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-radius: 3px;\r\n    padding: 0.5rem 0;\r\n    margin: 0.5rem 20rem;\r\n    width: ${({fullWidth}) => fullWidth ? \"100%\" : '8rem'};\r\n    font-weight: ${({bold}) => bold ? 'bold' : 'normal'};\r\n    font-size: ${({fontSize}) => fontSize ? fontSize+'px' : '1rem'};\r\n    ${({color, theme:{colors}, disabled})=> {\r\n        const colorset = color===\"secondary\" ? colors.secondary : colors.primary;\r\n        return `\r\n            background: ${ disabled? colorset.disabled : colorset.main};\r\n            color: ${colorset.text};\r\n            border: ${colorset.border} solid thin;\r\n            ${!disabled &&`\r\n                &:hover {\r\n                    background: ${color===\"text\" ? 'transparent' : colorset.accent };\r\n                    outline: none;\r\n                }\r\n            `}\r\n        `\r\n    }}\r\n`\r\n\r\nexport default Btn;\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport { dbService } from '../firebase';\r\nimport styled from 'styled-components';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport { faCrown } from '@fortawesome/free-solid-svg-icons';\r\nimport Btn from '../materials/Btn'\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    font-size: 2em;\r\n    font-weight: bolder;\r\n    text-align: center;\r\n    align-items: center;\r\n    letter-spacing: 1.5px;\r\n    color: #dbe2fd;\r\n`\r\nconst Winner = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 50px 200px 50px;\r\n`\r\n\r\nconst Survivor = ({userObj}) => {\r\n    const [lastSurv, setLastSurv] = useState([]);\r\n    const {isAdmin} = userObj;\r\n\r\n    useEffect(() => {\r\n        return dbService.collection(\"users\").onSnapshot( snapshot => {\r\n            const surv = snapshot.docs.map( doc => doc.data())\r\n                .filter(a => a.available)\r\n                .map( b => b.alias);\r\n            setLastSurv(surv);\r\n        })\r\n    }, []);\r\n\r\n    const onClickToDraw = () => {\r\n        dbService.collection('current').doc('current').update({\r\n            isDraw : true\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            <p>\r\n                최후의 {lastSurv.length}인\r\n            </p>\r\n            {\r\n                lastSurv.map((surv, idx) => (\r\n                    <Winner key={idx}>\r\n                        <FontAwesomeIcon icon={faCrown}/>\r\n                            &nbsp;[&nbsp;{surv}&nbsp;]&nbsp;\r\n                        <FontAwesomeIcon icon={faCrown} />\r\n                    </Winner>\r\n                ))\r\n            }\r\n            <p>\r\n                문자가 발송될 예정이니 꼭 확인해주세요!\r\n            </p>\r\n\r\n            { isAdmin &&\r\n                <Btn onClick = {onClickToDraw}> 추첨 하러 가기 </Btn>\r\n            }\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Survivor; ","export default __webpack_public_path__ + \"static/media/frame.4a975f16.png\";","import React, { useState } from 'react';\r\nimport { dbService } from '../firebase';\r\nimport Button from '../materials/Button';\r\nimport qrcode from '../assets/images/frame.png';\r\nimport styled from 'styled-components';\r\nimport media from '../styles/media';\r\nimport Box from '../materials/Box';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUserFriends } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  text-align: left;\r\n  ${media.tablet`\r\n    grid-template-columns: 100%;\r\n    grid-template-rows: auto auto;\r\n  `}\r\n`\r\nconst Description = styled.div`\r\n  margin: 30px;\r\n  color: white;\r\n`\r\n\r\nconst Explanation =styled.div`\r\n  font-weight: 600;\r\n  letter-spacing: 0.5px;\r\n  line-height: 50px;\r\n  font-size: large;  \r\n  ${media.tablet`\r\n    font-size: medium;\r\n    background: linear-gradient(to bottom, #fce4ec, #e3f2fd);\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n    margin: 5px;\r\n    line-height: 1.5em;\r\n`}\r\n`\r\nconst Counter = styled.div`\r\n  float: right;\r\n  font-weight: bolder;\r\n  font-size: 2rem;\r\n`\r\n\r\nconst Img = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\n\r\nconst Descript = ({isAdmin}) => {\r\n  const [part, setPart] = useState(0);\r\n\r\n  const onClickToQuiz = () => {  \r\n    // 모든 참여자를 available하게 바꿈. \r\n      const usersRef = dbService.collection('users');\r\n      usersRef.get()\r\n        .then((querySnapshot) => {\r\n          let batch = dbService.batch();\r\n          querySnapshot.docs.forEach((doc) => {\r\n            const docRef = usersRef.doc(doc.data().uid);\r\n            batch.update(docRef, {available: true});\r\n          })\r\n          batch.commit();\r\n      }).catch( error => {\r\n          console.log(\"Error getting document:\", error);\r\n      }); \r\n    // toQuiz 누르는 순간까지 참여한 벗님 수 기록\r\n      dbService.collection('current').doc('current').update({\r\n        toQuiz: true,\r\n        part,\r\n        showAnswer: false,\r\n        block: false,\r\n        showHint: false,\r\n        currentQuiz: 0,\r\n        isDone: false,\r\n        isDraw: false,\r\n        startedTimestamp: new Date().getTime()\r\n      })\r\n      \r\n  }\r\n  \r\n\r\n    dbService.collection(\"users\").onSnapshot( snapshot => {\r\n      const people = snapshot.docs.map( doc => doc.data()).length\r\n      setPart(people)\r\n    })\r\n\r\n  \r\n  return (\r\n      <Wrapper>\r\n        <div>\r\n          <Description>\r\n          <Counter>\r\n            <FontAwesomeIcon icon={faUserFriends}/> &nbsp;\r\n            {part}\r\n          </Counter>\r\n          <h1>Rules</h1>\r\n            <Explanation>\r\n              <ol>\r\n                <li>3개의 보기 중 정답을 고릅니다. </li>\r\n                <li>100인이 먼저 문제를 다 푼 후, 게스트 2인이 문제를 풉니다. </li>\r\n                <li>각 문제 당 1분의 시간제한이 있습니다. </li>\r\n                <li>각 단계의 정답자만 다음 단계로 넘어갈 수 있습니다. </li>\r\n                <li>최후의 5인이 남을 때까지 퀴즈가 진행됩니다. </li>\r\n                <li>중간 참여는 불가능합니다.</li>\r\n                <li>게스트 2명은 함께 2번의 찬스를 쓸 수 있습니다. </li>\r\n                <ul>\r\n                  <li>한벗님 찬스 : 원하는 한 명의 답을 알 수 있습니다. </li>\r\n                  <li>벗님들 찬스 : 모든 벗님이 선택한 답을 알 수 있습니다.</li>\r\n                </ul>\r\n              </ol>\r\n            </Explanation>\r\n          </Description>\r\n            \r\n            {isAdmin && \r\n            <Box>\r\n              <Button onClick = {onClickToQuiz}> 퀴즈 시작하기</Button> \r\n            </Box>\r\n            }\r\n          </div>\r\n          {isAdmin && \r\n            <Img src={qrcode}/>\r\n          }\r\n      </Wrapper> \r\n  );\r\n}\r\n\r\nexport default Descript;","import React, { useEffect, useState } from 'react';\r\nimport { dbService } from '../firebase';\r\nimport styled from 'styled-components';\r\nimport media from '../styles/media';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport { faSmile } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    font-size: 2em;\r\n    font-weight: bolder;\r\n    text-align: center;\r\n    align-items: center;\r\n    letter-spacing: 1.5px;\r\n    line-height: 1.8em;\r\n    color: white;\r\n    ${media.tablet`\r\n      font-size: 1.5em;\r\n    `}\r\n    ${media.phone`\r\n      font-size: 1em;\r\n    `}\r\n`\r\n\r\nconst Drawn = styled.div`\r\n    font-style: italic;\r\n`\r\n\r\nconst Draw = () => {\r\n  const [drawn, setDrawn] = useState([]);\r\n\r\n  function shuffle(a) {\r\n    for (let i = a.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [a[i], a[j]] = [a[j], a[i]];\r\n    }\r\n    return a;\r\n  }\r\n\r\n  useEffect(() => {\r\n    dbService.collection(\"users\").onSnapshot( snapshot => {\r\n      const draw = snapshot.docs.map( doc => doc.data())\r\n        .filter(a => !a.isAdmin)\r\n        .map( b => b.alias)\r\n        .slice(0, 8);\r\n      shuffle(draw);\r\n      setDrawn(draw);\r\n    })\r\n}, []);\r\n\r\n    return (\r\n      <Wrapper>\r\n        <div>\r\n          당첨 축하드립니다!!!<br/>\r\n          문자가 발송될 예정이니 꼭 확인해주세요 :) \r\n        </div>\r\n        <div>\r\n        <br/>\r\n          <FontAwesomeIcon icon={faSmile} />  추첨자 명단  <FontAwesomeIcon icon={faSmile} />\r\n        </div>\r\n        <Drawn>{drawn.join(', ')}</Drawn> \r\n        <br/><br/>\r\n        <div>\r\n          모든 퀴즈 순서가 끝났습니다!\r\n        </div>\r\n      </Wrapper>\r\n    );\r\n  }\r\n\r\nexport default Draw;","  \r\nimport React from 'react';\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Auth from '../routes/Auth';\r\nimport SignIn from '../routes/SignIn';\r\nimport Question from '../routes/Question';\r\nimport Survivor from '../routes/Survivor';\r\nimport Descript from '../routes/Descript';\r\nimport Draw from '../routes/Draw';\r\n\r\nconst AppRouter = ({isLoggedIn, userObj, hasAccount, doc_user_id, currentInfo}) => {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          {\r\n            isLoggedIn ? \r\n              hasAccount ?\r\n                <>\r\n                {\r\n                  !currentInfo.toQuiz ? \r\n                    <Route exact path=\"/\">\r\n                      <Descript\r\n                        isAdmin={userObj.isAdmin} \r\n                      />\r\n                    </Route>\r\n                    :\r\n                    <>\r\n                    {\r\n                      currentInfo.isDone ?\r\n                        currentInfo.isDraw ?\r\n                        <Route exact path=\"/\">\r\n                          <Draw\r\n                            userObj = {userObj} \r\n                          />\r\n                        </Route>\r\n                        :\r\n                        <Route exact path=\"/\">\r\n                          <Survivor\r\n                            userObj = {userObj} \r\n                            currentInfo = {currentInfo}\r\n                          />\r\n                        </Route>\r\n                      :\r\n                    <Route exact path=\"/\">\r\n                      <Question\r\n                        userObj = {userObj} \r\n                        doc_user_id = {doc_user_id} \r\n                        currentInfo = {currentInfo}\r\n                      />\r\n                    </Route>\r\n                    }\r\n                  </>\r\n                }\r\n                </>   \r\n                :\r\n                <Route exact path=\"/\">\r\n                  <SignIn \r\n                  userObj={userObj}\r\n                  currentInfo = {currentInfo}\r\n                  />\r\n                </Route>\r\n            :\r\n            <Route exact path=\"/\">\r\n              <Auth currentInfo = {currentInfo}/>\r\n            </Route>\r\n          }\r\n        </Switch>\r\n      </Router>\r\n    );\r\n}\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { authService, dbService } from '../firebase';\r\nimport MainWrapper from '../MainWrapper';\r\nimport theme from '../styles/theme';\r\nimport AppRouter from './Router';\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n  const [hasAccount, setHasAccount] = useState(false);\r\n  const [docUserId, setDocUserId] = useState('');\r\n  const [currentInfo, setCurrentInfo] = useState({currentQuiz:0, showAnswer:false, showHint:false, toQuiz:false, isDone:false, isDraw:false});\r\n\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged(async (user) => {\r\n      if (user) {\r\n        const users = await dbService.collection('users').where('uid','==',user.uid).get();\r\n        setHasAccount(Boolean(users.docs.length))\r\n        try{\r\n          setUserObj(users.docs[0].data());\r\n          setDocUserId(users.docs[0].id);\r\n        }catch(e){\r\n          setUserObj(user)\r\n        }\r\n      }\r\n      else{\r\n        setUserObj(null);\r\n      }\r\n      setInit(true);\r\n    });\r\n  dbService.collection('current').doc('current').onSnapshot(data => {\r\n    setCurrentInfo(data.data())\r\n  });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(!docUserId)\r\n      return;\r\n    dbService.collection('users').doc(docUserId).onSnapshot(snap => {\r\n      setUserObj(snap.data());\r\n    })\r\n  },[docUserId])\r\n\r\n  return (\r\n    // 여기는 테마 적용하기 위한 컴포넌트!\r\n    <ThemeProvider theme={theme}>\r\n      <MainWrapper>\r\n        {init ? \r\n          <AppRouter \r\n            isLoggedIn = {Boolean(userObj)} \r\n            userObj = {userObj}\r\n            hasAccount={hasAccount} \r\n            doc_user_id={docUserId}\r\n            currentInfo={currentInfo}\r\n          />\r\n        :\r\n          <div>\r\n          \"Initializing...\"\r\n          </div>\r\n        }\r\n      </MainWrapper>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}