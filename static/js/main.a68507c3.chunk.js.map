{"version":3,"sources":["firebase.js","routes/SignIn.jsx","routes/Auth.jsx","components/Quiz.jsx","components/Board.jsx","components/Submit.jsx","Quizs.js","Answers.js","routes/Question.jsx","components/Chance1.jsx","components/Chance2.jsx","routes/Hint.jsx","routes/Survivor.jsx","components/Descript.jsx","components/Router.js","components/App.jsx","index.jsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storage","SignIn","userObj","useState","name","setName","alias","setAlias","number","setNumber","history","useHistory","onChange","event","target","value","onSubmit","a","preventDefault","collection","add","uid","isAdmin","alert","go","type","placeholder","required","pattern","Auth","isLoggedIn","setIsLoggedIn","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","onClick","Quiz","quizs","currentQuiz","showAnswer","no","question","answers","className","Board","participants","corrects","Submit","doc_user_id","answer1","answer2","answer3","answer","setAnswer","onNumClick","answerObj","onSubmitClicked","doc","update","Quizs","Answers","Question","currentInfo","isSolved","setIsSolved","setParticipants","setCorrects","onPrevClicked","onNextClick","onClickHint","showHint","onClickDone","isDone","checkSolved","useEffect","onSnapshot","snapshot","peopleAnswers","docs","map","data","length","c","w","forEach","person","includes","Chance1","Chance2","Hint","chance1","setChance1","chance2","setChance2","onClickChance1","onClickChance2","onBackToQuiz","Survivor","Descript","onClickToQuiz","toQuiz","AppRouter","hasAccount","exact","path","App","init","setInit","setUserObj","setHasAccount","docUserId","setDocUserId","setCurrentInfo","onAuthStateChanged","user","where","get","users","Boolean","id","e","snap","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a68507c3.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\"\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCNEEZVWLepSVn_ennOWsbwjL8E2wqnbpQ\",\r\n    authDomain: \"re-vs-100-8ec8b.firebaseapp.com\",\r\n    projectId: \"re-vs-100-8ec8b\",\r\n    storageBucket: \"re-vs-100-8ec8b.appspot.com\",\r\n    messagingSenderId: \"400681423336\",\r\n    appId: \"1:400681423336:web:13667d56d28179863d545d\"\r\n}\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, { useState } from 'react';\r\nimport { dbService } from '../firebase';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst SignIn = ({userObj}) => {\r\n    const [name, setName] = useState(\"\");\r\n    const [alias, setAlias] = useState(\"\");\r\n    const [number, setNumber] = useState(\"\");\r\n    const history = useHistory();\r\n    \r\n    const onChange = (event) => {\r\n      const {target: {name, value}} = event;\r\n      if (name === \"name\"){\r\n        setName(value);\r\n      } else if (name === \"alias\"){\r\n        setAlias(value);\r\n      } else if (name === \"number\"){\r\n        setNumber(value);\r\n      }\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n      event.preventDefault();\r\n      await dbService.collection(\"users\").add({\r\n        uid: userObj.uid,\r\n        name: name,\r\n        alias: alias,\r\n        number: number,\r\n        isAdmin: false\r\n      });\r\n      alert('가입이 완료되었습니다.');\r\n      history.go(0);\r\n    }\r\n\r\n    return (\r\n          <>\r\n          <h2>도전자 정보</h2>\r\n          <form\r\n          onSubmit={onSubmit}\r\n          >\r\n            <input \r\n            name = \"name\"\r\n            type = \"text\"\r\n            placeholder = \"이름\"\r\n            required\r\n            value = {name}\r\n            onChange = {onChange}\r\n            />\r\n            <input \r\n            name = \"alias\"\r\n            type = \"text\"\r\n            placeholder = \"닉네임\"\r\n            required\r\n            value = {alias}\r\n            onChange = {onChange}\r\n            />\r\n            <input \r\n            name = \"number\"\r\n            type = \"tel\"\r\n            placeholder = \"010-1234-5678\"\r\n            pattern =\"[0-9]{3}-[0-9]{4}-[0-9]{4}\"\r\n            required\r\n            value = {number}\r\n            onChange = {onChange}\r\n            />\r\n            <input  \r\n            type=\"submit\"\r\n            onSubmit={onSubmit}\r\n            />\r\n          </form>\r\n          </>\r\n    );\r\n  }\r\n\r\nexport default SignIn;","import React, { useState } from 'react';\r\nimport {authService, firebaseInstance} from \"../firebase\";\r\nimport SignIn from \"./SignIn\"\r\n\r\nconst Auth = () => {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const onSocialClick = async () => {\r\n        const provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        await authService.signInWithPopup(provider);\r\n        setIsLoggedIn(true);\r\n      }\r\n\r\n  return (\r\n    <>\r\n    { isLoggedIn ?\r\n      <SignIn />\r\n      :\r\n    <button onClick={onSocialClick} name =\"google\">\r\n      구글 아이디로 로그인하기\r\n    </button>\r\n    }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Auth;\r\n","import React from \"react\";\r\n\r\nconst Quiz = ({quizs, currentQuiz ,showAnswer}) => {\r\n  const {no, question, answers} = quizs[currentQuiz];\r\n  \r\n  return (\r\n    <>\r\n        <div className=\"title\"> Q{no}. </div>\r\n        <div className=\"question\"> {question} </div>\r\n        <div className=\"answer\">\r\n            정답 : { showAnswer ? answers[0] : \"???\"}\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Quiz;","import React from 'react';\r\n\r\nconst Board = ({participants, corrects}) => {\r\n    return(\r\n        <>\r\n            <div>\r\n              <div>\r\n                도전자 : {participants}명\r\n              </div>\r\n              <div>\r\n                생존자 : {corrects}명\r\n              </div>\r\n              <div>\r\n                탈락자 : {participants - corrects}명\r\n              </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Board;","import React, { useState } from 'react';\r\nimport { dbService } from '../firebase';\r\n\r\nconst Submit = ({no, userObj, doc_user_id, answers, currentQuiz}) => {\r\n    const {uid, name, number ,isAdmin} = userObj;\r\n    const {answer1, answer2, answer3 } = answers[currentQuiz];\r\n    const [answer, setAnswer] = useState('');\r\n    \r\n    const onNumClick = (event) => {\r\n        event.preventDefault();\r\n        const {target:{value}} = event;\r\n        setAnswer(value)\r\n    }\r\n    const answerObj = {\r\n        uid,\r\n        name,\r\n        answer,\r\n        number,\r\n        isAdmin\r\n    }\r\n\r\n    const onSubmitClicked = async () => {\r\n        if(answer===''){\r\n            alert('정답을 입력해주세요.');\r\n            return;\r\n        }else {\r\n            isAdmin &&\r\n            await dbService.collection('users').doc(doc_user_id).update({\r\n                ['quiz_'+no]: true\r\n            })\r\n            await dbService.collection('current').doc('current').update({\r\n                showAnswer : true\r\n            })\r\n            \r\n            !isAdmin && alert('정답이 제출되었습니다.')\r\n            await dbService.collection('quiz_'+no).add(answerObj)\r\n            await dbService.collection('users').doc(doc_user_id).update({\r\n                ['quiz_'+no]: true\r\n            })\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <button\r\n        value = \"1번\"\r\n        onClick = {onNumClick}\r\n        >\r\n            1번 <br/>\r\n            {answer1}\r\n        </button>\r\n        <button\r\n        value = \"2번\"\r\n        onClick = {onNumClick}\r\n        >\r\n            2번<br/>\r\n            {answer2}\r\n        </button>\r\n        <button\r\n        value = \"3번\"\r\n        onClick = {onNumClick}\r\n        >\r\n            3번<br/>\r\n            {answer3}\r\n        </button>\r\n        <button \r\n        onClick={onSubmitClicked}>\r\n            제출\r\n        </button> \r\n        </>         \r\n    )\r\n}\r\n\r\nexport default Submit; ","const Quizs = (no, question, answers) => ({\r\n  no,\r\n  question,\r\n  answers\r\n})\r\n\r\nexport default [\r\n  Quizs(1,\r\n  `호스트인 안태호 벗님은 1997년생(빠른)이다. \r\n  그렇다면 1997년도의 부활절은 다음 중 언제였을까?`,\r\n  [\"3번\"]),\r\n  Quizs(2,\r\n    `도마는 부활하신 예수님의 못자국을 보고자 했습니다. \r\n    도마가 보길 원했던 예수님의 못자국이 아닌 곳은?`,\r\n  [\"2번\"]),\r\n  Quizs(3,\r\n  `예수님이 며칠만에 부활하셨나요?`,\r\n  [\"3번\"]),\r\n];","const Answers = ( answer1, answer2, answer3 ) => ({\r\n  answer1,\r\n  answer2,\r\n  answer3\r\n})\r\n\r\nexport default [\r\n  Answers(\r\n    \"1997년 4월 7일\",\r\n    \"1997년 4월 15일\",\r\n    \"1997년 3월 30일\"\r\n  ),\r\n  Answers(\r\n    \"손\",\r\n    \"발\",\r\n    \"옆구리\"\r\n  ),\r\n  Answers(\r\n    \"나흘\",\r\n    \"4일\",\r\n    \"사흘\"\r\n  )\r\n]\r\n","import React, { useEffect, useState } from 'react';\r\nimport { dbService } from '../firebase';\r\nimport Quiz from '../components/Quiz';\r\nimport Board from '../components/Board';\r\nimport Submit from '../components/Submit';\r\nimport Quizs from '../Quizs';\r\nimport Answers from '../Answers';\r\n\r\nconst Question = ({userObj, doc_user_id, currentInfo}) => {\r\n  const {currentQuiz, showAnswer} = currentInfo;\r\n  const {isAdmin} = userObj;\r\n  const [isSolved, setIsSolved] = useState(false);\r\n  const [participants, setParticipants] = useState(0);\r\n  const [corrects, setCorrects] = useState(0);\r\n\r\nconst onPrevClicked = async() => {\r\n  await dbService.collection('current').doc('current').update({\r\n      currentQuiz: currentQuiz-1,\r\n      showAnswer: false\r\n  })\r\n}\r\n\r\n  const onNextClick = async() => {\r\n    await dbService.collection('current').doc('current').update({\r\n      currentQuiz: currentQuiz+1,\r\n      showAnswer: false\r\n    });\r\n  }\r\n\r\n  const onClickHint = async() => {\r\n      await dbService.collection('current').doc('current').update({\r\n      showHint: true\r\n    });\r\n  }\r\n\r\n  const onClickDone = async() => {\r\n    await dbService.collection('current').doc('current').update({\r\n    isDone: true\r\n  });\r\n}\r\n\r\n  const isCorrectAnswer = (answer, correctAnswerArr) => correctAnswerArr.includes(answer);\r\n\r\n  const checkSolved = async () => {\r\n    setIsSolved(userObj['quiz_'+Quizs[currentQuiz].no]);\r\n  }\r\n\r\n    useEffect(() => {\r\n      checkSolved()\r\n    }, [currentQuiz, userObj])\r\n\r\n  useEffect(() => {\r\n    const {no, answers} = Quizs[currentQuiz];\r\n    dbService.collection(\"quiz_\"+no).onSnapshot( snapshot => {\r\n        const peopleAnswers = snapshot.docs.map( doc => doc.data());\r\n        setParticipants(peopleAnswers.length);\r\n        let c = 0, w = [];\r\n        peopleAnswers.forEach( person => {\r\n          isCorrectAnswer(person.answer, answers)?\r\n            c++\r\n            :\r\n            w = [...w, person]\r\n        })\r\n        setCorrects(c);\r\n    })\r\n  }, [currentQuiz])\r\n\r\n  return (\r\n    <>\r\n        <Quiz \r\n          quizs={Quizs} \r\n          currentQuiz = {currentQuiz}\r\n          showAnswer={showAnswer}/>\r\n          {isAdmin &&\r\n          <>\r\n            <button\r\n            onClick = {onPrevClicked}>\r\n              이전\r\n            </button>\r\n            <button\r\n            onClick = {onNextClick}>\r\n              다음\r\n            </button>\r\n            <button\r\n            onClick = {onClickHint}>\r\n              힌트\r\n            </button>\r\n            <button\r\n            onClick = {onClickDone}>\r\n              결과\r\n            </button>\r\n            <br/>\r\n          </>\r\n        }\r\n\r\n        {Quizs.length && \r\n          !showAnswer&& (\r\n            isSolved ?\r\n            <h4>정답을 제출하셨습니다</h4>\r\n            : \r\n            <>\r\n              <Submit \r\n              no={Quizs[currentQuiz].no} \r\n              userObj={userObj} \r\n              doc_user_id={doc_user_id}\r\n              answers = {Answers}\r\n              currentQuiz ={currentQuiz}\r\n              />\r\n            </>\r\n          )}\r\n        \r\n        <Board \r\n        participants={participants} \r\n        corrects={corrects}\r\n        />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Question;","import React from 'react';\r\n\r\nconst Chance1 = () => {\r\n\r\n  return (\r\n    <div>\r\n      한벗님 찬스!\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chance1;","import React from 'react';\r\n\r\nconst Chance2 = () => {\r\n\r\n  return (\r\n    <div> \r\n      벗님들 찬스!\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chance2;","import React, { useState } from 'react';\r\nimport { dbService } from '../firebase';\r\nimport Chance1 from '../components/Chance1';\r\nimport Chance2 from '../components/Chance2';\r\n\r\nconst Hint = (userObj) => {\r\n  const {isAdmin} = userObj;\r\n  const [chance1, setChance1] = useState(false);\r\n  const [chance2, setChance2] = useState(false);\r\n  const onClickChance1 = async() => {\r\n    setChance1(true);\r\n    await dbService.collection('current').doc('current').update({\r\n      showHint: true\r\n    });\r\n  }\r\n\r\n  const onClickChance2 = async() => {\r\n    setChance2(true);\r\n    await dbService.collection('current').doc('current').update({\r\n      showHint: true\r\n    });\r\n  }\r\n\r\n  const onBackToQuiz = async() => {\r\n    await dbService.collection('current').doc('current').update({\r\n      showHint: false\r\n    });\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <>\r\n      {chance1 ? \r\n      <Chance1 />\r\n      :\r\n      <button onClick = {onClickChance1}>\r\n        한벗님 찬스\r\n      </button>\r\n      }</>\r\n      <>\r\n      {chance2 ? \r\n      <Chance2 />\r\n      :\r\n      <button onClick = {onClickChance2}>\r\n        벗님들 찬스\r\n      </button>\r\n      }</>\r\n      <button onClick = {onBackToQuiz}>\r\n        퀴즈로 돌아가기\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Hint;","import React, { useState, useEffect } from 'react';\r\nimport { dbService } from '../firebase';\r\nimport Quizs from '../Quizs';\r\n\r\nconst Survivor = ( currentInfo) => {\r\n    // type error 떠서 주석 처리 해놓습니당. \r\n    // const {currentQuiz} = currentInfo;\r\n    // const [survivor, setSurvivor] = useState([]);\r\n    \r\n    // useEffect(() => {\r\n    //     const {no} = Quizs[currentQuiz];\r\n    //     dbService.collection(\"quiz_\"+ no).onSnapshot( snapshot => {\r\n    //         const survivors = snapshot.docs.map( doc => doc.data());\r\n    //         setSurvivor(survivors.length)\r\n    //         console.log(setSurvivor)\r\n    //     })\r\n    // })\r\n\r\n    return (\r\n        <div>\r\n        최후의 생존자\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Survivor; ","import React from 'react';\r\nimport { dbService } from '../firebase';\r\n\r\nconst Descript = () => {\r\n\r\n  const onClickToQuiz = async () => {\r\n    await dbService.collection('current').doc('current').update({\r\n      toQuiz: true\r\n    });\r\n  }\r\n\r\n  return (\r\n      <>\r\n        <h1>Rules</h1>\r\n          <div>\r\n            1.3개의 보기 중 정답을 고른다. <br/>\r\n            2.100인이 먼저 문제를 다 푼 후, 게스트 2인이 푼다. <br/>\r\n            3.문제를 푸는 데는 1분의 시간제한이 있다. <br/>\r\n            4.문제를 틀리면 탈락이며, 정답자만 다음 문제로 넘어간다.(중간 참여 불가능) <br/>\r\n            5. 정답자가 8명(?) 이하로 남으면 프로그램이 종료한다. <br/>\r\n            6. 게스트 2명은 함께 2번의 찬스를 쓸 수 있다.<br/><br/>\r\n            한벗님 찬스 : 원하는 한 명의 답을 알 수 있다, 없을 시 호스트가 지정. <br/>\r\n            벗님들 찬스 : 모든 벗님이 선택한 답을 알 수 있다.\r\n          </div>\r\n          <button\r\n        onClick = {onClickToQuiz}\r\n        >\r\n          ToQuiz\r\n        </button>\r\n      </> \r\n  );\r\n}\r\n\r\nexport default Descript;","import React from 'react';\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Auth from '../routes/Auth';\r\nimport SignIn from '../routes/SignIn';\r\nimport Question from '../routes/Question';\r\nimport Hint from '../routes/Hint';\r\nimport Survivor from '../routes/Survivor';\r\nimport Descript from './Descript';\r\nimport Quizs from \"../Quizs\"\r\n\r\nconst AppRouter = ({isLoggedIn, userObj, hasAccount, doc_user_id, currentInfo}) => {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          {isLoggedIn ? (\r\n            <>\r\n            {hasAccount ? (\r\n              <>\r\n              {currentInfo.showHint ?\r\n                <Route exact path = \"/\">\r\n                  <Hint\r\n                  userObj = {userObj} \r\n                  doc_user_id = {doc_user_id} \r\n                  currentInfo = {currentInfo}/>\r\n                </Route>\r\n              :\r\n              <>\r\n              {currentInfo.toQuiz ?(\r\n                <>\r\n                {currentInfo.isDone ?(\r\n                <Route exact path = \"/\">\r\n                  <Survivor\r\n                  userObj = {userObj} \r\n                  doc_user_id = {doc_user_id} \r\n                  currentInfo = {currentInfo}/>\r\n                </Route>  \r\n                ):(\r\n                <Route exact path = \"/\">\r\n                  <Question\r\n                  userObj = {userObj} \r\n                  doc_user_id = {doc_user_id} \r\n                  currentInfo = {currentInfo}/>\r\n                </Route>\r\n              )}</>\r\n              ):(\r\n                  <Route path = \"/\">\r\n                    <Descript\r\n                    userObj = {userObj} \r\n                    doc_user_id = {doc_user_id} \r\n                    currentInfo = {currentInfo} />\r\n                  </Route>\r\n                )\r\n              }</>\r\n            }</>\r\n            ):\r\n            <Route exact path = \"/\">\r\n              <SignIn\r\n              userObj = {userObj} \r\n              />\r\n            </Route>\r\n            }</>\r\n            ):\r\n              <Route exact path = \"/\">\r\n                <Auth />\r\n              </Route> \r\n          }\r\n        </Switch>\r\n      </Router>\r\n    );\r\n}\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from 'react';\r\nimport { authService, dbService } from '../firebase';\r\nimport AppRouter from './Router';\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n  const [hasAccount, setHasAccount] = useState(false);\r\n  const [docUserId, setDocUserId] = useState('');\r\n  const [currentInfo, setCurrentInfo] = useState({currentQuiz:0, showAnswer:false, showHint:false, toQuiz:false, isDone:false});\r\n\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged(async (user) => {\r\n      if (user) {\r\n        const users = await dbService.collection('users').where('uid','==',user.uid).get();\r\n        setHasAccount(Boolean(users.docs.length))\r\n        try{\r\n          setUserObj(users.docs[0].data());\r\n          setDocUserId(users.docs[0].id);\r\n        }catch(e){\r\n          setUserObj(user)\r\n        }\r\n      }\r\n      else{\r\n        setUserObj(null);\r\n      }\r\n      setInit(true);\r\n    });\r\n  dbService.collection('current').doc('current').onSnapshot(data => {\r\n    setCurrentInfo(data.data())\r\n  });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(!docUserId)\r\n      return;\r\n    dbService.collection('users').doc(docUserId).onSnapshot(snap => {\r\n      setUserObj(snap.data());\r\n    })\r\n  },[docUserId])\r\n\r\n  return (\r\n    <>\r\n      {init ? (\r\n        <AppRouter \r\n        isLoggedIn = {Boolean(userObj)} \r\n        userObj = {userObj}\r\n        hasAccount={hasAccount} \r\n        doc_user_id={docUserId}\r\n        currentInfo={currentInfo}\r\n        />\r\n      ):(\r\n        \"Initializing...\"\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}